# Generated by Django 2.2.12 on 2020-04-13 12:16

import ad_posts.helpers
from django.conf import settings
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import imagekit.models.fields


class Migration(migrations.Migration):

    dependencies = [
        ('ad_posts', '0001_initial'),
        ('users', '0004_auto_20200413_1142'),
    ]

    operations = [
        migrations.CreateModel(
            name='Subscribe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('added_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='added_user', to=settings.AUTH_USER_MODEL, verbose_name='На кого подписался')),
                ('adding_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adding_user', to=settings.AUTH_USER_MODEL, verbose_name='Кто подписался')),
            ],
            options={
                'verbose_name_plural': 'Подписки',
                'verbose_name': 'Подписки',
            },
        ),
        migrations.CreateModel(
            name='OneUserLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_ru', models.CharField(blank=True, max_length=100, verbose_name='Город по-русски')),
                ('city_en', models.CharField(blank=True, max_length=100, verbose_name='Город по-английски')),
                ('city_lat', models.FloatField(blank=True, null=True, verbose_name='Ширина города')),
                ('city_lon', models.FloatField(blank=True, null=True, verbose_name='Долгота города')),
                ('region_ru', models.CharField(blank=True, max_length=100, verbose_name='Регион по-русски')),
                ('region_en', models.CharField(blank=True, max_length=100, verbose_name='Регион по-английски')),
                ('country_ru', models.CharField(blank=True, max_length=100, verbose_name='Страна по-русски')),
                ('country_en', models.CharField(blank=True, max_length=100, verbose_name='Страна по-английски')),
                ('phone', models.CharField(blank=True, max_length=5, verbose_name='Начало номера')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_location', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name_plural': 'Местоположения 1',
                'verbose_name': 'Местоположение 1',
            },
        ),
        migrations.CreateModel(
            name='IPUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_1', models.GenericIPAddressField(blank=True, null=True, verbose_name='ip 1')),
                ('ip_2', models.GenericIPAddressField(blank=True, null=True, verbose_name='ip 2')),
                ('ip_3', models.GenericIPAddressField(blank=True, null=True, verbose_name='ip 3')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_ip', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name_plural': 'ip пользователей',
                'verbose_name': 'ip пользователя',
            },
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Что понравилось / не понравилось')),
                ('message', models.CharField(max_length=1000, verbose_name='Сообщение')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('star', models.CharField(choices=[('1', 'Очень плохо'), ('2', 'Плохо'), ('3', 'Нормально'), ('4', 'Хорошо'), ('5', 'Отлично')], max_length=50, verbose_name='Рейтинг')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guest_receiver', to=settings.AUTH_USER_MODEL, verbose_name='Кому написал')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guest_sender', to=settings.AUTH_USER_MODEL, verbose_name='Кто написал')),
            ],
            options={
                'verbose_name_plural': 'Отзывы на пользователя',
                'verbose_name': 'Отзыв на пользователя',
            },
        ),
        migrations.CreateModel(
            name='Favourites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('ad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ad_posts.Ad', verbose_name='Объявление')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name_plural': 'Избранное',
                'verbose_name': 'Избранное',
            },
        ),
        migrations.CreateModel(
            name='ChatAd',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_ad', to='ad_posts.Ad', verbose_name='Обсуждаемый товар')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name_plural': 'Обсуждаемый товар',
                'verbose_name': 'Обсуждаемый товар',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('bio', models.TextField(blank=True, max_length=1000, verbose_name='Биография')),
                ('sity', models.CharField(blank=True, max_length=100, verbose_name='Местоположение')),
                ('status', models.CharField(blank=True, max_length=100, verbose_name='статус-слоган')),
                ('vk_url', models.URLField(blank=True, verbose_name='Ссылка на vk')),
                ('youtube_url', models.URLField(blank=True, verbose_name='Ссылка на youtube')),
                ('facebook_url', models.URLField(blank=True, verbose_name='Ссылка на facebook')),
                ('instagram_url', models.URLField(blank=True, verbose_name='Ссылка на instagram')),
                ('twitter_url', models.URLField(blank=True, verbose_name='Ссылка на twitter')),
                ('avatar', imagekit.models.fields.ProcessedImageField(upload_to=ad_posts.helpers.upload_to_user_directory)),
                ('user', models.OneToOneField(db_index=False, on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name_plural': 'Профили пользователей',
                'verbose_name': 'Профиль пользователя',
                'index_together': {('id', 'user')},
            },
        ),
        migrations.CreateModel(
            name='TwoUserLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_ru', models.CharField(blank=True, max_length=100, verbose_name='Город по-русски')),
                ('city_en', models.CharField(blank=True, max_length=100, verbose_name='Город по-английски')),
                ('city_lat', models.FloatField(blank=True, null=True, verbose_name='Ширина города')),
                ('city_lon', models.FloatField(blank=True, null=True, verbose_name='Долгота города')),
                ('region_ru', models.CharField(blank=True, max_length=100, verbose_name='Регион по-русски')),
                ('region_en', models.CharField(blank=True, max_length=100, verbose_name='Регион по-английски')),
                ('country_ru', models.CharField(blank=True, max_length=100, verbose_name='Страна по-русски')),
                ('country_en', models.CharField(blank=True, max_length=100, verbose_name='Страна по-английски')),
                ('phone', models.CharField(blank=True, max_length=5, verbose_name='Начало номера')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_location_2', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name_plural': 'Местоположения 2',
                'verbose_name': 'Местоположение 2',
                'index_together': {('id', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ThreeUserLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_ru', models.CharField(blank=True, max_length=100, verbose_name='Город по-русски')),
                ('city_en', models.CharField(blank=True, max_length=100, verbose_name='Город по-английски')),
                ('city_lat', models.FloatField(blank=True, null=True, verbose_name='Ширина города')),
                ('city_lon', models.FloatField(blank=True, null=True, verbose_name='Долгота города')),
                ('region_ru', models.CharField(blank=True, max_length=100, verbose_name='Регион по-русски')),
                ('region_en', models.CharField(blank=True, max_length=100, verbose_name='Регион по-английски')),
                ('country_ru', models.CharField(blank=True, max_length=100, verbose_name='Страна по-русски')),
                ('country_en', models.CharField(blank=True, max_length=100, verbose_name='Страна по-английски')),
                ('phone', models.CharField(blank=True, max_length=5, verbose_name='Начало номера')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_location_3', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name_plural': 'Местоположения 3',
                'verbose_name': 'Местоположение 3',
                'index_together': {('id', 'user')},
            },
        ),
        migrations.AddIndex(
            model_name='subscribe',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['created'], name='users_subsc_created_638c8c_brin'),
        ),
        migrations.AlterUniqueTogether(
            name='subscribe',
            unique_together={('adding_user', 'added_user')},
        ),
        migrations.AlterIndexTogether(
            name='oneuserlocation',
            index_together={('id', 'user')},
        ),
        migrations.AlterIndexTogether(
            name='ipuser',
            index_together={('id', 'user')},
        ),
        migrations.AddIndex(
            model_name='guest',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['created'], name='users_guest_created_8f1de0_brin'),
        ),
        migrations.AddIndex(
            model_name='favourites',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['created'], name='users_favou_created_a5c5cf_brin'),
        ),
        migrations.AlterUniqueTogether(
            name='favourites',
            unique_together={('ad', 'user')},
        ),
        migrations.AddIndex(
            model_name='chatad',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['created'], name='users_chata_created_408b5e_brin'),
        ),
    ]
