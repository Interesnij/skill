# Generated by Django 2.2.12 on 2020-04-13 10:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ad_posts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Auto',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('brand', models.CharField(blank=True, choices=[('Acura', 'Acura'), ('AC', 'AC'), ('Alfa Romeo', 'Alfa Romeo'), ('Alpina', 'Alpina'), ('Aro', 'Aro'), ('Asia', 'Asia'), ('Aston Martin', 'Aston Martin'), ('Audi', 'Audi'), ('BAW', 'BAW'), ('Bentley', 'Bentley'), ('BMW', 'BMW'), ('Brilliance', 'Brilliance'), ('Bugatti', 'Bugatti'), ('Buick', 'Buick'), ('BYD', 'BYD'), ('Cadillac', 'Cadillac'), ('Changan', 'Changan'), ('ChangFeng', 'ChangFeng'), ('Chery', 'Chery'), ('Chevrolet', 'Chevrolet'), ('Chrysler', 'Chrysler'), ('Citroen', 'Citroen'), ('Dacia', 'Dacia'), ('Dadi', 'Dadi'), ('Daewoo', 'Daewoo'), ('Daihatsu', 'Daihatsu'), ('Daimler', 'Daimler'), ('Datsun', 'Datsun'), ('Derways', 'Derways'), ('Dodge', 'Dodge'), ('Dongfeng', 'Dongfeng'), ('Doninvest', 'Doninvest'), ('DS', 'DS'), ('DW Hover', 'DW Hover'), ('Eagle', 'Eagle'), ('FAW', 'FAW'), ('Ferrari', 'Ferrari'), ('FIAT', 'FIAT'), ('Ford', 'Ford'), ('Foton', 'Foton'), ('GAC', 'GAC'), ('Geely', 'Geely'), ('Genesis', 'Genesis'), ('Geo', 'Geo'), ('GMC', 'GMC'), ('Great Wall', 'Great Wall'), ('Hafei', 'Hafei'), ('Haima', 'Haima'), ('Haval', 'Haval'), ('Hawtai', 'Hawtai'), ('Honda', 'Honda'), ('HuangHai', 'HuangHai'), ('Hummer', 'Hummer'), ('Hyindai', 'Hyindai'), ('Infiniti', 'Infiniti'), ('Iran Khondro', 'Iran Khondro'), ('Isuzu', 'Isuzu'), ('Iveco', 'Iveco'), ('JAC', 'JAC'), ('Jaguar', 'Jaguar'), ('Jeep', 'Jeep'), ('Jinbei', 'Jinbei'), ('JMC', 'JMC'), ('KIA', 'KIA'), ('Lambordhini', 'Lambordhini'), ('Lancia', 'Lancia'), ('Land Rover', 'Land Rover'), ('Landwind', 'Landwind'), ('LDV', 'LDV'), ('Lexus', 'Lexus'), ('LIFAN', 'LIFAN'), ('Lincoln', 'Lincoln'), ('Lotus', 'Lotus'), ('Luxgen', 'Luxgen'), ('Mahindra', 'Mahindra'), ('Maserati', 'Maserati'), ('Maybach', 'Maybach'), ('Mazda', 'Mazda'), ('Mercedes-Benz', 'Mercedes-Benz'), ('Mercury', 'Mercury'), ('Metrocab', 'Metrocab'), ('MG', 'MG'), ('MINI', 'MINI'), ('Mitsubishi', 'Mitsubishi'), ('Mitsuoka', 'Mitsuoka'), ('Morgan', 'Morgan'), ('Morris', 'Morris'), ('Nissan', 'Nissan'), ('Oldsmobile', 'Oldsmobile'), ('Opel', 'Opel'), ('Peugeot', 'Peugeot'), ('Plymouth', 'Plymouth'), ('Pontiac', 'Pontiac'), ('Porsche', 'Porsche'), ('Proton', 'Proton'), ('Ravon', 'Ravon'), ('Renault', 'Renault'), ('Rolls-Royce', 'Rolls-Royce'), ('Ronart', 'Ronart'), ('Rover', 'Rover'), ('Saab', 'Saab'), ('Saturn', 'Saturn'), ('Scion', 'Scion'), ('SEAT', 'SEAT'), ('Shuanghuan', 'Shuanghuan'), ('Scoda', 'Scoda'), ('SMA', 'SMA'), ('Smart', 'Smart'), ('SsangYong', 'SsangYong'), ('Subaru', 'Subaru'), ('Suzuki', 'Suzuki'), ('Talbot', 'Talbot'), ('Tata', 'Tata'), ('Tesla', 'Tesla'), ('Tianma', 'Tianma'), ('Tianye', 'Tianye'), ('Toyota', 'Toyota'), ('Trabant', 'Trabant'), ('Volkswagen', 'Volkswagen'), ('Volvo', 'Volvo'), ('Vortex', 'Vortex'), ('Watrburg', 'Watrburg'), ('Xin Kai', 'Xin Kai'), ('ZOTYE', 'ZOTYE'), ('ZX', 'ZX'), ('ВАЗ (LADA)', 'ВАЗ (LADA)'), ('ВИС', 'ВИС'), ('ГАЗ', 'ГАЗ'), ('ЗАЗ', 'ЗАЗ'), ('ЗИЛ', 'ЗИЛ'), ('ИЖ', 'ИЖ'), ('ЛуАЗ', 'ЛуАЗ'), ('Москвич', 'Москвич'), ('РАФ', 'РАФ'), ('СМЗ', 'СМЗ'), ('ТагАЗ', 'ТагАЗ'), ('УАЗ', 'УАЗ')], max_length=50, verbose_name='Марка автомобиля')),
                ('model', models.CharField(blank=True, max_length=100, verbose_name='Модель автомобиля')),
                ('year', models.CharField(blank=True, max_length=100, verbose_name='Год выпуска')),
                ('color', models.CharField(blank=True, choices=[('Белый', 'Белый'), ('Серебряный', 'Серебряный'), ('Серый', 'Серый'), ('Чёрный', 'Чёрный'), ('Коричневый', 'Коричневый'), ('Золотой', 'Золотой'), ('Бежевый', 'Бежевый'), ('Красный', 'Красный'), ('Оранжевый', 'Оранжевый'), ('Жёлтый', 'Жёлтый'), ('Зелёный', 'Зелёный'), ('Голубой', 'Голубой'), ('Синий', 'Синий'), ('Фиолетовый', 'Фиолетовый'), ('Пурпурный', 'Пурпурный'), ('Розовый', 'Розовый')], max_length=45, verbose_name='Цвет')),
                ('run', models.CharField(blank=True, max_length=100, verbose_name='Пробег')),
                ('condition', models.CharField(blank=True, choices=[('Не битый', 'Не битый'), ('Битый', 'Битый')], max_length=50, verbose_name='Состояние')),
                ('to', models.CharField(blank=True, choices=[('Есть сервисная книжка', 'Есть сервисная книжка'), ('Обслуживался у дилера', 'Обслуживался у дилера'), ('На гарантии', 'На гарантии')], max_length=50, verbose_name='Данные о ТО')),
                ('power_steering', models.CharField(blank=True, choices=[('Гидро-', 'Гидро-'), ('Электро-', 'Электро-'), ('Электрогидро-', 'Электрогидро-')], max_length=50, verbose_name='Усилитель руля')),
                ('link', models.CharField(blank=True, max_length=100, verbose_name='Видео c YouTube')),
                ('place_of_inspection', models.CharField(blank=True, max_length=200, verbose_name='Место осмотра')),
                ('salon', models.CharField(blank=True, choices=[('Кожа', 'Кожа'), ('Ткань', 'Ткань'), ('Велюр', 'Велюр'), ('Комбинированный', 'Комбинированный')], max_length=50, verbose_name='Салон')),
                ('leather_steering_wheel', models.BooleanField(default=False, verbose_name='Кожаный руль')),
                ('hatch', models.BooleanField(default=False, verbose_name='Люк')),
                ('climate_control', models.CharField(blank=True, choices=[('Кондиционер', 'Кондиционер'), ('Климат-контроль однозонный', 'Климат-контроль однозонный'), ('Климат-контроль многозонный', 'Климат-контроль многозонный')], max_length=50, verbose_name='Управление климатом')),
                ('athermal_glazing', models.BooleanField(default=False, verbose_name='Атермальное остекление')),
                ('heated_front_seats', models.BooleanField(default=False, verbose_name='Обогрев передних сидений')),
                ('heated_reart_seats', models.BooleanField(default=False, verbose_name='Обогрев задних сидений')),
                ('heated_mirrors', models.BooleanField(default=False, verbose_name='Обогрев зеркал')),
                ('heated_rear_window', models.BooleanField(default=False, verbose_name='Обогрев заднего стекла')),
                ('heated_steering_column', models.BooleanField(default=False, verbose_name='Обогрев рулевой колонки')),
                ('front_seats', models.BooleanField(default=False, verbose_name='Электропривод передних сидений')),
                ('back_seats', models.BooleanField(default=False, verbose_name='Электропривод задних сидений')),
                ('mirrors', models.BooleanField(default=False, verbose_name='Электропривод зеркал')),
                ('folding_mirrors', models.BooleanField(default=False, verbose_name='Складывание зеркал')),
                ('steering_column', models.BooleanField(default=False, verbose_name='Электропривод рулевой колонки')),
                ('memory_front_seats', models.BooleanField(default=False, verbose_name='Память передних сидений')),
                ('memory_reart_seats', models.BooleanField(default=False, verbose_name='Память задних сидений')),
                ('memory_mirrors', models.BooleanField(default=False, verbose_name='Память зеркал')),
                ('memory_steering_column', models.BooleanField(default=False, verbose_name='Память рулевой колонки')),
                ('parking_attendant', models.BooleanField(default=False, verbose_name='Автопарковщик')),
                ('rain_sensor', models.BooleanField(default=False, verbose_name='Датчик дождя')),
                ('sheine_sensor', models.BooleanField(default=False, verbose_name='Датчик света')),
                ('rear_parking_sensors', models.BooleanField(default=False, verbose_name='Парктроник задний')),
                ('front_parking_sensors', models.BooleanField(default=False, verbose_name='Парктроник передний')),
                ('blind_spot_monitoring_system', models.BooleanField(default=False, verbose_name='Система контроля слепых зон')),
                ('rear_view_camera', models.BooleanField(default=False, verbose_name='Камера заднего вида')),
                ('cruise_control', models.BooleanField(default=False, verbose_name='Круиз контроль')),
                ('onboard_computer', models.BooleanField(default=False, verbose_name='Бортовой компьютер')),
                ('signaling', models.BooleanField(default=False, verbose_name='Сигнализация')),
                ('сentral_locking', models.BooleanField(default=False, verbose_name='Центральный замок')),
                ('immobilizer', models.BooleanField(default=False, verbose_name='Иммобилайзер')),
                ('satellite', models.BooleanField(default=False, verbose_name='Спутник')),
                ('front_airbags', models.BooleanField(default=False, verbose_name='Фронтальные')),
                ('knee_airbags', models.BooleanField(default=False, verbose_name='Коленные')),
                ('curtain_airbags', models.BooleanField(default=False, verbose_name='Шторки')),
                ('side_front_airbags', models.BooleanField(default=False, verbose_name='Боковые передние')),
                ('side_rear_airbags', models.BooleanField(default=False, verbose_name='Боковые задние')),
                ('ABS', models.BooleanField(default=False, verbose_name='Автоблокировка тормозов')),
                ('anti_slip', models.BooleanField(default=False, verbose_name='Антипробуксовка')),
                ('directional_stability', models.BooleanField(default=False, verbose_name='Курсовая устойчивость')),
                ('brake_force_distribution', models.BooleanField(default=False, verbose_name='Распред. тормозных усилий ')),
                ('emergency_braking', models.BooleanField(default=False, verbose_name='Экстренное торможение')),
                ('differential_lock', models.BooleanField(default=False, verbose_name='Блок. дифференциала')),
                ('pedestrian_detection', models.BooleanField(default=False, verbose_name='Обнаружение пешеходов')),
                ('CD_DVD', models.BooleanField(default=False, verbose_name='CD/DVD/Blu-ray')),
                ('MP3', models.BooleanField(default=False, verbose_name='MP3')),
                ('radio', models.BooleanField(default=False, verbose_name='Радио')),
                ('TV', models.BooleanField(default=False, verbose_name='TV')),
                ('video', models.BooleanField(default=False, verbose_name='Видео')),
                ('steering_wheel_control', models.BooleanField(default=False, verbose_name='Управление на руле')),
                ('USB', models.BooleanField(default=False, verbose_name='USB')),
                ('AUX', models.BooleanField(default=False, verbose_name='AUX')),
                ('bluetooth', models.BooleanField(default=False, verbose_name='bluetooth')),
                ('GPS', models.BooleanField(default=False, verbose_name='GPS-навигатор')),
                ('audio', models.CharField(blank=True, choices=[('2 колонки', '2 колонки'), ('4 колонки', '4 колонки'), ('6 колонок', '6 колонок'), ('8+ колонок', '8+ колонок')], max_length=50, verbose_name='Аудиосистема')),
                ('subwoofer', models.BooleanField(default=False, verbose_name='Сабвуфер')),
                ('headlights', models.CharField(blank=True, choices=[('Галогенные', 'Галогенные'), ('Ксеноновые', 'Ксеноновые'), ('Светодиодные', 'Светодиодные')], max_length=50, verbose_name='Фары')),
                ('fog', models.BooleanField(default=False, verbose_name='Противотуманные')),
                ('headlight_washers', models.BooleanField(default=False, verbose_name='Омыватели фар')),
                ('adaptive_lighting', models.BooleanField(default=False, verbose_name='Адаптивное освещение')),
                ('tires', models.CharField(blank=True, choices=[('7"', '7"'), ('8"', '8"'), ('9"', '9"'), ('10"', '10"'), ('11"', '11"'), ('12"', '12"'), ('13"', '13"'), ('14"', '14"'), ('15"', '15"'), ('16"', '16"'), ('17"', '17"'), ('18"', '18"'), ('19"', '19"'), ('20"', '20"'), ('21"', '21"'), ('22"', '22"'), ('23"', '23"'), ('24"', '24"'), ('25"', '25"'), ('26"', '26"'), ('27"', '27"'), ('28"', '28"'), ('29"', '29"'), ('30"', '30"')], max_length=50, verbose_name='')),
                ('winter_tyre', models.BooleanField(default=False, verbose_name='Зимние шины в комплекте')),
            ],
            options={
                'verbose_name_plural': 'Автомобиль',
                'verbose_name': 'Автомобиль',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='Baby',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('brand_car_seat', models.CharField(blank=True, choices=[('Baby Care', 'Baby Care'), ('Bertoni Lorelli', 'Bertoni Lorelli'), ('Bebe Comfort', 'Bebe Comfort'), ('BRITAX ROMER', 'BRITAX ROMER'), ('Carmate', 'Carmate'), ('Chicco', 'Chicco'), ('Crocs', 'Crocs'), ('Coto Baby', 'Coto Baby'), ('Cybex', 'Cybex'), ('Graco', 'Graco'), ('Happy Baby', 'Happy Baby'), ('Inglesina', 'Inglesina'), ('Kenga', 'Kenga'), ('Lider Kids', 'Lider Kids'), ('Maxi-Cosi', 'Maxi-Cosi'), ('Nania', 'Nania'), ('Peg-Perego', 'Peg-Perego'), ('Recaro', 'Recaro'), ('Siger', 'Siger'), ('Рант', 'Рант'), ('Мишутка', 'Мишутка')], max_length=50, verbose_name='Марка автокресла')),
                ('group', models.CharField(blank=True, choices=[('0 (до 10кг)', '0 (до 10кг)'), ('0+ (до 13кг)', '0+ (до 13кг)'), ('0/1 (до 18кг)', '0/1 (до 18кг)'), ('0/1/2 (до 25кг)', '0/1/2 (до 25кг)'), ('0/1/2/3 (до 36кг)', '0/1/2/3 (до 36кг)'), ('1 (9-18 кг)', '1 (9-18 кг)'), ('1/2 (9-25 кг)', '1/2 (9-25 кг)'), ('1/2/3 (9-36 кг)', '1/2/3 (9-36 кг) Baby'), ('2/3 (15-36 кг)', '2/3 (15-36 кг)'), ('3 (22-26 кг)', '3 (22-26 кг)')], max_length=50, verbose_name='Группа')),
                ('binding', models.CharField(blank=True, choices=[('Isofix', 'Isofix'), ('Latch', 'Latch'), ('Автомобильные ремни', 'Автомобильные ремни')], max_length=50, verbose_name='Крепление')),
                ('feature', models.CharField(blank=True, choices=[('Ручка для переноски', 'Ручка для переноски'), ('Поворотный механизм', 'Поворотный механизм'), ('Автоматическое натяжение ремня', 'Автоматическое натяжение ремня'), ('Фиксатор натяжения ремня', 'Фиксатор натяжения ремня'), ('Система упора в пол', 'Система упора в пол'), ('Пятиточечные ремни', 'Пятиточечные ремни'), ('Съемная обивка', 'Съемная обивка')], max_length=50, verbose_name='Особенности')),
                ('regulation', models.CharField(blank=True, choices=[('Боковина', 'Боковина'), ('Ручка', 'Ручка'), ('Спинка', 'Спинка'), ('Подголовник', 'Подголовник'), ('Положение для сна', 'Положение для сна')], max_length=50, verbose_name='Регулировки')),
                ('health', models.CharField(blank=True, choices=[('Гигиена полости рта', 'Гигиена полости рта'), ('Детские весы', 'Детские весы'), ('Кремы, присыпки', 'Кремы, присыпки'), ('Назальные аспираторы', 'Назальные аспираторы'), ('Прорезыватели', 'Прорезыватели'), ('Термометры', 'Термометры')], max_length=50, verbose_name='Здоровье и уход')),
                ('game', models.CharField(blank=True, choices=[('Воздушные змеи', 'Baby Care'), ('Детские бассейны', 'Bertoni Lorelli'), ('Детские батуты', 'Bebe Comfort'), ('Железные дороги', 'BRITAX ROMER'), ('Играем в профессии', 'Carmate'), ('Игровые домики, палатки', 'Chicco'), ('Игровые комплексы, горки', 'Crocs'), ('Игрушечное оружие', 'Coto Baby'), ('Игрушки для ванной', 'Cybex'), ('Каталки, качалки', 'Graco'), ('Квадрокоптеры', 'Happy Baby'), ('Конструкторы', 'Inglesina'), ('Куклы', 'Kenga'), ('Машинки, техника', 'Lider Kids'), ('Мобили в кроватку', 'Maxi-Cosi'), ('Музыкальные игрушки', 'Nania'), ('Мыльные пузыри', 'Peg-Perego'), ('Мягкие игрушки', 'Recaro'), ('Напольные коврики', 'Siger'), ('Обучающие игрушки', 'Рант'), ('Пазлы', 'Мишутка'), ('Песочницы и игрушки', 'Maxi-Cosi'), ('Погремушки', 'Nania'), ('Роботы', 'Peg-Perego'), ('Сборные модели', 'Recaro'), ('Фигурки, солдатики', 'Siger'), ('Электромобили', 'Рант')], max_length=50, verbose_name='Игрушки, игры')),
                ('brand_pram', models.CharField(blank=True, choices=[('Adamex', 'Adamex'), ('Anex', 'Anex'), ('Aprica', 'Aprica'), ('Baby Care', 'Baby Care'), ('Babyhit', 'Babyhit'), ('Baby Design', 'Baby Design'), ('Baby-Merc', 'Baby-Merc'), ('Babetto', 'Babetto'), ('BeBe-Mobile', 'BeBe-Mobile'), ('Bertoni Lorelli', 'Bertoni Lorelli'), ('Camarelo', 'Camarelo'), ('Capella', 'Capella'), ('Chicco', 'Chicco'), ('Cosatto', 'Cosatto'), ('Emmaljunga', 'Emmaljunga'), ('Esspero', 'Esspero'), ('FD Design', 'FD Design'), ('FoppaPedretti', 'FoppaPedretti'), ('Geaby', 'Geaby'), ('Happi Baby', 'Happi Baby'), ('Hauck', 'Hauck'), ('Inglesina', 'Inglesina'), ('Indigo', 'Indigo'), ('Jane', 'Jane'), ('Jedo', 'Jedo'), ('Jetem', 'Jetem'), ('Lonex', 'Lonex'), ('Maclarem', 'Maclarem'), ('Marimex', 'Marimex'), ('Maxima', 'Maxima'), ('Navington', 'Navington'), ('Noordline', 'Noordline'), ('Peg-Perego', 'Peg-Perego'), ('Phil&Teds', 'Phil&Teds'), ('Reindeer', 'Reindeer'), ('ROAN', 'ROAN'), ('Rico', 'Rico'), ('Silver Cross', 'Silver Cross'), ('Slaro', 'Slaro'), ('Tutis', 'Tutis'), ('Teutonia', 'Teutonia'), ('Tutic', 'Tutic'), ('Tutec', 'Tutec'), ('Мишутка', 'Мишутка')], max_length=50, verbose_name='Марка коляски')),
                ('type_pram', models.CharField(blank=True, choices=[('Люлька', 'Люлька'), ('Прогулочная', 'Прогулочная'), ('Трансформер', 'Трансформер'), ('Универсальная', 'Универсальная')], max_length=50, verbose_name='Тип коляски')),
                ('age_pram', models.CharField(blank=True, choices=[('До 1 года', 'До 1 года'), ('До 2 лет', 'До 2 лет'), ('До 3 лет', 'До 3 лет'), ('До 4 лет', 'До 4 лет'), ('До 5 лет', 'До 5 лет')], max_length=50, verbose_name='Возраст')),
                ('number_blocks', models.CharField(blank=True, choices=[('Для одного', 'Для одного'), ('Для двойни', 'Для двойни'), ('Для тройни', 'Для тройни'), ('Для погодок', 'Для погодок')], max_length=50, verbose_name='Количество блоков')),
                ('type_wheel', models.CharField(blank=True, choices=[('Пневматические', 'Пневматические'), ('Пластиковые', 'Пластиковые'), ('Гелевые', 'Гелевые'), ('Резиновые', 'Резиновые')], max_length=50, verbose_name='Тип колес')),
                ('properties', models.CharField(blank=True, choices=[('Сумка', 'Сумка'), ('Дождевик', 'Дождевик'), ('Матрас', 'Матрас'), ('Корзина для покупок', 'Корзина для покупок'), ('Конверт', 'Конверт'), ('Муфта', 'Муфта'), ('Москитная сетка', 'Москитная сетка'), ('Чехол на ноги', 'Чехол на ноги'), ('Ремни', 'Ремни'), ('Бампер', 'Бампер'), ('Козырек от солнца', 'Козырек от солнца'), ('Для бега', 'Для бега')], max_length=50, verbose_name='Особенности')),
                ('feeding', models.CharField(blank=True, choices=[('Бутылочки, ниблеры', 'Бутылочки, ниблеры'), ('Детская посуда', 'Детская посуда'), ('Детское питание', 'Детское питание'), ('Молокоотсосы', 'Молокоотсосы'), ('Нагрудники, слюнявчики', 'Нагрудники, слюнявчики'), ('Накладки для груди', 'Накладки для груди'), ('Поильники', 'Поильники'), ('Соски', 'Соски'), ('Стерилизаторы, подогреватели', 'Стерилизаторы, подогреватели'), ('Хранение грудного молока', 'Хранение грудного молока')], max_length=50, verbose_name='Кормление и питание')),
                ('bath', models.CharField(blank=True, choices=[('Ванночки', 'Ванночки'), ('Круги на шею', 'Круги на шею'), ('Мочалки, губки', 'Мочалки, губки'), ('Нарукавники', 'Нарукавники'), ('Сиденья, горки', 'Сиденья, горки'), ('Шампуни, мыло', 'Шампуни, мыло')], max_length=50, verbose_name='Купание')),
                ('room', models.CharField(blank=True, choices=[('Защитные накладки, барьеры', 'Защитные накладки, барьеры'), ('Качели, шезлонги', 'Качели, шезлонги'), ('Колыбели, люльки', 'Колыбели, люльки'), ('Кроватки', 'Кроватки'), ('Манежи', 'Манежи'), ('Ночники', 'Ночники'), ('Пеленальные столики', 'Пеленальные столики'), ('Постельные принадлежности', 'Постельные принадлежности'), ('Ростомеры', 'Ростомеры'), ('Стульчики для кормления', 'Стульчики для кормления'), ('Ходунки, прыгунки', 'Ходунки, прыгунки')], max_length=50, verbose_name='Обустройство детской')),
                ('diapers', models.CharField(blank=True, choices=[('Горшки, сиденья', 'Горшки, сиденья'), ('Накопители подгузников', 'Накопители подгузников'), ('Пеленки, клеенки', 'Пеленки, клеенки'), ('Подгузники', 'Подгузники')], max_length=50, verbose_name='Подгузники и горшки')),
                ('babysitter', models.CharField(blank=True, choices=[('Видеоняня', 'Видеоняня'), ('Радионяня', 'Радионяня')], max_length=50, verbose_name='Радио- и видеоняня')),
                ('mom', models.CharField(blank=True, choices=[('Бандажи', 'Бандажи'), ('Подушки, кресла для мам', 'Подушки, кресла для мам'), ('Сумки-кенгуру, слинги', 'Сумки-кенгуру, слинги')], max_length=50, verbose_name='Товары для мам')),
                ('study', models.CharField(blank=True, choices=[('Глобусы, карты', 'Глобусы, карты'), ('Доски, мольберты', 'Доски, мольберты'), ('Канцтовары', 'Канцтовары'), ('Пеналы', 'Пеналы'), ('Учебники', 'Учебники')], max_length=50, verbose_name='Товары для учебы')),
            ],
            options={
                'verbose_name_plural': 'Детские товары',
                'verbose_name': 'Детские товары',
                'db_table': 'Детские товары',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='Beauty',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('type_makeup', models.CharField(blank=True, choices=[('Бальзам для губ', 'Бальзам для губ'), ('Блеск для губ', 'Блеск для губ'), ('Кисти, спонжи', 'Кисти, спонжи'), ('Контуры для губ', 'Контуры для губ'), ('Корректоры, хайлайтеры', 'Корректоры, хайлайтеры'), ('Накладные ресницы', 'Накладные ресницы'), ('Помады', 'Помады'), ('Пудра', 'Пудра'), ('Румяна', 'Румяна'), ('Средства для бровей', 'Средства для бровей'), ('Тени', 'Тени'), ('Тон, основа', 'Тон, основа'), ('Тушь, подводки', 'Тушь, подводки'), ('Щипцы для ресниц', 'Щипцы для ресниц')], max_length=50, verbose_name='Макияж')),
                ('type_manicure', models.CharField(blank=True, choices=[('Для снятия лака', 'Для снятия лака'), ('Инструменты, наборы', 'Инструменты, наборы'), ('Лаки, гели', 'Лаки, гели'), ('Лампы для сушки', 'Лампы для сушки'), ('Накладные ногти, хайлайтеры', 'Накладные ногти, хайлайтеры'), ('Украшения, дизайн', 'Украшения, дизайн')], max_length=50, verbose_name='Маникюр и педикюр')),
                ('health_products', models.CharField(blank=True, choices=[('Бандажи, бинты', 'Бандажи, бинты'), ('Глюкометры', 'Глюкометры'), ('Инвалидные коляски', 'Инвалидные коляски'), ('Ингаляторы', 'Ингаляторы'), ('Контактные линзы', 'Контактные линзы'), ('Корсеты, ортезы', 'Корсеты, ортезы'), ('Костыли, трости', 'Костыли, трости'), ('Массажеры', 'Массажеры'), ('Миостимуляторы', 'Миостимуляторы'), ('Ортопедические стельки', 'Ортопедические стельки'), ('Очки', 'Очки'), ('Пластыри', 'Пластыри'), ('Слуховае аппараты', 'Слуховае аппараты'), ('Термометры', 'Термометры'), ('Тонометры', 'Тонометры')], max_length=50, verbose_name='Товары для здоровья')),
                ('gender', models.CharField(blank=True, choices=[('Женская', 'Женская'), ('Мужская', 'Мужская')], max_length=50, verbose_name='Пол')),
                ('parfum', models.CharField(blank=True, choices=[('Духи', 'Духи'), ('Пробники', 'Пробники'), ('Туалетная вода', 'Туалетная вода')], max_length=50, verbose_name='Парфюмерия')),
                ('hair', models.CharField(blank=True, choices=[('Бритвенные станки', 'Бритвенные станки'), ('Машинки для стрижки', 'Машинки для стрижки'), ('Ножницы', 'Ножницы'), ('Средства для бритья', 'Средства для бритья'), ('Средства для эпиляции', 'Средства для эпиляции'), ('Электробритвы', 'Электробритвы'), ('Эпиляторы', 'Эпиляторы')], max_length=50, verbose_name='Стрижка и удаление волос')),
                ('hair_care', models.CharField(blank=True, choices=[('Кондиционеры, бальзамы', 'Кондиционеры, бальзамы'), ('Маски, сыворотки', 'Маски, сыворотки'), ('Масла', 'Масла'), ('Средства для окрашивания', 'Средства для окрашивания'), ('Шампуни', 'Шампуни')], max_length=50, verbose_name='Уход за волосами')),
                ('skin_care', models.CharField(blank=True, choices=[('Гели', 'Гели'), ('Кремы, бальзамы', 'Кремы, бальзамы'), ('Маски, сыворотки', 'Маски, сыворотки'), ('Масла', 'Масла'), ('Молочко', 'Молочко'), ('Пенки, эмульсии', 'Пенки, эмульсии'), ('Скрабы, пилинги', 'Скрабы, пилинги'), ('Тоники, лосьоны', 'Тоники, лосьоны')], max_length=50, verbose_name='Уход за кожей')),
                ('skin_appl', models.CharField(blank=True, choices=[('Веки вокруг глаз', 'Веки вокруг глаз'), ('Губы', 'Губы'), ('Лицо', 'Лицо'), ('Ноги', 'Ноги'), ('Руки', 'Руки'), ('Тело', 'Тело'), ('Шея и зона декольте', 'Шея и зона декольте')], max_length=50, verbose_name='Зона применения')),
                ('hair_draier', models.CharField(blank=True, choices=[('Бигуди', 'Бигуди'), ('Волосы, шиньоны', 'Волосы, шиньоны'), ('Выпрямители', 'Выпрямители'), ('Парики', 'Парики'), ('Расчески', 'Расчески'), ('Средства для укладки', 'Средства для укладки'), ('Стайлеры', 'Стайлеры'), ('Фены', 'Фены'), ('Щипцы', 'Щипцы'), ('Расчески', 'Расчески')], max_length=50, verbose_name='Фены и укладка')),
                ('tatu', models.CharField(blank=True, choices=[('Временные татуировки', 'Временные татуировки'), ('Для татуажа', 'Для татуажа'), ('Для татуировок', 'Для татуировок')], max_length=50, verbose_name='Тату и татуаж')),
                ('tanning', models.CharField(blank=True, choices=[('Солярии', 'Солярии'), ('Автозагары', 'Автозагары'), ('Для защиты от солнца', 'Для защиты от солнца'), ('Для усиления загара', 'Для усиления загара'), ('Средства после загара', 'Средства после загара')], max_length=50, verbose_name='Солярии и загар')),
                ('hig', models.CharField(blank=True, choices=[('Гели для душа', 'Гели для душа'), ('Дезодоранты', 'Дезодоранты'), ('Для интимной гигиены', 'Для интимной гигиены'), ('Зубная паста', 'Зубная паста'), ('Зубные щетки', 'Зубные щетки'), ('Ирригаторы', 'Ирригаторы'), ('Мочалки', 'Мочалки'), ('Мыло', 'Мыло'), ('Отбеливание зубов', 'Отбеливание зубов'), ('Пена и соль для ванной', 'Пена и соль для ванной'), ('Подгузники для взрослых', 'Подгузники для взрослых'), ('Прокладки, тампоны', 'Прокладки, тампоны')], max_length=50, verbose_name='Средства для гигиены')),
            ],
            options={
                'verbose_name_plural': 'Красота и здоровье',
                'verbose_name': 'Красота и здоровье',
                'db_table': 'Красота и здоровье',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='Biznes',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('type_biz', models.CharField(blank=True, choices=[('Бизнес под ключ', 'Бизнес под ключ'), ('Доля в бизнесе', 'Доля в бизнесе'), ('Франшиза', 'Франшиза')], max_length=50, verbose_name='Тип бизнеса')),
                ('cat_biz', models.CharField(blank=True, choices=[('Автомойки, автосервисы', 'Автомойки, автосервисы'), ('Гостиницы, хостелы', 'Гостиницы, хостелы'), ('Интернет', 'Интернет'), ('Общественное питание', 'Общественное питание'), ('Производство', 'Производство'), ('Салоны красоты', 'Салоны красоты'), ('Сельское хозяйство', 'Сельское хозяйство'), ('Строительство', 'Строительство'), ('Торговля, магазины', 'Торговля, магазины')], max_length=50, verbose_name='Категория бизнеса')),
                ('cat_equip', models.CharField(blank=True, choices=[('Для автосервиса', 'Для автосервиса'), ('Для офисов', 'Для офисов'), ('Для салонов красоты', 'Для салонов красоты'), ('Павильоны, стойки', 'Павильоны, стойки'), ('Пищевое, холодильное', 'Пищевое, холодильное'), ('Промышленное', 'Промышленное'), ('Рекламные материалы', 'Рекламные материалы'), ('Системы безопасности', 'Системы безопасности'), ('Строительное', 'Строительное'), ('Сценическое', 'Сценическое'), ('Торговое', 'Торговое'), ('Читсящая, моющая техника', 'Читсящая, моющая техника')], max_length=50, verbose_name='Тип оборудования')),
            ],
            options={
                'verbose_name_plural': 'Для бизнеса',
                'verbose_name': 'Для бизнеса',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('type', models.CharField(blank=True, choices=[('Банты', 'Банты'), ('Бижутерия', 'Бижутерия'), ('Галстуки и бабочки', 'Галстуки и бабочки'), ('Заколки, резинки и ободки', 'Заколки, резинки и ободки'), ('Зонты', 'Зонты'), ('Карнавальные костюмы', 'Карнавальные костюмы'), ('Кошельки', 'Кошельки'), ('Очки', 'Очки'), ('Перчатки и варежки', 'Перчатки и варежки'), ('Ремни и пояса', 'Ремни и пояса'), ('Рюкзаки', 'Рюкзаки'), ('Сумки', 'Сумки'), ('Украшения', 'Украшения'), ('Часы', 'Часы'), ('Шарфы и платки', 'Шарфы и платки')], max_length=50, verbose_name='Тип аксессуара')),
                ('gender', models.CharField(blank=True, choices=[('Мальчикам', 'Мальчикам'), ('Девочкам', 'Девочкам')], max_length=50, verbose_name='Пол')),
                ('brand_aks', models.CharField(blank=True, choices=[('Adidas', 'Adidas'), ('Angry Birds', 'Angry Birds'), ('Chiggo', 'Chiggo'), ('Chobi', 'Chobi'), ('Cokoon', 'Cokoon'), ('Crockid', 'Crockid'), ('Crocs', 'Crocs'), ('Demix', 'Demix'), ('Didriksons', 'Didriksons'), ('Disney', 'Disney'), ('Ecco', 'Ecco'), ('Grizzly', 'Grizzly'), ('Gulliver', 'Gulliver'), ('Gymboree', 'Gymboree'), ('Happy Baby', 'Happy Baby'), ('Hello Kitty', 'Hello Kitty'), ('Herlitz', 'Herlitz'), ('Hummingbird', 'Hummingbird'), ('Huppa', 'Huppa'), ('I Love Mum', 'I Love Mum'), ('Kerry', 'Kerry'), ('Kivat', 'Kivat'), ('Lego', 'Lego'), ('Molo', 'Molo'), ('MonsterHigh', 'MonsterHigh'), ('Mothercare', 'Mothercare'), ("Mum'S Era", "Mum'S Era"), ('Nike', 'Nike'), ('Polar', 'Polar'), ('Reike', 'Reike'), ('Reima', 'Reima'), ('Skip Hop', 'Skip Hop'), ('Trunki', 'Trunki'), ('Winx', 'Winx'), ('Батик', 'Батик'), ('Божья Коровка', 'Божья Коровка'), ('Гамма', 'Гамма'), ('Звездочка', 'Звездочка'), ('Карапуз', 'Карапуз'), ('Кит', 'Кит'), ('Котофей', 'Котофей'), ('Маша И Медведь', 'Маша И Медведь'), ('Медвежонок', 'Медвежонок'), ('Пчелка', 'Пчелка'), ('Радуга', 'Радуга'), ('Солнышко', 'Солнышко'), ('Твое', 'Твое'), ('Тим', 'Тим'), ('Умка', 'Умка')], max_length=50, verbose_name='Бренд аксессуара')),
                ('brand', models.CharField(blank=True, choices=[('Acoola', 'Acoola'), ('Adidas', 'Adidas'), ('Armani', 'Armani'), ('Armani Junior', 'Armani Junior'), ('Babygo', 'Babygo'), ('Barkito', 'Barkito'), ('Blue Seven', 'Blue Seven'), ('Button Blue', 'Button Blue'), ('Calvin Clein', 'Calvin Clein'), ("Carter's", "Carter's"), ('Chicco', 'Chicco'), ('Choupette', 'Choupette'), ('Cleverly', 'Cleverly'), ('Crockid', 'Crockid'), ('Disney', 'Disney'), ('Duwali', 'Duwali'), ('Futurino', 'Futurino'), ('Gap', 'Gap'), ('Gulliwer', 'Gulliwer'), ('Gemboree', 'Gemboree'), ('Insity', 'Insity'), ('Lacoste', 'Lacoste'), ('Lc Vaikiki', 'Lc Vaikiki'), ('Mango', 'Mango'), ('Mayoral', 'Mayoral'), ('Mix', 'Mix'), ('Modis', 'Modis'), ('Mothercare', 'Mothercare'), ('Navy', 'Navy'), ('Noble People', 'Noble People'), ('Nova', 'Nova'), ("O'Stin", "O'Stin"), ('Oodji', 'Oodji'), ('Orkestra', 'Orkestra&Bear'), ('Original Marines', 'Original Marines'), ('Oshkosh', 'Oshkosh'), ('Outwenture', 'Outwenture'), ('Paul Smith', 'Paul Smith'), ('Pelican', 'Pelican'), ('Pinetti', 'Pinetti'), ('PlayTuday', 'PlayTuday'), ('Sela', 'Sela'), ('Silver Spoon', 'Silver Spoon'), ('Sisley', 'Sisley'), ('Sky Lake', 'Sky Lake'), ('Sly', 'Sly'), ('Top Tailor', 'Top Tailor'), ('Tommy Hilfiger', 'Tommy Hilfiger'), ('Tsarevich', 'Tsarevich'), ('United Colors of Benetton', 'United Colors of Benetton'), ('Zara', 'Zara'), ('Дочки-сыночки', 'Дочки-сыночки'), ('Империя детства', 'Империя детства'), ('Карамелли', 'Карамелли'), ('Кит', 'Кит'), ('Маленькая Леди', 'Маленькая Леди'), ('Непоседа', 'Непоседа'), ('Смена', 'Смена'), ('Твое', 'Твое')], max_length=50, verbose_name='Бренд')),
                ('color', models.CharField(blank=True, choices=[('Белый', 'Белый'), ('Хаки', 'Хаки'), ('Серый', 'Серый'), ('Чёрный', 'Чёрный'), ('Коричневый', 'Коричневый'), ('Бордовый', 'Бордовый'), ('Бежевый', 'Бежевый'), ('Красный', 'Красный'), ('Оранжевый', 'Оранжевый'), ('Жёлтый', 'Жёлтый'), ('Зелёный', 'Зелёный'), ('Голубой', 'Голубой'), ('Синий', 'Синий'), ('Фиолетовый', 'Фиолетовый'), ('Пурпурный', 'Пурпурный'), ('Розовый', 'Розовый'), ('Разноцветный', 'Разноцветный')], max_length=45, verbose_name='Цвет')),
                ('condition', models.CharField(blank=True, choices=[('Б/У', 'Б/У'), ('Новое', 'Новое')], max_length=50, verbose_name='Состояние')),
                ('size', models.CharField(blank=True, choices=[('46-50 (0-1 месяц)', '44-46 (S)'), ('51-56 (2 месяца)', '46-48 (M)'), ('57-62 (3 месяца)', '48-50 (L)'), ('63-68 (6 месяцев)', '50-52 (XL)'), ('69-74 (9 месяцев)', '52-54 (XXL)'), ('75-80 (1 год)', '54-56 (XXXL)'), ('81-86 (1.5 года)', '44-46 (S)'), ('87-92 (2 года)', '46-48 (M)'), ('93-98 (3 года)', '48-50 (L)'), ('99-104 (4 года)', '50-52 (XL)'), ('105-110 (5 лет)', '52-54 (XXL)'), ('111-116 (6 лет)', '54-56 (XXXL)'), ('117-122 (7 лет)', '44-46 (S)'), ('123-128 (8 лет)', '46-48 (M)'), ('129-134 (9 лет)', '48-50 (L)'), ('135-140 (10 лет)', '50-52 (XL)'), ('141-146 (11 лет)', '52-54 (XXL)'), ('147-152 (12 лет)', '54-56 (XXXL)'), ('153-158 (13 лет)', '52-54 (XXL)'), ('159-164 (14 лет)', '54-56 (XXXL)')], max_length=50, verbose_name='Размер / рост')),
                ('blu_sh', models.CharField(blank=True, choices=[('Блузы', 'Блузы'), ('Рубашки', 'Рубашки')], max_length=50, verbose_name='Блузы и рубашки')),
                ('season', models.CharField(blank=True, choices=[('Демисезон', 'Демисезон'), ('Зима', 'Зима'), ('Лето', 'Лето')], max_length=50, verbose_name='Сезон')),
                ('outerwear', models.CharField(blank=True, choices=[('Дождевики', 'Дождевики'), ('Дубленки', 'Дубленки'), ('Жилеты', 'Жилеты'), ('Кожаные куртки', 'Кожаные куртки'), ('Комбинезоны и костюмы', 'Комбинезоны и костюмы'), ('Куртки', 'Куртки'), ('накидки и пончо', 'накидки и пончо'), ('Пальто', 'Пальто'), ('Парки', 'Парки'), ('Плащи', 'Плащи'), ('Пуховики', 'Пуховики'), ('Шубы', 'Шубы')], max_length=50, verbose_name='Верхняя одежда')),
                ('hat', models.CharField(blank=True, choices=[('Бейсболки и кепки', 'Бейсболки и кепки'), ('Косынки и банданы', 'Косынки и банданы'), ('Панамы', 'Панамы'), ('Повязки', 'Повязки'), ('Чепчики', 'Чепчики'), ('Шапки', 'Шапки'), ('Шляпы', 'Шляпы')], max_length=50, verbose_name='Головные уборы')),
                ('home', models.CharField(blank=True, choices=[('Пижамы', 'Пижамы'), ('Халаты', 'Халаты')], max_length=50, verbose_name='Домашняя одежда')),
                ('coverall', models.CharField(blank=True, choices=[('Боди', 'Боди'), ('Комбинезоны', 'Комбинезоны')], max_length=50, verbose_name='Комбинезоны')),
                ('underwear', models.CharField(blank=True, choices=[('Бюстгалтеры', 'Бюстгалтеры'), ('Кальсоны', 'Кальсоны'), ('Колготки', 'Колготки'), ('Купальники', 'Купальники'), ('Носки', 'Носки'), ('Плавки', 'Плавки'), ('Термобелье', 'Термобелье'), ('Трусы', 'Трусы')], max_length=50, verbose_name='Нижнее белье')),
                ('shoes', models.CharField(blank=True, choices=[('Балетки', 'Балетки'), ('Босоножки и сабо', 'Босоножки и сабо'), ('Ботинки', 'Ботинки'), ('Валенки и угги', 'Валенки и угги'), ('Домашняя обувь', 'Домашняя обувь'), ('Дутики', 'Дутики'), ('Кеды', 'Кеды'), ('Кроссовки', 'Кроссовки'), ('Мокасины', 'Мокасины'), ('Обувь на первый шаг', 'Обувь на первый шаг'), ('Ортопедическая обувь', 'Ортопедическая обувь'), ('Пинетки', 'Пинетки'), ('Полуботинки', 'Полуботинки'), ('Резиновые сапоги', 'Резиновые сапоги'), ('Сандалии', 'Сандалии'), ('Сапоги', 'Сапоги'), ('Слипоны', 'Слипоны'), ('Тапочки', 'Тапочки'), ('Туфли', 'Туфли'), ('Чешки', 'Чешки'), ('Шлепанцы и пляжная обувь', 'Шлепанцы и пляжная обувь')], max_length=50, verbose_name='Обувь')),
                ('shoe_size', models.CharField(blank=True, choices=[('19 и меньше', '19 и меньше'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30'), ('31', '31'), ('32', '32'), ('33', '33'), ('34', '34'), ('35', '35'), ('36', '36'), ('37 и больше', '37 и больше')], max_length=50, verbose_name='Размер обуви')),
                ('suits', models.CharField(blank=True, choices=[('Жилетки', 'Жилетки'), ('Костюмы', 'Костюмы'), ('Пиджаки', 'Пиджаки'), ('Школьная форма', 'Школьная форма')], max_length=50, verbose_name='Пиджаки и костюмы')),
                ('sweaters', models.CharField(blank=True, choices=[('Водолазки', 'Водолазки'), ('Джемперы', 'Джемперы'), ('Кардиганы', 'Кардиганы'), ('Кофты', 'Кофты'), ('Лонгсливы', 'Лонгсливы'), ('Олимпайки', 'Олимпайки'), ('Свитеры', 'Свитеры'), ('Свитшоты', 'Свитшоты'), ('Толстовки и худи', 'Толстовки и худи')], max_length=50, verbose_name='Свитера и толстовки')),
                ('sportwear', models.CharField(blank=True, choices=[('Верхняя одежда', 'Верхняя одежда'), ('Комбинезоны', 'Комбинезоны'), ('Купальники', 'Купальники'), ('Лосины и гетры', 'Лосины и гетры'), ('Платья и юбки', 'Платья и юбки'), ('Спортивные костюмы', 'Спортивные костюмы'), ('Футболки и топы', 'Футболки и топы'), ('Штаны и шорты', 'Штаны и шорты')], max_length=50, verbose_name='Спортивная одежда')),
                ('tops', models.CharField(blank=True, choices=[('Майки', 'Майки'), ('Поло', 'Поло'), ('Топы', 'Топы'), ('Футболки', 'Футболки')], max_length=50, verbose_name='Футболки и поло')),
                ('pants', models.CharField(blank=True, choices=[('Бриджы', 'Бриджы'), ('Брюки', 'Брюки'), ('Джинсы', 'Джинсы'), ('Леггинсы', 'Леггинсы'), ('Шорты', 'Шорты')], max_length=50, verbose_name='Штаны и шорты')),
                ('pant_size', models.CharField(blank=True, choices=[('28', '28'), ('29', '29'), ('30', '30'), ('31', '31'), ('32', '32'), ('33', '33'), ('34', '34'), ('35', '35'), ('36', '36'), ('37', '37'), ('38 и больше', '38 и больше')], max_length=50, verbose_name='Размер штанов')),
                ('dresses', models.CharField(blank=True, choices=[('Платья', 'Платья'), ('Сарафаны', 'Сарафаны'), ('Туники', 'Туники'), ('Юбки', 'Юбки')], max_length=50, verbose_name='Платья и юбки')),
                ('length', models.CharField(blank=True, choices=[('Макси', 'Макси'), ('Миди', 'Миди'), ('Мини', 'Мини')], max_length=50, verbose_name='Длина')),
                ('sliders', models.CharField(blank=True, choices=[('Песочники', 'Песочники'), ('Ползунки', 'Ползунки'), ('Распашонки', 'Распашонки')], max_length=50, verbose_name='Ползунки и распашонки')),
            ],
            options={
                'verbose_name_plural': 'Детский гардероб',
                'verbose_name': 'Детский гардероб',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='Comp',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('type_laptop', models.CharField(blank=True, choices=[('Ноутбуки', 'Ноутбуки'), ('Нетбуки', 'Нетбуки'), ('Трансформеры', 'Трансформеры')], max_length=50, verbose_name='Тип ноутбука')),
                ('brand_laptop', models.CharField(blank=True, choices=[('Acer', 'Acer'), ('Alienware', 'Alienware'), ('Apple', 'Apple'), ('ASUS', 'ASUS'), ('DELL', 'DELL'), ('Dexp', 'Dexp'), ('DNS', 'DNS'), ('Fujitsu', 'Fujitsu'), ('Haier', 'Haier'), ('HP', 'HP'), ('Huawei', 'Huawei'), ('Lenovo', 'Lenovo'), ('MSI', 'MSI'), ('Packard Bell', 'Packard Bell'), ('Panasonic', 'Panasonic'), ('Prestigio', 'Prestigio'), ('Samsung', 'Samsung'), ('Sony', 'Sony'), ('Toshiba', 'Toshiba')], max_length=50, verbose_name='Марка ноутбука')),
                ('diagonal', models.CharField(blank=True, choices=[('12.5" и менее', '12.5" и менее'), ('От 13" до 14.6"', 'От 13" до 14.6"'), ('От 15" до 16.4"', 'От 15" до 16.4"'), ('От 16.5" и более', 'От 16.5" и более')], max_length=50, verbose_name='Диагональ экрана')),
                ('operative', models.CharField(blank=True, choices=[('До 1 ГБ', 'До 1 ГБ'), ('1 Гб', '1 Гб'), ('2 Гб', '2 Гб'), ('3 Гб', '3 Гб'), ('4 Гб', '4 Гб'), ('6 Гб', '6 Гб'), ('8 Гб', '8 Гб'), ('12 Гб', '12 Гб'), ('16 Гб', '16 Гб'), ('24 Гб', '24 Гб'), ('32 Гб', '32 Гб'), ('64 Гб', '64 Гб'), ('Более 64 Гб', 'Более 64 Гб')], max_length=50, verbose_name='Оперативная память')),
                ('use', models.CharField(blank=True, choices=[('Новый', 'Новый'), ('До 6 мес', 'До 6 мес'), ('1 год', '1 год'), ('2 года', '2 года'), ('от 3 лет и более', 'от 3 лет и более')], max_length=50, verbose_name='Срок использования')),
                ('game', models.BooleanField(default=False, verbose_name='Игровой')),
                ('type_comp', models.CharField(blank=True, choices=[('Настольные, системные блоки', 'Настольные, системные блоки'), ('Моноблоки', 'Моноблоки'), ('Мини ПК, неттопы', 'Мини ПК, неттопы')], max_length=50, verbose_name='Тип компьютера')),
                ('video_card', models.CharField(blank=True, choices=[('Встроенная', 'Встроенная'), ('Дискретная', 'Дискретная')], max_length=50, verbose_name='Тип видеокарты')),
                ('type_drive', models.CharField(blank=True, choices=[('Blu-ray', 'Blu-ray'), ('DVD', 'DVD'), ('DVD-RW', 'DVD-RW'), ('DVD-CD/RW', 'DVD-CD/RW'), ('Отсутствует', 'Отсутствует')], max_length=50, verbose_name='Тип оптического привода')),
                ('type_monitor', models.CharField(blank=True, choices=[('Для дома и офиса', 'Для дома и офиса'), ('Игровой', 'Игровой'), ('Профессиональный', 'Профессиональный')], max_length=50, verbose_name='Тип монитора')),
                ('brand_monitor', models.CharField(blank=True, choices=[('Acer', 'Acer'), ('AOC', 'AOC'), ('Apple', 'Apple'), ('ASUS', 'ASUS'), ('BenQ', 'BenQ'), ('DELL', 'DELL'), ('HP', 'HP'), ('Liyama', 'Liyama'), ('Lenovo', 'Lenovo'), ('LG', 'LG'), ('NEC', 'NEC'), ('Packard Bell', 'Packard Bell'), ('Philips', 'Philips'), ('Samsung', 'Samsung'), ('Toshiba', 'Toshiba'), ('Viewsonic', 'Viewsonic')], max_length=50, verbose_name='Марка монитора')),
                ('diagonal_mon', models.CharField(blank=True, choices=[('Менее 14"', 'Менее 14"'), ('От 14" до 14.9"', 'От 14" до 14.9"'), ('От 15" до 15.9"', 'От 15" до 15.9"'), ('От 16" до 16.9"', 'От 16" до 16.9"'), ('От 17" до 17.9"', 'От 17" до 17.9"'), ('От 18" до 18.9"', 'От 18" до 18.9"'), ('От 19" до 19.9"', 'От 19" до 19.9"'), ('От 20" до 20.9"', 'От 20" до 20.9"'), ('От 21" до 21.9"', 'От 21" до 21.9"'), ('От 22" до 22.9"', 'От 22" до 22.9"'), ('От 23" до 23.9"', 'От 23" до 23.9"'), ('От 24" до 24.9"', 'От 24" до 24.9"'), ('От 25" до 25.9"', 'От 25" до 25.9"'), ('От 26" до 26.9"', 'От 26" до 26.9"'), ('От 27" до 27.9"', 'От 27" до 27.9"'), ('От 28" до 28.9"', 'От 28" до 28.9"'), ('От 29" до 29.9"', 'От 29" до 29.9"'), ('От 30" и более', 'От 30" и более')], max_length=50, verbose_name='Диагональ экрана')),
                ('hdmi', models.CharField(blank=True, choices=[('1 шт', '1 шт'), ('2 шт', '2 шт'), ('4 шт', '4 шт')], max_length=50, verbose_name='Разъем HDMI')),
                ('dinam', models.BooleanField(default=False, verbose_name='Встроенные динамики')),
                ('USB', models.BooleanField(default=False, verbose_name='USB разъем')),
                ('type_key', models.CharField(blank=True, choices=[('Клавиатуры', 'Клавиатуры'), ('Мыши', 'Мыши')], max_length=50, verbose_name='Тип')),
                ('type_connect', models.CharField(blank=True, choices=[('Проводные', 'Проводные'), ('Беспроводные', 'Беспроводные')], max_length=50, verbose_name='Тип подключения')),
                ('brand_key', models.CharField(blank=True, choices=[('A4Tech', 'A4Tech'), ('Apple', 'Apple'), ('ASUS', 'ASUS'), ('Defender', 'Defender'), ('Genius', 'Genius'), ('HP', 'HP'), ('Logitech', 'Logitech'), ('Microsoft', 'Microsoft'), ('Oklick', 'Oklick'), ('Razer', 'Razer'), ('Steel Series', 'Steel Series'), ('Sven', 'Sven')], max_length=50, verbose_name='Бренд')),
                ('office', models.CharField(blank=True, choices=[('Принтеры', 'Принтеры'), ('3D принтеры', '3D принтеры'), ('Сканеры', 'Сканеры'), ('Плоттеры', 'Плоттеры'), ('Копиры', 'Копиры'), ('МФУ', 'МФУ'), ('Шредеры, уничтожители бумаг', 'Шредеры, уничтожители бумаг'), ('Факсы', 'Факсы'), ('Ламинаторы', 'Ламинаторы'), ('Переплетчики, брошюровщики', 'Переплетчики, брошюровщики'), ('Картриджи, чернила, тонеры', 'Картриджи, чернила, тонеры'), ('Бумага для печати', 'Бумага для печати'), ('Аксессуары для оргтехники', 'Аксессуары для оргтехники')], max_length=50, verbose_name='Оргтехника и расходники')),
                ('network', models.CharField(blank=True, choices=[('ADSL модемы', 'ADSL модемы'), ('USB, 3G модемы', 'USB, 3G модемы'), ('Роуторы, маршрутизаторы', 'Роуторы, маршрутизаторы'), ('Коммутаторы', 'Коммутаторы'), ('Точки доступа', 'Точки доступа'), ('Усилители сигнала, антенны', 'Усилители сигнала, антенны'), ('Серверы', 'Серверы'), ('Принт-серверы', 'Принт-серверы'), ('Сетевые карты', 'Сетевые карты'), ('Сетевые хранилища (NAS)', 'Сетевые хранилища (NAS)'), ('Сетевые кабели, разъемы', 'Сетевые кабели, разъемы'), ('Трансиверы, конвертеры', 'Трансиверы, конвертеры'), ('WI-FI, bluetooth адаптеры', 'WI-FI, bluetooth адаптеры'), ('VoIP-оборудование', 'VoIP-оборудование')], max_length=50, verbose_name='Сетевое оборудование')),
                ('multimedia', models.CharField(blank=True, choices=[('Веб-камеры', 'Веб-камеры'), ('Графические планшеты', 'Графические планшеты'), ('Очки виртуальной реальности', 'Очки виртуальной реальности'), ('Компьютерные колонки', 'Компьютерные колонки'), ('Компьютерные гарнитуры', 'Компьютерные гарнитуры'), ('Компьютерные микрофоны', 'Компьютерные микрофоны')], max_length=50, verbose_name='Мультимедиа')),
                ('flash', models.CharField(blank=True, choices=[('Карты памяти', 'Карты памяти'), ('USb флеш-карты', 'USb флеш-карты'), ('Очки виртуальной реальности', 'Очки виртуальной реальности'), ('Внешние жесткие диски', 'Внешние жесткие диски'), ('Диски, дискеты', 'Диски, дискеты')], max_length=50, verbose_name='Накопители данных и картридеры')),
                ('po', models.CharField(blank=True, choices=[('Антивирусы', 'Антивирусы'), ('Восстановление данных', 'Восстановление данных'), ('Графика, дизайн', 'Графика, дизайн'), ('Обработка аудио, видео', 'Обработка аудио, видео'), ('Обучение, образование', 'Обучение, образование'), ('Операционные системы', 'Операционные системы'), ('Офисные программы', 'Офисные программы'), ('Управление предприятием', 'Управление предприятием'), ('Утилиты, драйверы', 'Утилиты, драйверы')], max_length=50, verbose_name='Программное обеспечение')),
                ('pad', models.CharField(blank=True, choices=[('Геймпады', 'Геймпады'), ('Рули', 'Рули'), ('Джойстики, штурвалы', 'Джойстики, штурвалы')], max_length=50, verbose_name='Рули, джойстики, геймпады')),
                ('brand_pad', models.CharField(blank=True, choices=[('A4Tech', 'A4Tech'), ('Defender', 'Defender'), ('Dialog', 'Dialog'), ('Exeq', 'Exeq'), ('Genius', 'Genius'), ('Logitech', 'Logitech'), ('Microsoft', 'Microsoft'), ('Momo', 'Momo'), ('Oklick', 'Oklick'), ('Razer', 'Razer'), ('Saltek', 'Saltek'), ('SpeedLink', 'SpeedLink'), ('ThrustMaster', 'ThrustMaster'), ('Thrust', 'Thrust'), ('Xiami', 'Xiami')], max_length=50, verbose_name='Марка')),
                ('spare', models.CharField(blank=True, choices=[('CD, DVD, Blu-ray приводы', 'CD, DVD, Blu-ray приводы'), ('Аккумуляторы', 'Аккумуляторы'), ('Блоки питания', 'Блоки питания'), ('Видеокарты', 'Видеокарты'), ('Жесткие диски', 'Жесткие диски'), ('Звуковые карты', 'Звуковые карты'), ('Клавиатуры для ноутбуков', 'Клавиатуры для ноутбуков'), ('Контроллеры', 'Контроллеры'), ('Корпуса', 'Корпуса'), ('Кулеры, системы охлаждения', 'Кулеры, системы охлаждения'), ('Материнские платы', 'Материнские платы'), ('Матрицы, экраны', 'Матрицы, экраны'), ('Оперативная память', 'Оперативная память'), ('Процессоры', 'Процессоры'), ('TV-тюнеры, видеозахват', 'TV-тюнеры, видеозахват'), ('Шлейфы', 'Шлейфы')], max_length=50, verbose_name='Запчасти')),
                ('acs', models.CharField(blank=True, choices=[('USB-контроллеры, хабы', 'USB-контроллеры, хабы'), ('USB-гаджеты', 'USB-гаджеты'), ('Кабели, разъемы, переходники', 'Кабели, разъемы, переходники'), ('Коврики для мышей', 'Коврики для мышей'), ('Подставки, кронштейны', 'Подставки, кронштейны'), ('Сумки, чехлы для ноутбуков', 'Сумки, чехлы для ноутбуков')], max_length=50, verbose_name='Аксессуары')),
                ('device', models.CharField(blank=True, choices=[('Для компьютеров', 'Для компьютеров'), ('Для ноутбуков', 'Для ноутбуков')], max_length=50, verbose_name='Устройство')),
            ],
            options={
                'verbose_name_plural': 'Компьютерная техника',
                'verbose_name': 'Компьютерная техника',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='FotoVideo',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('type_foto', models.CharField(blank=True, choices=[('Пленочные', 'Пленочные'), ('Цифровые', 'Цифровые')], max_length=50, verbose_name='Тип фотоаппарата')),
                ('cat_foto', models.CharField(blank=True, choices=[('Компактные', 'Компактные'), ('Зеркальные', 'Зеркальные'), ('Беззеркальные со сменной оптикой', 'Беззеркальные со сменной оптикой'), ('Моментальные печати', 'Моментальные печати')], max_length=50, verbose_name='Категория камеры')),
                ('brand_foto', models.CharField(blank=True, choices=[('AAE', 'AAE'), ('BBK', 'BBK'), ('Canon', 'Canon'), ('Casio', 'Casio'), ('Digicare', 'Digicare'), ('Fujifilm', 'Fujifilm'), ('Genius', 'Genius'), ('HP', 'HP'), ('Insignia', 'Insignia'), ('Kodak', 'Kodak'), ('Konica Minolta', 'Konica Minolta'), ('Leica', 'Leica'), ('Lytro', 'Lytro'), ('Nikon', 'Nikon'), ('Olympus', 'Olympus'), ('Polaroid', 'Polaroid'), ('Panasonic Lumix', 'Panasonic Lumix'), ('Pentax', 'Pentax'), ('Rekam', 'Rekam'), ('Ricoh', 'Ricoh'), ('Sanyo', 'Sanyo'), ('Sigma', 'Sigma'), ('Sony', 'Sony'), ('Xiomi, YI', 'Xiomi, YI'), ('Зенит (Zenit)', 'Зенит (Zenit)')], max_length=50, verbose_name='Марка камеры')),
                ('viewfinder', models.BooleanField(default=False, verbose_name='Видоискатель')),
                ('stabilizer', models.CharField(blank=True, choices=[('Нет', 'Нет'), ('Оптический', 'Оптический'), ('Цифровой', 'Цифровой')], max_length=50, verbose_name='Стабилизатор изображения')),
                ('type_video', models.CharField(blank=True, choices=[('AAE', 'AAE'), ('BQ', 'BQ'), ('Canon', 'Canon'), ('Digicare', 'Digicare'), ('Djl', 'Djl'), ('Eken', 'Eken'), ('Ginzzu', 'Ginzzu'), ('Gmini', 'Gmini'), ('GoPro', 'GoPro'), ('JVC', 'JVC'), ('Lexand', 'Lexand'), ('Olympus', 'Olympus'), ('Polaroid', 'Polaroid'), ('Panasonic', 'Panasonic'), ('Rekam', 'Rekam'), ('Ricoh', 'Ricoh'), ('Samsung', 'Samsung'), ('SJCAM', 'SJCAM'), ('Sony', 'Sony'), ('Xiomi, YI', 'Xiomi, YI'), ('X-TRY', 'X-TRY')], max_length=50, verbose_name='Марка видеокамеры')),
                ('quality', models.CharField(blank=True, choices=[('576p и менее', '576p и менее'), ('760p HD', '760p HD'), ('1080p Full HD', '1080p Full HD'), ('2.5K QHD', '2.5K QHD'), ('4K UHD', '4K UHD')], max_length=50, verbose_name='Качество видео')),
                ('media', models.CharField(blank=True, choices=[('Жесткий диска, Flash', 'Жесткий диска, Flash'), ('Кассета', 'Кассета'), ('Оптический диск', 'Оптический диск')], max_length=50, verbose_name='Формат носителя')),
                ('zoom', models.CharField(blank=True, choices=[('Нет', 'Нет'), ('Менее 5х', 'Менее 5х'), ('От 5 до 9.9х', 'От 5 до 9.9х'), ('От 10 до 19.9х', 'От 10 до 19.9х'), ('От 20 до 29.9х', 'От 20 до 29.9х'), ('От 30 до 39.9х', 'От 30 до 39.9х'), ('От 40 до 49.9х', 'От 40 до 49.9х'), ('50х и более', '50х и более')], max_length=50, verbose_name='Оптический Zoom')),
                ('action', models.BooleanField(default=False, verbose_name='Экшн-камера')),
                ('s360', models.BooleanField(default=False, verbose_name='Съемка в 360 градусов')),
                ('video_control', models.CharField(blank=True, choices=[('IP-камеры', 'IP-камеры'), ('Аналоговые камеры', 'Аналоговые камеры')], max_length=50, verbose_name='Тип видеонаблюдение')),
                ('connection', models.CharField(blank=True, choices=[('Проводные', 'Проводные'), ('Беспроводные', 'Беспроводные')], max_length=50, verbose_name='Тип подключения')),
                ('wi_fi', models.BooleanField(default=False, verbose_name='Wi-fi')),
                ('monitor_sensor', models.BooleanField(default=False, verbose_name='Датчик движения')),
                ('microfon', models.BooleanField(default=False, verbose_name='Встроенный микрофон')),
                ('brand_lens', models.CharField(blank=True, choices=[('Canon', 'Canon'), ('Carl Zeiss', 'Carl Zeiss'), ('Fujifilm', 'Fujifilm'), ('Nicon', 'Nicon'), ('Olympus', 'Olympus'), ('Panasonic Lumix', 'Panasonic Lumix'), ('Pentax', 'Pentax'), ('Samyang', 'Samyang'), ('Sigma', 'Sigma'), ('Sony', 'Sony'), ('Tamron', 'YongNuo'), ('YongNuo', 'YongNuo'), ('Зенит', 'Зенит'), ('Юпитер', 'Юпитер')], max_length=50, verbose_name='Марка объектива')),
                ('type_lens', models.CharField(blank=True, choices=[('Рыбий глаз', 'Рыбий глаз'), ('Микрообъективы', 'Микрообъективы'), ('Стандартные объективы', 'Стандартные объективы'), ('Телеобъективы', 'Телеобъективы'), ('Широкоугольные объективы', 'Широкоугольные объективы')], max_length=50, verbose_name='Тип объектива')),
                ('type_bayonet', models.CharField(blank=True, choices=[('4/3', '4/3'), ('Bronica', 'Bronica'), ('Canon EF', 'Canon EF'), ('Canon EF-M', 'Canon EF-M'), ('Canon EF-S', 'Canon EF-S'), ('Canon FD', 'Canon FD'), ('Canon Fl', 'Canon Fl'), ('Fujifilm G Mount', 'Fujifilm G Mount'), ('Fujifilm X Mount', 'Fujifilm X Mount'), ('Hasselblad CF', 'Hasselblad CF'), ('Hasselblad HC', 'Hasselblad HC'), ('Hasselblad XCD', 'Hasselblad XCD'), ('Konica AR', 'Konica AR'), ('Leica L', 'Leica L'), ('Leica M', 'Leica M'), ('Leica R', 'Leica R'), ('Leica S', 'Leica S'), ('Leica T', 'Leica T'), ('Mamiya 645', 'Mamiya 645'), ('Mamiya 7', 'Mamiya 7'), ('Micro 4/3', 'Micro 4/3'), ('Minolta A (Sony Alpha)', 'Minolta A (Sony Alpha)'), ('Minolta SR', 'Minolta SR'), ('Nicon 1', 'Nicon 1'), ('Nicon F', 'Nicon F'), ('Olimpus Micro 4/3', 'Olimpus Micro 4/3'), ('Olimpus OM', 'Olimpus OM'), ('Pentacon 6', 'Pentacon 6'), ('Pentax 645', 'Pentax 645'), ('Pentax 67', 'Pentax 67'), ('Pentax KA/KAF/KAF2/KAF3', 'Pentax KA/KAF/KAF2/KAF3'), ('Pentax Q', 'Pentax Q'), ('Ricoh GXR', 'Ricoh GXR'), ('Samsung NX', 'Samsung NX'), ('Samsung NX-M', 'Samsung NX-M'), ('Sigma SA', 'Sigma SA'), ('Sony E', 'Sony E'), ('T-mount', 'T-mount'), ('Резьба М39', 'Резьба М39'), ('Резьба М42', 'Резьба М42')], max_length=50, verbose_name='Тип байонета')),
                ('autofocus', models.BooleanField(default=False, verbose_name='Автофокус')),
                ('type_flashes', models.CharField(blank=True, choices=[('Обычные', 'Обычные'), ('Кольцевые', 'Кольцевые'), ('Двухламповые', 'Двухламповые'), ('Для подводной съемки', 'Для подводной съемкиы')], max_length=50, verbose_name='Тип фотовспышки')),
                ('brand_flashes', models.CharField(blank=True, choices=[('Canon', 'Canon'), ('Falcon Eyes', 'Falcon Eyes'), ('Fujifilm', 'Fujifilm'), ('Codox', 'Codox'), ('Kodak', 'Kodak'), ('Nicon', 'Nicon'), ('Meike', 'Meike'), ('Minolta', 'Minolta'), ('Nicon', 'Nicon'), ('Nissin', 'Nissin'), ('Olympus', 'Olympus'), ('Panasonic', 'Panasonic'), ('Pentax', 'Pentax'), ('Pixel', 'Pixel'), ('Sigma', 'Sigma'), ('Sony', 'Sony'), ('YongNuo', 'YongNuo')], max_length=50, verbose_name='Марка фотовспышки')),
                ('swivel_head', models.BooleanField(default=False, verbose_name='Поворотная головка')),
                ('type_aks', models.CharField(blank=True, choices=[('Обычные', 'Обычные'), ('Кольцевые', 'Кольцевые'), ('Двухламповые', 'Двухламповые'), ('Для подводной съемки', 'Для подводной съемкиы')], max_length=50, verbose_name='Тип аксессуара')),
                ('tripods', models.CharField(blank=True, choices=[('Триподы', 'Триподы'), ('Моноподы', 'Моноподы'), ('Плечевые упоры, обвесы', 'Плечевые упоры, обвесы'), ('Стабилизаторы, Steadicam', 'Стабилизаторы, Steadicam')], max_length=50, verbose_name='Штативы и стабилизаторы')),
                ('studio', models.CharField(blank=True, choices=[('Лампы, студийный свет', 'Лампы, студийный свет'), ('Отражатели, рефлекторы', 'Отражатели, рефлекторы'), ('Софтбоксы', 'Софтбоксы'), ('Фоны, фромакеи', 'Фоны, фромакеи'), ('Фотобоксы, лайткубы', 'Фотобоксы, лайткубы')], max_length=50, verbose_name='Студийное оборудование')),
                ('frame', models.CharField(blank=True, choices=[('Менее 7"', 'Менее 7"'), ('От 7.1" до 7.9"', 'От 7.1" до 7.9"'), ('От 9.1" до 12"', 'От 9.1" до 12"'), ('От 12.1" до 15"', 'От 12.1" до 15"'), ('Более 15"', 'Более 15"')], max_length=50, verbose_name='Фоторамки')),
                ('video', models.BooleanField(default=False, verbose_name='Воспроизведение видео')),
                ('brand_compact', models.CharField(blank=True, choices=[('Canon', 'Canon'), ('Epson', 'Epson'), ('HP', 'HP'), ('Kodak', 'Kodak'), ('LG', 'LG'), ('Sony', 'Sony')], max_length=50, verbose_name='Компактные фотопринтеры')),
                ('type_optics', models.CharField(blank=True, choices=[('Бинокли', 'Бинокли'), ('Лупы', 'Лупы'), ('Микроскопы', 'Микроскопы'), ('Окуляры', 'Окуляры'), ('Подзорные трубы', 'Подзорные трубы'), ('Приборы ночного видения', 'Приборы ночного видения'), ('Телескопы', 'Телескопы')], max_length=50, verbose_name='Тип')),
            ],
            options={
                'verbose_name_plural': 'Фото и видео',
                'verbose_name': 'Фото и видео',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='Hobbies',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('type_bilet', models.CharField(blank=True, choices=[('Кино', 'Кино'), ('Концерты, выставки', 'Концерты, выставки'), ('Путешествия', 'Путешествия'), ('Спорт', 'Спорт'), ('Театр, опера, балет', 'Театр, опера, балет'), ('Цирк', 'Цирк'), ('Шоу, мюзикл', 'Шоу, мюзикл'), ('Юмор', 'Юмор')], max_length=50, verbose_name='Билеты')),
                ('type_film', models.CharField(blank=True, choices=[('DVD', 'DVD'), ('Blu-ray', 'Blu-ray'), ('CD', 'CD'), ('Кассеты VHS', 'Кассеты VHS')], max_length=50, verbose_name='Видеофильмы')),
                ('type_console', models.CharField(blank=True, choices=[('Приставки', 'Приставки'), ('Геймпады', 'Геймпады'), ('Датчики движения', 'Датчики движения'), ('Жесткие диски', 'Жесткие диски'), ('Зарядки, аккумуляторы', 'Зарядки, аккумуляторы'), ('Кабели, адаптеры', 'Кабели, адаптеры'), ('Клавиатуры, мыши', 'Клавиатуры, мыши'), ('Подставки', 'Подставки'), ('Аксессуары', 'Аксессуары')], max_length=50, verbose_name='Игровые приставки')),
                ('os_console', models.CharField(blank=True, choices=[('Dendy', 'Dendy'), ('Game Boy', 'Game Boy'), ('Nintendo 3DS', 'Nintendo 3DS'), ('Nintendo DS', 'Nintendo DS'), ('Nintendo DS Lite', 'Nintendo DS Lite'), ('Nintendo GameCube', 'Nintendo GameCube'), ('Nintendo Switch', 'Nintendo Switch'), ('Nintendo Wii', 'Nintendo Wii'), ('Nintendo Wii U', 'Nintendo Wii U'), ('PlayStation 1', 'PlayStation 1'), ('PlayStation 2', 'PlayStation 2'), ('PlayStation 3', 'PlayStation 3'), ('PlayStation 4', 'PlayStation 4'), ('PlayStation  Pro', 'PlayStation Pro'), ('PlayStation Portable', 'PlayStation Portable'), ('PlayStation Vita', 'PlayStation Vita'), ('Sega', 'Sega'), ('Xbox 360', 'Xbox 360'), ('Xbox One', 'Xbox One')], max_length=50, verbose_name='ОС приставки')),
                ('game', models.CharField(blank=True, choices=[('PC, компьютерные игры', 'PC, компьютерные игры'), ('Dendy', 'Dendy'), ('Game Boy', 'Game Boy'), ('Nintendo 3DS', 'Nintendo 3DS'), ('Nintendo DS', 'Nintendo DS'), ('Nintendo DS Lite', 'Nintendo DS Lite'), ('Nintendo GameCube', 'Nintendo GameCube'), ('Nintendo Switch', 'Nintendo Switch'), ('Nintendo Wii', 'Nintendo Wii'), ('Nintendo Wii U', 'Nintendo Wii U'), ('PlayStation 1', 'PlayStation 1'), ('PlayStation 2', 'PlayStation 2'), ('PlayStation 3', 'PlayStation 3'), ('PlayStation 4', 'PlayStation 4'), ('PlayStation  Pro', 'PlayStation Pro'), ('PlayStation Portable', 'PlayStation Portable'), ('PlayStation Vita', 'PlayStation Vita'), ('Sega', 'Sega'), ('Xbox 360', 'Xbox 360'), ('Xbox One', 'Xbox One')], max_length=50, verbose_name='Игры для приставок и ПК')),
                ('genre', models.CharField(blank=True, choices=[('Аркады', 'Аркады'), ('Гонки', 'Гонки'), ('Драки', 'Драки'), ('Квесты, логические', 'Квесты, логические'), ('Музыкальные', 'Музыкальные'), ('Приключения', 'Приключения'), ('Для детей, развивающие', 'Для детей, развивающие'), ('Ролевые, RPG', 'Ролевые, RPG'), ('Симуляторы', 'Симуляторы'), ('Спортивные', 'Спортивные'), ('Стратегии', 'Стратегии'), ('Экономические', 'Экономические'), ('Экшн, шутеры', 'Экшн, шутеры')], max_length=50, verbose_name='Жанр')),
                ('type_book', models.CharField(blank=True, choices=[('Газеты', 'Газеты'), ('Журналы', 'Журналы'), ('Книги', 'Книги'), ('Комиксы', 'Комиксы')], max_length=50, verbose_name='Формат')),
                ('thema', models.CharField(blank=True, choices=[('Бизнес-литература', 'Бизнес-литература'), ('Дом и семья', 'Дом и семья'), ('Драки', 'Драки'), ('Искусство, культура', 'Искусство, культура'), ('Компьютерная литература', 'Компьютерная литература'), ('Кулинария, рецепты', 'Кулинария, рецепты'), ('Медицина, здоровье', 'Медицина, здоровье'), ('Наука, техника', 'Наука, техника'), ('Поэзия', 'Поэзия'), ('Природа, животные', 'Природа, животные'), ('Психология', 'Психология'), ('Публицистика', 'Публицистика'), ('Путешествия, фото', 'Путешествия, фото'), ('Религия, изотерика', 'Религия, изотерика'), ('Сад и огород', 'Сад и огород'), ('Спорт, фитнес', 'Спорт, фитнес'), ('Справочники, энциклопедии', 'Справочники, энциклопедии'), ('Учебная литература', 'Учебная литература'), ('Хобби, рукоделие, творчество', 'Хобби, рукоделие, творчество'), ('Художественная литература', 'Художественная литература')], max_length=50, verbose_name='Тематика')),
                ('collect', models.CharField(blank=True, choices=[('Антикварная мебель, посуда', 'Антикварная мебель, посуда'), ('Банкноты', 'Банкноты'), ('Билеты', 'Билеты'), ('Вещи знаменитостей, автографы', 'Вещи знаменитостей, автографы'), ('Виниловые пластинки', 'Виниловые пластинки'), ('Военные вещи', 'Военные вещи'), ('Документы', 'Документы'), ('Жетоны, медали, значки', 'Жетоны, медали, значки'), ('Календари', 'Календари'), ('Киндер-сюрпризы', 'Киндер-сюрпризы'), ('Книги, журналы, рукописи', 'Книги, журналы, рукописи'), ('Конверты, открытки', 'Конверты, открытки'), ('Копилки', 'Копилки'), ('Куклы, игрушки', 'Куклы, игрушки'), ('Магниты', 'Магниты'), ('Марки', 'Марки'), ('Модели', 'Модели'), ('Монеты, нумизматика', 'Монеты, нумизматика'), ('Музыкальные инструменты', 'Музыкальные инструменты'), ('Пепельницы, зажигалки', 'Пепельницы, зажигалки'), ('Пластиковые карточки', 'Пластиковые карточки'), ('Предметы искусства, картины', 'Предметы искусства, картины'), ('Статуэтки, фигурки', 'Статуэтки, фигурки'), ('Украшения, аксессуары', 'Украшения, аксессуары'), ('Фотографии, письма', 'Фотографии, письма'), ('Шахматы, игры', 'Шахматы, игры'), ('Шкатулки', 'Шкатулки'), ('Этикетки, бутылки, пробки', 'Этикетки, бутылки, пробки')], max_length=50, verbose_name='Коллекционирование')),
                ('creative', models.CharField(blank=True, choices=[('Выжигание', 'Выжигание'), ('Вязание', 'Вязание'), ('Лепка, скульптура', 'Лепка, скульптура'), ('Плетение, макраме', 'Плетение, макраме'), ('Поделки из бумаги', 'Поделки из бумаги'), ('Резьба по дереву', 'Резьба по дереву'), ('Рисование, раскраски', 'Рисование, раскраски'), ('Шитье, вышивание', 'Шитье, вышивание')], max_length=50, verbose_name='Материалы для творчества')),
                ('type_music', models.CharField(blank=True, choices=[('CD', 'CD'), ('DVD', 'DVD'), ('Blu-ray', 'Blu-ray'), ('Аудиокассеты', 'Аудиокассеты'), ('Виниловые пластинки', 'Виниловые пластинки')], max_length=50, verbose_name='Тип носителя')),
                ('ins_music', models.CharField(blank=True, choices=[('Аккордеоны, гармони, баяны', 'Аккордеоны, гармони, баяны'), ('Акустические гитары', 'Акустические гитары'), ('Бас-гитары', 'Бас-гитары'), ('Электрогитары', 'Электрогитары'), ('Гитарное усиление', 'Гитарное усиление'), ('Духовые инструменты', 'Духовые инструменты'), ('Клавишные', 'Клавишные'), ('Микшерные пульты', 'Микшерные пульты'), ('Народные инструменты', 'Народные инструменты'), ('Педали эффектов', 'Педали эффектов'), ('Скрипки, смычковые', 'Скрипки, смычковые'), ('Ударные инструменты', 'Ударные инструменты'), ('Аксессуары', 'Аксессуары')], max_length=50, verbose_name='Музыкальные инструменты')),
                ('desctop', models.CharField(blank=True, choices=[('Бродилки', 'Бродилки'), ('Викторины', 'Викторины'), ('Домино, лото', 'Домино, лото'), ('Карточные', 'Карточные'), ('Морской бой', 'Морской бой'), ('Паззлы, головоломки', 'Паззлы, головоломки'), ('Романтические', 'Романтические'), ('Слова, ассоциации', 'Слова, ассоциации'), ('Футбол, хоккей, бильярд', 'Футбол, хоккей, бильярд'), ('Шахматы, шашки, нарды', 'Шахматы, шашки, нарды'), ('Экономические', 'Экономические')], max_length=50, verbose_name='Настольные игры')),
            ],
            options={
                'verbose_name_plural': 'Хобби и развлечения',
                'verbose_name': 'Хобби и развлечения',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='HomeGarden',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('type_chemical', models.CharField(blank=True, choices=[('Для ухода за бытовой техники', 'Для ухода за бытовой техники'), ('Освежители воздуха', 'Освежители воздуха'), ('Средства для стирки', 'Средства для стирки'), ('Чистящие и моющие средства', 'Чистящие и моющие средства')], max_length=50, verbose_name='Бытовая химия')),
                ('type_sofa', models.CharField(blank=True, choices=[('Диваны', 'Диваны'), ('Компьютерные кресла', 'Компьютерные кресла'), ('Кресла', 'Кресла'), ('Кресла-мешки', 'Кресла-мешки')], max_length=50, verbose_name='Диваны и кресла')),
                ('type_beds', models.CharField(blank=True, choices=[('Кровати', 'Кровати'), ('Матрасы', 'Матрасы'), ('Раскладушки', 'Раскладушки')], max_length=50, verbose_name='Кровати и матрасы')),
                ('type_lighting', models.CharField(blank=True, choices=[('Бра', 'Бра'), ('Лампочки', 'Лампочки'), ('Лампы', 'Лампы'), ('Люстры', 'Люстры'), ('Ночники', 'Ночники'), ('Прожекторы', 'Прожекторы'), ('Светодиодные ленты', 'Светодиодные ленты'), ('Торшеры', 'Торшеры')], max_length=50, verbose_name='Освещение')),
                ('type_exteriors', models.CharField(blank=True, choices=[('Вазы', 'Вазы'), ('Зеркала', 'Зеркала'), ('Искусственные растения', 'Искусственные растения'), ('Картины и постеры', 'Картины и постеры'), ('Ключницы', 'Ключницы'), ('Наклейки', 'Наклейки'), ('Свечи и подсвечники', 'Свечи и подсвечники'), ('Статуэтки и фигурки', 'Статуэтки и фигурки'), ('Фотоальбомы и рамки', 'Фотоальбомы и рамки'), ('Часы', 'Часы'), ('Ширмы', 'Ширмы'), ('Шкатулки', 'Шкатулки')], max_length=50, verbose_name='Оформление экстерьера')),
                ('type_alarm', models.CharField(blank=True, choices=[('Домофоны', 'Домофоны'), ('Замки', 'Замки'), ('Сейфы', 'Сейфы'), ('Сигнализации', 'Сигнализации')], max_length=50, verbose_name='Охрана и сигнализация')),
                ('type_stand', models.CharField(blank=True, choices=[('В ванную', 'В ванную'), ('Под обувь', 'Под обувь'), ('Под телевизор', 'Под телевизор'), ('Прикроватные', 'Прикроватные')], max_length=50, verbose_name='Подставки и тумбы')),
                ('type_cookware', models.CharField(blank=True, choices=[('Банки', 'Банки'), ('Блюда и салатники', 'Блюда и салатники'), ('Бокалы', 'Бокалы'), ('Кострюли и ковши', 'Кострюли и ковши'), ('Кружки', 'Кружки'), ('Кувшины', 'Кувшины'), ('Кухонные аксессуары', 'Кухонные аксессуары'), ('Ложки и вилки', 'Ложки и вилки'), ('Ножи', 'Ножи'), ('Подносы', 'Подносы'), ('Рюмки', 'Рюмки'), ('Сервизы', 'Сервизы'), ('Сковородки', 'Сковородки'), ('Стаканы', 'Стаканы'), ('Тарелки', 'Тарелки'), ('Термосы и термокружки', 'Термосы и термокружки'), ('Чайники', 'Чайники')], max_length=50, verbose_name='Посуда')),
                ('type_plants', models.CharField(blank=True, choices=[('Аксессуары для рассады', 'Аксессуары для рассады'), ('Комнатные растения', 'Комнатные растения'), ('Семена и саженцы', 'Семена и саженцы')], max_length=50, verbose_name='Растения и семена')),
                ('type_garden', models.CharField(blank=True, choices=[('Аксессуары для полива', 'Аксессуары для полива'), ('Бассейны', 'Бассейны'), ('Биотуалеты', 'Биотуалеты'), ('Души и умывальники', 'Души и умывальники'), ('Отпугиватели животных', 'Отпугиватели животных'), ('Парники и теплицы', 'Парники и теплицы'), ('Садовая техника', 'Садовая техника'), ('Садовые инструменты', 'Садовые инструменты'), ('Садовый декор', 'Садовый декор'), ('Удобрения и декоры', 'Удобрения и декоры')], max_length=50, verbose_name='Сад и огород')),
                ('type_garden_fur', models.CharField(blank=True, choices=[('Гамаки', 'Гамаки'), ('Зонты от солнца', 'Зонты от солнца'), ('Качели', 'Качели'), ('Лежаки и шезлонги', 'Лежаки и шезлонги'), ('Подвесные кресла', 'Подвесные кресла'), ('Скамейки', 'Скамейки'), ('Шатры и беседки', 'Шатры и беседки')], max_length=50, verbose_name='Садовая мебель')),
                ('type_tables', models.CharField(blank=True, choices=[('Банкетки и скамьи', 'Банкетки и скамьи'), ('Журнальные столы', 'Журнальные столы'), ('Компьютерные столы', 'Компьютерные столы'), ('Обеденные столы', 'Обеденные столы'), ('Письменные столы', 'Письменные столы'), ('Пуфики', 'Пуфики'), ('Столы', 'Столы'), ('Стулья', 'Стулья'), ('Табуреты', 'Табуреты'), ('Туалетные столики', 'Туалетные столики')], max_length=50, verbose_name='Столы и стулья')),
                ('type_textil', models.CharField(blank=True, choices=[('Ковровые дорожки', 'Ковровые дорожки'), ('Ковры', 'Ковры'), ('Наматрасники', 'Наматрасники'), ('Одеяла', 'Одеяла'), ('Пледы', 'Пледы'), ('Подушки', 'Подушки'), ('Полотенца', 'Полотенца'), ('Постельное белье', 'Постельное белье'), ('Салфетки', 'Салфетки'), ('Скатерти', 'Скатерти'), ('Шторы и гардины', 'Шторы и гардины')], max_length=50, verbose_name='Текстиль и ковры')),
                ('type_cab', models.CharField(blank=True, choices=[('Гардеробы', 'Гардеробы'), ('Комоды', 'Комоды'), ('Полки', 'Полки'), ('Стеллажи', 'Стеллажи'), ('Шкафы', 'Шкафы')], max_length=50, verbose_name='Шкафы и комоды')),
            ],
            options={
                'verbose_name_plural': 'Для дома и дачи',
                'verbose_name': 'Для дома и дачи',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='HomeTech',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('type_scale', models.CharField(blank=True, choices=[('Механические', 'Механические'), ('Электронные', 'Электронные')], max_length=50, verbose_name='Тип весов')),
                ('applic', models.CharField(blank=True, choices=[('Напольные', 'Напольные'), ('Кухонные', 'Кухонные')], max_length=50, verbose_name='Область применения')),
                ('type_vit', models.CharField(blank=True, choices=[('Вытяжки', 'Вытяжки'), ('Фильтры для вытяжек', 'Фильтры для вытяжек')], max_length=50, verbose_name='Тип вытяжки')),
                ('brand_vit', models.CharField(blank=True, choices=[('Bosch', 'Bosch'), ('Elica', 'Elica'), ('Elikor', 'Elikor'), ('Falmec', 'Falmec'), ('Gorenje', 'Gorenje'), ('Hansa', 'Hansa'), ('Jetair', 'Jetair'), ('Korting', 'Korting'), ('Kronasteel', 'Kronasteel'), ('Kuppersberg', 'Kuppersberg'), ('Maunfeld', 'Maunfeld'), ('Panasonic', 'Panasonic'), ('Pentax', 'Pentax'), ('Pixel', 'Pixel'), ('Sigma', 'Sigma'), ('Sony', 'Sony'), ('Zigmund & Shtain', 'Zigmund & Shtain')], max_length=50, verbose_name='Марка вытяжки')),
                ('type_mix', models.CharField(blank=True, choices=[('Блендеры, измельчители', 'Блендеры, измельчители'), ('Кухонные комбайны', 'Кухонные комбайны'), ('Ломтерезки', 'Ломтерезки'), ('Миксеры', 'Миксеры'), ('Мясорубки', 'Мясорубки')], max_length=50, verbose_name='Тип')),
                ('type_climat', models.CharField(blank=True, choices=[('Вентиляторы', 'Вентиляторы'), ('Ионизаторы', 'Ионизаторы'), ('Метеостанции, термометры', 'Метеостанции, термометры'), ('Мобильные кондиционеры', 'Мобильные кондиционеры'), ('Настенные кондиционеры', 'Настенные кондиционеры'), ('Обогревающие приборы', 'Обогревающие приборы'), ('Очистители, увлажнители воздуха', 'Очистители, увлажнители воздуха')], max_length=50, verbose_name='Тип')),
                ('type_filtr', models.CharField(blank=True, choices=[('Кулеры', 'Кулеры'), ('Фильтры', 'Фильтры')], max_length=50, verbose_name='Тип')),
                ('type_stoves', models.CharField(blank=True, choices=[('Плиты', 'Плиты'), ('Варочные панели', 'Варочные панели'), ('Духовые шкафы', 'Духовые шкафы')], max_length=50, verbose_name='Плиты и духовые шкафы')),
                ('type_burners', models.CharField(blank=True, choices=[('Газовые', 'Газовые'), ('Индукционные', 'Индукционные'), ('Электрические', 'Электрические')], max_length=50, verbose_name='Тип конфорок')),
                ('security', models.CharField(blank=True, choices=[('Автовыключение', 'Автовыключение'), ('Защита от детей', 'Защита от детей'), ('Защита от перегрева', 'Защита от перегрева')], max_length=50, verbose_name='Безопасность')),
                ('timer', models.BooleanField(default=False, verbose_name='Таймер')),
                ('type_wosh', models.CharField(blank=True, choices=[('Полноразмерные', 'Полноразмерные'), ('Компактные, настольные', 'Компактные, настольные'), ('Узкие', 'Узкие')], max_length=50, verbose_name='Тип посудомоечной машины')),
                ('type_install', models.CharField(blank=True, choices=[('Отдельно стоящие', 'Отдельно стоящие'), ('Встраиваемые', 'Встраиваемые')], max_length=50, verbose_name='Тип установки')),
                ('brand_wosh', models.CharField(blank=True, choices=[('AEG', 'AEG'), ('Beco', 'Beco'), ('Bosch', 'Bosch'), ('Candy', 'Candy'), ('Electrolux', 'Electrolux'), ('Gorenje', 'Gorenje'), ('Hansa', 'Hansa'), ('Hotpoint-Ariston', 'Hotpoint-Ariston'), ('Indesit', 'Indesit'), ('Samsung', 'Samsung'), ('Siemens', 'Siemens'), ('Whirlpool', 'Whirlpool'), ('Zanussi', 'Zanussi')], max_length=50, verbose_name='Марка посудомоечной машины')),
                ('cap_wosh', models.CharField(blank=True, choices=[('12 и более комплектов', '12 и более комплектов'), ('9-11 комплектов', '9-11 комплектов'), ('До 6 комплектов', 'До 6 комплектов')], max_length=50, verbose_name='Вместимость посуды')),
                ('protect', models.BooleanField(default=False, verbose_name='Защита от протечек')),
                ('do_start', models.BooleanField(default=False, verbose_name='Отсрочка запуска')),
                ('use', models.CharField(blank=True, choices=[('Новый', 'Новый'), ('До 6 мес', 'До 6 мес'), ('1 год', '1 год'), ('2 года', '2 года'), ('от 3 лет и более', 'от 3 лет и более')], max_length=50, verbose_name='Срок использования')),
                ('type_food', models.CharField(blank=True, choices=[('Аэрогрили', 'Аэрогрили'), ('Блинницы', 'Блинницы'), ('йогуртницы', 'йогуртницы'), ('Микроволновые печи', 'Микроволновые печи'), ('Мини-печи, ростеры', 'Мини-печи, ростеры'), ('Мороженицы', 'Мороженицы'), ('Мультиварки', 'Мультиварки'), ('Пароварки', 'Пароварки'), ('Сушилки для овощей, фруктов', 'Сушилки для овощей, фруктов'), ('Сендвичницы, вафельницы', 'Сендвичницы, вафельницы'), ('Тостеры', 'Тостеры'), ('Фритюрницы', 'Фритюрницы'), ('Хлебопечки', 'Хлебопечки'), ('Электрогрили, шашлычницы', 'Электрогрили, шашлычницы')], max_length=50, verbose_name='Приготовление еды')),
                ('type_drinks', models.CharField(blank=True, choices=[('Электрочайники, термопоты', 'Электрочайники, термопоты'), ('Соковыжималки', 'Соковыжималки'), ('Кофеварки, кофемашины', 'Кофеварки, кофемашины'), ('Кофемолки', 'Кофемолки')], max_length=50, verbose_name='Приготовление напитков')),
                ('type_cleaners', models.CharField(blank=True, choices=[('Паровые швабры', 'Паровые швабры'), ('Пароочистители', 'Пароочистители'), ('Пылесосы', 'Пылесосы'), ('Роботы-пылесосы', 'Роботы-пылесосы')], max_length=50, verbose_name='Пылесосы и пароочистители')),
                ('type_cleaning', models.CharField(blank=True, choices=[('Сухая', 'Сухая'), ('Влажная', 'Влажная'), ('Сухая и влажная', 'Сухая и влажная')], max_length=50, verbose_name='Тип уборки')),
                ('brand_clean', models.CharField(blank=True, choices=[('Bosch', 'Bosch'), ('Dyson', 'Dyson'), ('iRobot', 'iRobot'), ('Karcher', 'Karcher'), ('LG', 'LG'), ('Philips', 'Philips'), ('Polaris', 'Polaris'), ('Samsung', 'Samsung'), ('Scarlett', 'Scarlett'), ('Supra', 'Supra'), ('Thomas', 'Thomas'), ('Zelmer', 'Zelmer')], max_length=50, verbose_name='Марка')),
                ('brand_washing', models.CharField(blank=True, choices=[('Ardo', 'Ardo'), ('Beco', 'Beco'), ('Bosch', 'Bosch'), ('Candy', 'Candy'), ('Dewoo', 'Dewoo'), ('Electrolux', 'Electrolux'), ('Gorenje', 'Gorenje'), ('Hansa', 'Hansa'), ('Hotpoint-Ariston', 'Hotpoint-Ariston'), ('Indesit', 'Indesit'), ('LG', 'LG'), ('Samsung', 'Samsung'), ('Siemens', 'Siemens'), ('Vestel', 'Vestel'), ('Whirlpool', 'Whirlpool'), ('Zanussi', 'Zanussi'), ('Другая', 'Другая')], max_length=50, verbose_name='Марка')),
                ('type_washing', models.CharField(blank=True, choices=[('Отдельно стоящие', 'Отдельно стоящие'), ('Встраиваемые', 'Встраиваемые')], max_length=50, verbose_name='Тип')),
                ('load_washing', models.CharField(blank=True, choices=[('До 4 кг', 'До 4 кг'), ('До 5 кг', 'До 5 кг'), ('До 6 кг', 'До 6 кг'), ('До 7 кг', 'До 7 кг'), ('От 7 кг', 'От 7 кг')], max_length=50, verbose_name='Загрузка, кг')),
                ('dryer', models.BooleanField(default=False, verbose_name='Сушка')),
                ('spin_speed', models.CharField(blank=True, choices=[('700-800 об/мин', '700-800 об/мин'), ('800-900 об/мин', '800-900 об/мин'), ('900-1100 об/мин', '900-1100 об/мин'), ('1100-1200 об/мин', '1100-1200 об/мин'), ('до 700 об/мин', 'до 700 об/мин'), ('от 1200 об/мин', 'от 1200 об/мин')], max_length=50, verbose_name='Скорость отжима')),
                ('type_iron', models.CharField(blank=True, choices=[('Утюги', 'Утюги'), ('Отпариватели', 'Отпариватели'), ('Гладильные доски', 'Гладильные доски'), ('Сушилки для белья', 'Сушилки для белья'), ('Сушилки для обуви', 'Сушилки для обуви')], max_length=50, verbose_name='Тип')),
                ('type_refr', models.CharField(blank=True, choices=[('Холодильники', 'Холодильники'), ('Морозильники', 'Морозильники')], max_length=50, verbose_name='Тип холодильника')),
                ('brand_refr', models.CharField(blank=True, choices=[('AEG', 'AEG'), ('Atlant', 'Atlant'), ('Beco', 'Beco'), ('Bosch', 'Bosch'), ('Dewoo', 'Dewoo'), ('Electrolux', 'Electrolux'), ('Gorenje', 'Gorenje'), ('Hotpoint-Ariston', 'Hotpoint-Ariston'), ('Indesit', 'Indesit'), ('LG', 'LG'), ('Liebherr', 'Liebherr'), ('Pozis', 'Pozis'), ('Samsung', 'Samsung'), ('Sharp', 'Sharp'), ('Siemens', 'Siemens'), ('Stinol', 'Stinol'), ('Whirlpool', 'Whirlpool'), ('Бирюса', 'Бирюса'), ('Минск', 'Минск'), ('Саратов', 'Саратов'), ('Другая', 'Другая')], max_length=50, verbose_name='Марка холодильника')),
                ('height_refr', models.CharField(blank=True, choices=[('50-130 см', '50-130 см'), ('130-150 см', '130-150 см'), ('150-170 см', '150-170 см'), ('180-215 см', '180-215 см')], max_length=50, verbose_name='Высота')),
                ('type_sewing', models.CharField(blank=True, choices=[('Вышивальные машины', 'Вышивальные машины'), ('Вязальные машины', 'Вязальные машины'), ('Оверлоки', 'Оверлоки'), ('Швейные машины', 'Швейные машины'), ('Аксессуары и запчасти', 'Аксессуары и запчасти')], max_length=50, verbose_name='Тип')),
                ('brand_sewing', models.CharField(blank=True, choices=[('AstraLux', 'AEG'), ('Bernina', 'Atlant'), ('Brother', 'Beco'), ('Elna', 'Bosch'), ('Jaguar', 'Dewoo'), ('Janome', 'Electrolux'), ('Juki', 'Gorenje'), ('Merrylock', 'Hotpoint-Ariston'), ('Singer', 'Indesit'), ('Toyota', 'LG'), ('Тула', 'Liebherr'), ('Чайка', 'Pozis')], max_length=50, verbose_name='Марка')),
            ],
            options={
                'verbose_name_plural': 'Бытовая техника',
                'verbose_name': 'Бытовая техника',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('required_experience', models.CharField(blank=True, choices=[('Без опыта работы', 'Без опыта работы'), ('Меньше года', 'Меньше года'), ('От 1 до 3 лет', 'От 1 до 3 лет'), ('От 3 до 5 лет', 'От 3 до 5 лет'), ('Больше 5 лет', 'Больше 5 лет')], max_length=50, verbose_name='Требуемый опыт')),
                ('work_schedule', models.CharField(blank=True, choices=[('Полный день', 'Полный день'), ('Сменный график', 'Сменный график'), ('Гибкий график', 'Гибкий график'), ('Удаленная работа', 'Удаленная работа'), ('Вахтовый метод', 'Вахтовый метод'), ('Не полный день', 'Не полный день')], max_length=50, verbose_name='График работы')),
                ('type_of_employment', models.CharField(blank=True, choices=[('Полная занятость', 'Полная занятость'), ('Частичная занятость', 'Частичная занятость'), ('Проектная/временная работа', 'Проектная/временная работа'), ('Волонтерство', 'Волонтерство'), ('Стажировка', 'Стажировка'), ('Временная работа', 'Временная работа')], max_length=50, verbose_name='Тип занятости')),
                ('nature_work', models.CharField(blank=True, choices=[('На точке', 'На точке'), ('Офисная', 'Офисная'), ('Разездная', 'Разездная'), ('На дому', 'На дому')], max_length=50, verbose_name='Характер работы')),
                ('money', models.CharField(blank=True, choices=[('Почасовая', 'Почасовая'), ('Ежедневная', 'Ежедневная'), ('Ежемесячная', 'Ежемесячная')], max_length=50, verbose_name='Заработная плата')),
                ('other', models.CharField(blank=True, choices=[('Срочно требуется', 'Срочно требуется'), ('Можно до 18 лет', 'Можно до 18 лет'), ('Необходима мед. книжка', 'Необходима мед. книжка')], max_length=50, verbose_name='Другие условия')),
                ('company', models.CharField(blank=True, max_length=100, verbose_name='Компания')),
                ('pay', models.CharField(blank=True, max_length=100, verbose_name='Зарплата')),
            ],
            options={
                'verbose_name_plural': 'Вакансии',
                'verbose_name': 'Вакансии',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='Man',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('type', models.CharField(blank=True, choices=[('Брелоки и ключницы', 'Брелоки и ключницы'), ('Галстуки и бабочки', 'Галстуки и бабочки'), ('Для волос', 'Для волос'), ('Зонты', 'Зонты'), ('Кошельки', 'Кошельки'), ('Очки', 'Очки'), ('Перчатки и варежки', 'Перчатки и варежки'), ('Ремни и пояса', 'Ремни и пояса'), ('Рюкзаки', 'Рюкзаки'), ('Сумки', 'Сумки'), ('Украшения', 'Украшения'), ('Часы', 'Часы'), ('Чемоданы', 'Чемоданы'), ('Шарфы и платки', 'Шарфы и платки')], max_length=50, verbose_name='Тип аксессуара')),
                ('brand', models.CharField(blank=True, choices=[('ACNE STUDIOS', 'ACNE STUDIOS'), ('ADIDAS', 'ADIDAS'), ('Alba', 'Alba'), ('Alexander McQueen', 'Alexander McQueen'), ('Alexander Wang', 'Alexander Wang'), ('Ann Demeulemeester', 'Ann Demeulemeester'), ('Armani', 'Armani'), ('Asos', 'Asos'), ('Avon', 'Avon'), ('Baldinini', 'Baldinini'), ('Balenciaga', 'Balenciaga'), ('Befree', 'Befree'), ('Braccialini', 'Braccialini'), ('Burberry', 'Burberry'), ('Calipso', 'Calipso'), ('Calvin Clein', 'Calvin Clein'), ('Casio', 'Casio'), ('Celine', 'Celine'), ('Chanel', 'Chanel'), ('Chloe', 'Chloe'), ('Chtistian Dior', 'Chtistian Dior'), ("Colin's", "Colin's"), ('Comme des Garcons', 'Comme des Garcons'), ('Cos', 'Cos'), ('Daniel Wellington', 'Daniel Wellington'), ('Dasigual', 'Dasigual'), ('Diesel', 'Diesel'), ('Diva', 'Diva'), ('Dkny', 'Dkny'), ('Dolce&Cabbana', 'Dolce&Cabbana'), ('Dries Van Noten', 'Dries Van Noten'), ('Ecco', 'Ecco'), ('Escada', 'Escada'), ('Etro', 'Etro'), ('Fendi', 'Fendi'), ('Fjallraven', 'Fjallraven'), ('Furla', 'Furla'), ('Geargio Armani', 'Geargio Armani'), ('Givenchy', 'Givenchy'), ('Gucci', 'Gucci'), ('H&M', 'H&M'), ('Helmut Lang', 'Helmut Lang'), ('Incanto', 'Incanto'), ('Insity', 'Insity'), ('Isabel Marant', 'Isabel Marant'), ('Jil Sander', 'Jil Sander'), ('Jimmy Choo', 'Jimmy Choo'), ('Jast Cavalli', 'Jast Cavalli'), ('Karen Millen', 'Karen Millen'), ('Kenzo', 'Kenzo'), ('Lacoste', 'Lacoste'), ("Livi's", "Livi's"), ('Louiss Vuitton', 'Louiss Vuitton'), ('Love Republic', 'Love Republic'), ('Maison Margiela', 'Maison Margiela'), ('Maison Kitsune', 'Maison Kitsune'), ('Mango', 'Mango'), ('Marc Jacobs', 'Marc Jacobs'), ('Marni', 'Marni'), ('Mascotte', 'Mascotte'), ('Max Mara', 'Max Mara'), ('Mexx', 'Mexx'), ('Michael Cors', 'Michael Cors'), ('Missoni', 'Missoni'), ('Miu Miu', 'Miu Miu'), ('Mohito', 'Mohito'), ('Moschino', 'Moschino'), ('Motivi', 'Motivi'), ('Neil Barrett', 'Neil Barrett'), ('New Yorker', 'New Yorker'), ('Next', 'Next'), ('Nike', 'Nike'), ("O'Stin", "O'Stin"), ('Off-White', 'Off-White'), ('Officine Creative', 'Officine Creative'), ('Oysho', 'Oysho'), ('Pinco', 'Pinco'), ('Piquadro', 'Piquadro'), ('Prada', 'Prada'), ('Pull&Bear', 'Pull&Bear'), ('RAFF SIMONS', 'RAFF SIMONS'), ('Ralph Lauren', 'Ralph Lauren'), ('Ray-Ban', 'Ray-Ban'), ('Reebok', 'Reebok'), ('Reserved', 'Reserved'), ('Rick Owens', 'Rick Owens'), ('River Island', 'River Island'), ('Roxy', 'Roxy'), ('Salvatore Ferragamo', 'Salvatore Ferragamo'), ('Sisley', 'Sisley'), ('Skagen', 'Skagen'), ('Stella Mccartney', 'Stella Mccartney'), ('Stradivarius', 'Stradivarius'), ('Sunlight', 'Sunlight'), ('Swarovski', 'Swarovski'), ('Ted Baker', 'Ted Baker'), ('Terranova', 'Terranova'), ('Tods', 'Tods'), ('Tommy Hilfiger', 'Tommy Hilfiger'), ('Topshop', 'Topshop'), ('Toska Blu', 'Toska Blu'), ('Tous', 'Tous'), ('Undercover', 'Undercover'), ('United Colors of Beneton', 'United Colors of Beneton'), ('Valentino', 'Valentino'), ('Vans', 'Vans'), ('Versace', 'Versace'), ("Victoria's Secret", "Victoria's Secret"), ('Vivienne WestWood', 'Vivienne WestWood'), ('YSL', 'YSL'), ('Yohji Yamamoto', 'Yohji Yamamoto'), ('Yves Saint Laurent', 'Yves Saint Laurent'), ('Zara', 'Zara'), ('Zarina', 'Zarina'), ('Дикая Орхидея', 'Дикая Орхидея'), ('Новая Заря', 'Новая Заря'), ('Эконика', 'Эконика')], max_length=50, verbose_name='Бренд')),
                ('color', models.CharField(blank=True, choices=[('Белый', 'Белый'), ('Хаки', 'Хаки'), ('Серый', 'Серый'), ('Чёрный', 'Чёрный'), ('Коричневый', 'Коричневый'), ('Бордовый', 'Бордовый'), ('Бежевый', 'Бежевый'), ('Красный', 'Красный'), ('Оранжевый', 'Оранжевый'), ('Жёлтый', 'Жёлтый'), ('Зелёный', 'Зелёный'), ('Голубой', 'Голубой'), ('Синий', 'Синий'), ('Фиолетовый', 'Фиолетовый'), ('Пурпурный', 'Пурпурный'), ('Розовый', 'Розовый'), ('Разноцветный', 'Разноцветный')], max_length=45, verbose_name='Цвет')),
                ('condition', models.CharField(blank=True, choices=[('Б/У', 'Б/У'), ('Новое', 'Новое')], max_length=50, verbose_name='Состояние')),
                ('size', models.CharField(blank=True, choices=[('44-46 (S)', '44-46 (S)'), ('46-48 (M)', '46-48 (M)'), ('48-50 (L)', '48-50 (L)'), ('50-52 (XL)', '50-52 (XL)'), ('52-54 (XXL)', '52-54 (XXL)'), ('54-56 (XXXL)', '54-56 (XXXL)')], max_length=50, verbose_name='Размер')),
                ('season', models.CharField(blank=True, choices=[('Демисезон', 'Демисезон'), ('Зима', 'Зима'), ('Лето', 'Лето')], max_length=50, verbose_name='Сезон')),
                ('outerwear', models.CharField(blank=True, choices=[('Ветровки', 'Ветровки'), ('Джинсовые куртки', 'Джинсовые куртки'), ('Дождевики', 'Дождевики'), ('Дубленки', 'Дубленки'), ('Жилеты', 'Жилеты'), ('Кожаные куртки', 'Кожаные куртки'), ('Куртки', 'Куртки'), ('Пальто', 'Пальто'), ('Парки', 'Парки'), ('Плащи и тренчи', 'Плащи и тренчи'), ('Пуховики', 'Пуховики')], max_length=50, verbose_name='Верхняя одежда')),
                ('hat', models.CharField(blank=True, choices=[('Бейсболки и кепки', 'Бейсболки и кепки'), ('Береты', 'Береты'), ('Банданы', 'Банданы'), ('Панамы', 'Панамы'), ('Шапки', 'Шапки'), ('Шляпы', 'Шляпы')], max_length=50, verbose_name='Головные уборы')),
                ('home', models.CharField(blank=True, choices=[('Пижамы', 'Пижамы'), ('Халаты', 'Халаты')], max_length=50, verbose_name='Домашняя одежда')),
                ('coverall', models.CharField(blank=True, choices=[('Полукомбинезоны', 'Полукомбинезоны'), ('Комбинезоны', 'Комбинезоны')], max_length=50, verbose_name='Комбинезоны')),
                ('underwear', models.CharField(blank=True, choices=[('Носки', 'Носки'), ('Термобелье', 'Термобелье'), ('Трусы', 'Трусы'), ('Плавки', 'Плавки')], max_length=50, verbose_name='Нижнее белье')),
                ('shoes', models.CharField(blank=True, choices=[('Ботинки', 'Ботинки'), ('Валенки и галоши', 'Валенки и галоши'), ('Домашняя обувь', 'Домашняя обувь'), ('Кеды', 'Кеды'), ('Кроссовки', 'Кроссовки'), ('Мокасины', 'Мокасины'), ('Сандалии', 'Сандалии'), ('Сапоги', 'Сапоги'), ('Слипоны', 'Слипоны'), ('Тапочки', 'Тапочки'), ('Туфли', 'Туфли'), ('Угги и унты', 'Угги и унты'), ('Шлепанцы', 'Шлепанцы')], max_length=50, verbose_name='Обувь')),
                ('shoe_size', models.CharField(blank=True, choices=[('38', '38'), ('39', '39'), ('40', '40'), ('41', '41'), ('42', '42'), ('43', '43'), ('44', '44'), ('45', '45'), ('46', '46')], max_length=50, verbose_name='Размер обуви')),
                ('suits', models.CharField(blank=True, choices=[('Жакеты', 'Жакеты'), ('Жилетки', 'Жилетки'), ('Костюмы', 'Костюмы'), ('Пиджаки', 'Пиджаки')], max_length=50, verbose_name='Пиджаки и костюмы')),
                ('shirts', models.CharField(blank=True, choices=[('Джинсовые', 'Джинсовые'), ('Длинный рукав', 'Длинный рукав'), ('Короткий рукав', 'Короткий рукав')], max_length=50, verbose_name='Рубашки')),
                ('sweaters', models.CharField(blank=True, choices=[('Водолазки', 'Водолазки'), ('Джемперы', 'Джемперы'), ('Кардиганы', 'Кардиганы'), ('Кофты', 'Кофты'), ('Олимпайки', 'Олимпайки'), ('Пуловеры', 'Пуловеры'), ('Свитеры', 'Свитеры'), ('Толстовки и худи', 'Толстовки и худи')], max_length=50, verbose_name='Свитера и толстовки')),
                ('sportwear', models.CharField(blank=True, choices=[('Верхняя одежда', 'Верхняя одежда'), ('Спортивные костюмы', 'Спортивные костюмы'), ('Футболки и поло', 'Футболки и поло'), ('Штаны и шорты', 'Штаны и шорты')], max_length=50, verbose_name='Спортивная одежда')),
                ('tops', models.CharField(blank=True, choices=[('Лонгсливы', 'Лонгсливы'), ('Майки', 'Майки'), ('Поло', 'Поло'), ('Футболки', 'Футболки')], max_length=50, verbose_name='Футболки и поло')),
                ('pants', models.CharField(blank=True, choices=[('Бриджы', 'Бриджы'), ('Брюки', 'Брюки'), ('Джинсы', 'Джинсы'), ('Шорты', 'Шорты')], max_length=50, verbose_name='Штаны и шорты')),
                ('pant_size', models.CharField(blank=True, choices=[('28', '28'), ('29', '29'), ('30', '30'), ('31', '31'), ('32', '32'), ('33', '33'), ('34', '34'), ('35', '35'), ('36', '36'), ('37', '37'), ('38 и больше', '38 и больше')], max_length=50, verbose_name='Размер штанов')),
            ],
            options={
                'verbose_name_plural': 'Мужской гардероб',
                'verbose_name': 'Мужской гардероб',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='Pets',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('breed_dog', models.CharField(blank=True, choices=[('Акита', 'Акита'), ('Аляскинский маламут', 'Аляскинский маламут'), ('Американский бульдог', 'Американский бульдог'), ('Английский бульдог', 'Английский бульдог'), ('Басенджи', 'Басенджи'), ('Бассет', 'Бассет'), ('Бельгийская овчарка', 'Бельгийская овчарка'), ('Бельгийский гриффон', 'Бельгийский гриффон'), ('Бернский зенненхунд', 'Бернский зенненхунд'), ('Бивер', 'Бивер'), ('Бигль', 'Digma'), ('Бишон фризе', 'Бишон фризе'), ('Бобтейл', 'Бобтейл'), ('Боксер', 'Боксер'), ('Болонка', 'Болонка'), ('Бриар', 'Бриар'), ('Брюссельский гриффон', 'Брюссельский гриффон'), ('Бульмастиф', 'Бульмастиф'), ('Бультерьер', 'Бультерьер'), ('Бурбуль', 'Бурбуль'), ('Вельштерьер', 'Вельштерьер'), ('Вест-хайленд-уайт-терьер', 'Вест-хайленд-уайт-терьер'), ('Восточноевропейская овчарка', 'Восточноевропейская овчарка'), ('Далматин', 'Далматин'), ('Джек Рассел терьер', 'Джек Рассел терьер'), ('Доберман', 'Доберман'), ('Дог', 'Дог'), ('Ирландский терьер', 'Ирландский терьер'), ('Йоркширский терьер', 'Йоркширский терьер'), ('Кавказская овчарка', 'Кавказская овчарка'), ('Кане-корсо', 'Кане-корсо'), ('Керн-терьер', 'Керн-терьер'), ('Китайская хохлатая', 'Китайская хохлатая'), ('Кокер-спаниель', 'Кокер-спаниель'), ('Колли', 'Колли'), ('Курцхаар', 'Курцхаар'), ('Лабрадор', 'ЛабрадорZTE'), ('Лайка', 'Лайка'), ('Левретка', 'Левретка'), ('Леонбергер', 'Леонбергер'), ('Лхаса Апсо', 'Лхаса Апсо'), ('Мастиф', 'Мастиф'), ('Миттельшнауцер', 'Миттельшнауцер'), ('Мопс', 'Мопс'), ('Московская сторожевая', 'Московская сторожевая'), ('Немецкая овчарка', 'Немецкая овчарка'), ('Норвич-терьер', 'Норвич-терьер'), ('Ньюфаундленд', 'Ньюфаундленд'), ('Овчарка', 'Овчарка'), ('Папильон', 'Папильон'), ('Пекинес', 'Пекинес'), ('Петербургская орхидея', 'Петербургская орхидея'), ('Питбуль', 'Питбуль'), ('Пойнтер', 'Пойнтер'), ('Пти-брабансон', 'Пти-брабансон'), ('Пудель', 'Пудель'), ('Ретривер', 'Ретривер'), ('Ризеншнауцер', 'Ризеншнауцер'), ('Родезийский риджбек', 'Родезийский риджбек'), ('Ротвейлер', 'Ротвейлер'), ('Русская борзая', 'Русская борзая'), ('Самоедская лайка', 'Самоедская лайка'), ('Сенбернар', 'Сенбернар'), ('Сеттер', 'Сеттер'), ('Сибирский хаски', 'Сибирский хаски'), ('Скотч-терьер', 'Скотч-терьер'), ('Спаниель', 'Спаниель'), ('Среднеазиатская овчарка', 'Среднеазиатская овчарка'), ('Стаффордширский терьер', 'Стаффордширский терьер'), ('Такса', 'Такса'), ('Той-терьер', 'Той-терьер'), ('Той-пудель', 'Той-пудель'), ('Фландрский бувье', 'Фландрский бувье'), ('Фокстерьер', 'Фокстерьер'), ('Французская овчарка', 'Французская овчарка'), ('Французский терьер', 'Французский терьер'), ('Цвергпинчер', 'Цвергпинчер'), ('Цвергшнауцер', 'Цвергшнауцер'), ('Чау-чау', 'Чау-чау'), ('Чихуахуа', 'Чихуахуа'), ('Шарпей', 'Шарпей'), ('Щвейцарская овчарка', 'Щвейцарская овчарка'), ('Шелти', 'Шелти'), ('Ши-тсу', 'Ши-тсу'), ('Шпиц', 'Шпиц'), ('Эрдельтерьер', 'Эрдельтерьер'), ('Ягдтерьер', 'Ягдтерьер'), ('Японский хин', 'Японский хин'), ('Другая', 'Другая')], max_length=50, verbose_name='Порода собаки')),
                ('breed_cat', models.CharField(blank=True, choices=[('Абиссинская', 'Абиссинская'), ('Американский керл', 'Американский керл'), ('Балинез', 'Балинез'), ('Бенгальская', 'Бенгальская'), ('Британская', 'Британская'), ('Бурманская', 'Бурманская'), ('Девон-рекс', 'Девон-рекс'), ('Донской сфинкс', 'Донской сфинкс'), ('Европейская', 'Европейская'), ('Канадский сфинкс', 'Канадский сфинкс'), ('Корниш-рекс', 'Корниш-рекс'), ('Курильский бобтейл', 'Курильский бобтейл'), ('Лаперм', 'Лаперм'), ('Манчкин', 'Манчкин'), ('Мейн-кун', 'Мейн-кун'), ('Меконгский бобтейл', 'Меконгский бобтейл'), ('Невская маскарадная', 'Невская маскарадная'), ('Норвежская лесная', 'Норвежская лесная'), ('Ориентальная', 'Ориентальная'), ('Оцикет', 'Оцикет'), ('Персидская', 'Персидская'), ('Петерболд', 'Петерболд'), ('Русская голубая', 'Русская голубая'), ('Селкирк-рекс', 'Селкирк-рекс'), ('Сиамская', 'Сиамская'), ('Сибирская', 'Сибирская'), ('Сингапурская', 'Сингапурская'), ('Сомалийская', 'Сомалийская'), ('Тайская', 'Тайская'), ('Турецкая ангора', 'Турецкая ангора'), ('Уральский рекс', 'Уральский рекс'), ('Шотландская', 'Шотландская'), ('Экзотическая', 'Экзотическая'), ('Японский бобтейл', 'Японский бобтейл'), ('Другая', 'Другая')], max_length=50, verbose_name='Порода кошки')),
                ('type_bird', models.CharField(blank=True, choices=[('Голуби', 'Голуби'), ('Певчие', 'Певчие'), ('Попугаи', 'Попугаи'), ('С/х птицы', 'С/х птицы')], max_length=50, verbose_name='Вид птицы')),
                ('type_rodents', models.CharField(blank=True, choices=[('Кролики', 'Кролики'), ('Морские свинки', 'Морские свинки'), ('Мыши и крысы', 'Мыши и крысы'), ('Хомяки', 'Хомяки'), ('Хорьки', 'Хорьки'), ('Шиншиллы', 'Шиншиллы')], max_length=50, verbose_name='Тип грызуна')),
                ('type_beast', models.CharField(blank=True, choices=[('Козы', 'Козы'), ('Коровы и быки', 'Коровы и быки'), ('Овцы и бараны', 'Овцы и бараны'), ('Лошади', 'Лошади'), ('Свиньи', 'Свиньи')], max_length=50, verbose_name='Тип с/х животного')),
                ('otherss', models.CharField(blank=True, choices=[('Пауки и насекомые', 'Пауки и насекомые'), ('Улитки', 'Улитки'), ('Черепахи и рептилии', 'Черепахи и рептилии')], max_length=50, verbose_name='Другие животные')),
                ('type_animals', models.CharField(blank=True, choices=[('Собаки', 'Собаки'), ('Кошки', 'Кошки'), ('Птицы', 'Птицы'), ('Грызуны', 'Грызуны'), ('Рыбки', 'Рыбки'), ('Лошади', 'Лошади'), ('Рептилии', 'Рептилии'), ('с/х животные', 'с/х животные')], max_length=50, verbose_name='Тип животного')),
                ('type_good', models.CharField(blank=True, choices=[('Будки и вольеры', 'Будки и вольеры'), ('Витамины и добавки', 'Витамины и добавки'), ('Игрушки', 'Игрушки'), ('Инструменты для ухода', 'Инструменты для ухода'), ('Клетки и переноски', 'Клетки и переноски'), ('Корма', 'Корма'), ('Косметика и гигиена', 'Косметика и гигиена'), ('Лежаки и домики', 'Лежаки и домики'), ('Миски, кормушки, поилки', 'Миски, кормушки, поилки'), ('Намордники', 'Намордники'), ('Одежда и обувь', 'Одежда и обувь'), ('От блох и клещей', 'От блох и клещей'), ('Ошейники и поводки', 'Ошейники и поводки'), ('Туалет и наполнители', 'Туалет и наполнители')], max_length=50, verbose_name='Тип товара')),
                ('type_aqua', models.CharField(blank=True, choices=[('Аквариумы', 'Аквариумы'), ('Декор и растения', 'Декор и растения'), ('Инвентарь для обслуживания', 'Инвентарь для обслуживания'), ('Обогрев', 'Обогрев'), ('Освещение', 'Освещение'), ('Террариумы', 'Террариумы'), ('Фильтры и аэрация', 'Фильтры и аэрация')], max_length=50, verbose_name='Аквариумистика')),
            ],
            options={
                'verbose_name_plural': 'Животные',
                'verbose_name': 'Животные',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='PhoneAd',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('brand_phone', models.CharField(blank=True, choices=[('iPhone', 'iPhone'), ('Samsung', 'Samsung'), ('Xiami', 'Xiami'), ('Nokia', 'Nokia'), ('ASUS', 'ASUS'), ('Acer', 'Acer'), ('Alcatel', 'Alcatel'), ('BQ', 'BQ'), ('BlackBerry', 'BlackBerry'), ('Dexp', 'Dexp'), ('Digma', 'Digma'), ('DNS', 'DNS'), ('Doogee', 'Doogee'), ('Explay', 'Explay'), ('Fly', 'Fly'), ('Nania', 'Nania'), ('Ginzzu', 'Ginzzu'), ('Google', 'GoogleGoogle'), ('Highscreen', 'Highscreen'), ('Homtom', 'Homtom'), ('HTC', 'HTC'), ('Jinga', 'Jinga'), ('LeEco', 'LeEco'), ('Lenovo', 'Lenovo'), ('LG', 'LG'), ('Meizu', 'Meizu'), ('Micromax', 'Micromax'), ('Microsoft', 'Microsoft'), ('Motorola', 'Motorola'), ('Philips', 'Philips'), ('Prestigio', 'Prestigio'), ('Siemens', 'Siemens'), ('Sony', 'Sony'), ('Texet', 'Texet'), ('Vertu', 'Vertu'), ('WileyFox', 'WileyFox'), ('ZTE', 'ZTE'), ('MTC', 'MTC'), ('Билайн', 'Билайн'), ('Мегафон', 'Мегафон'), ('ТЕЛЕ2', 'ТЕЛЕ2'), ('Другая', 'Другая')], max_length=50, verbose_name='Марка телефона')),
                ('os', models.CharField(blank=True, choices=[('Android', 'Android'), ('IOS', 'IOS'), ('Windows', 'Windows'), ('Simbian', 'Simbian'), ('Bada', 'Bada'), ('Dlackberry OS', 'Dlackberry OS'), ('Linux', 'Linux')], max_length=50, verbose_name='Операционная система')),
                ('screen', models.CharField(blank=True, choices=[('4" и менее', '4" и менее'), ('от 4.1" до 4.9"', 'от 4.1" до 4.9"'), ('от 5.0" до 5.4"', 'от 5.0" до 5.4"'), ('5.5" и более', '5.5" и более')], max_length=50, verbose_name='Диагональ экрана')),
                ('internal', models.CharField(blank=True, choices=[('2 Гб и менее', '2 Гб и менее'), ('4 Гб', '4 Гб'), ('8 Гб', '8 Гб'), ('16 Гб', '16 Гб'), ('32 Гб', '32 Гб'), ('64 Гб', '64 Гб'), ('128 Гб', '128 Гб'), ('256 Гб', '256 Гб'), ('512 Гб', '512 Гб')], max_length=50, verbose_name='Встроенная память')),
                ('slot', models.CharField(blank=True, choices=[('Есть', 'Есть'), ('Нет', 'Нет')], max_length=50, verbose_name='Слот для карты памяти')),
                ('camera', models.CharField(blank=True, choices=[('Нет камеры', 'Нет камеры'), ('Менее 2 Мпикс', 'Менее 2 Мпикс'), ('от 2 до 4.9 Мпикс', 'от 2 до 4.9 Мпикс'), ('от 5 до 9.9 Мпикс', 'от 5 до 9.9 Мпикс'), ('10 Мпикс и более', '10 Мпикс и более')], max_length=50, verbose_name='Основная камера')),
                ('front', models.CharField(blank=True, choices=[('Нет камеры', 'Нет камеры'), ('Менее 1 Мпикс', 'Менее 1 Мпикс'), ('от 1 до 2.9 Мпикс', 'от 1 до 2.9 Мпикс'), ('от 3 до 4.9 Мпикс', 'от 3 до 4.9 Мпикс'), ('5 Мпикс и более', '5 Мпикс и более')], max_length=50, verbose_name='Фронтальная камера')),
                ('a3G', models.BooleanField(default=False, verbose_name='3G')),
                ('LTE', models.BooleanField(default=False, verbose_name='4G')),
                ('sim', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('Более 4', 'Более 4')], max_length=50, verbose_name='Количество SIM-карт')),
                ('GPS', models.BooleanField(default=False, verbose_name='GPS')),
                ('NFC', models.BooleanField(default=False, verbose_name='NFC')),
                ('IP', models.BooleanField(default=False, verbose_name='Защита от пыли и влаги')),
                ('use', models.CharField(blank=True, choices=[('Новый', 'Новый'), ('До 6 мес', 'До 6 мес'), ('1 год', '1 год'), ('2 года', '2 года'), ('от 3 лет и более', 'от 3 лет и более')], max_length=50, verbose_name='Срок использования')),
                ('brand_pad', models.CharField(blank=True, choices=[('Apple', 'Apple'), ('Samsung', 'Samsung'), ('ASUS', 'ASUS'), ('Archos', 'Archos'), ('Alcatel', 'Alcatel'), ('BQ', 'BQ'), ('Dell', 'Dell'), ('Dexp', 'Dexp'), ('Digma', 'Digma'), ('DNS', 'DNS'), ('Explay', 'Explay'), ('Fly', 'Fly'), ('Nania', 'Nania'), ('Ginzzu', 'Ginzzu'), ('Google', 'GoogleGoogle'), ('Haler', 'Haler'), ('Homtom', 'Homtom'), ('HTC', 'HTC'), ('HP', 'HP'), ('Huawei', 'Huawei'), ('Iconbit', 'Iconbit'), ('Irbis', 'Irbis'), ('Lenovo', 'Lenovo'), ('LG', 'LG'), ('Microsoft', 'Microsoft'), ('Nvidia', 'Nvidia'), ('Oysters', 'Oysters'), ('PlayPad', 'PlayPad'), ('Prestigio', 'Prestigio'), ('Qumo', 'Qumo'), ('Sony', 'Sony'), ('Supra', 'Supra'), ('Telefunken', 'Telefunken'), ('Texet', 'Texet'), ('Wexler', 'Wexler'), ('Xiami', 'Xiami'), ('ZTE', 'ZTE'), ('3Q', '3Q'), ('MTC', 'MTC'), ('Билайн', 'Билайн'), ('Мегафон', 'Мегафон'), ('Другая', 'Другая')], max_length=50, verbose_name='Марка планшета')),
                ('os_pad', models.CharField(blank=True, choices=[('Android', 'Android'), ('IOS', 'IOS'), ('Windows', 'Windows')], max_length=50, verbose_name='Операционная система')),
                ('screen_pad', models.CharField(blank=True, choices=[('7" и менее', '7" и менее'), ('от 7" до 7.9"', 'от 7" до 7.9"'), ('от 8" до 8.9"', 'от 8" до 8.9"'), ('от 9" до 9.9"', 'от 9" до 9.9"'), ('от 10" до 11.9"', 'от 10" до 11.9"'), ('12" и более', '12" и более')], max_length=50, verbose_name='Диагональ экрана')),
                ('internal_pad', models.CharField(blank=True, choices=[('2 Гб и менее', '2 Гб и менее'), ('4 Гб', '4 Гб'), ('8 Гб', '8 Гб'), ('16 Гб', '16 Гб'), ('32 Гб и более', '32 Гб и более')], max_length=50, verbose_name='Встроенная память')),
                ('operative', models.CharField(blank=True, choices=[('512 Mб и менее', '512 Mб и менее'), ('1 Гб', '1 Гб'), ('1.5 Гб', '1.5 Гб'), ('2 Гб', '2 Гб'), ('3 Гб', '3 Гб'), ('4 Гб', '4 Гб'), ('8 Гб и более', '8 Гб и более')], max_length=50, verbose_name='Оперативная память')),
                ('operative_pad', models.CharField(blank=True, choices=[('128 Mб', '128 Mб'), ('256 Mб', '256 Mб'), ('512 Mб', '512 Mб'), ('1 Гб', '1 Гб'), ('1.5 Гб', '1 Гб'), ('3 Гб', '2 Гб'), ('4 Гб', '4 Гб'), ('8 Гб и более', '8 Гб и более')], max_length=50, verbose_name='Оперативная память')),
                ('brand_wath', models.CharField(blank=True, choices=[('Apple', 'Apple'), ('Samsung', 'Samsung'), ('ASUS', 'ASUS'), ('Alcatel', 'Alcatel'), ('Casio', 'Casio'), ('Fitbit', 'Fitbit'), ('Huawei', 'Huawei'), ('Jawbone', 'Iconbit'), ('LG', 'LG'), ('Motorola', 'Motorola'), ('Pebble', 'Pebble'), ('Polar', 'Polar'), ('Sony', 'Sony'), ('Suunto', 'Suunto'), ('Xiami', 'Xiami'), ('Другая', 'Другая')], max_length=50, verbose_name='Бренд')),
                ('type_wath', models.CharField(blank=True, choices=[('Умные часы', 'Умные часы'), ('Фитнесс-браслеты', 'Фитнесс-браслеты'), ('Ремешки, аксессуары', 'Ремешки, аксессуары')], max_length=50, verbose_name='Тип')),
                ('android', models.BooleanField(default=False, verbose_name='Совместимость с Android')),
                ('IOS', models.BooleanField(default=False, verbose_name='Совместимость с iOS')),
                ('protection', models.BooleanField(default=False, verbose_name='Влагозащита')),
                ('pedometer', models.BooleanField(default=False, verbose_name='Шагомер')),
                ('heart_monitor', models.BooleanField(default=False, verbose_name='Пульсометр')),
                ('sleep', models.BooleanField(default=False, verbose_name='Мониторинг сна')),
                ('call', models.CharField(blank=True, choices=[('С помощью телефона/планшета', 'С помощью телефона/планшета'), ('Собственная SIM-карта', 'Собственная SIM-карта')], max_length=50, verbose_name='Телефонные звонки')),
                ('phone', models.CharField(blank=True, choices=[('Проводные телефоны', 'Проводные телефоны'), ('Радиотелефоны', 'Радиотелефоны')], max_length=50, verbose_name='Тип')),
                ('answering', models.BooleanField(default=False, verbose_name='Автоответчик')),
                ('AON', models.BooleanField(default=False, verbose_name='АОН')),
                ('radios', models.CharField(blank=True, choices=[('Аналоговые рации', 'Аналоговые рации'), ('Цифровые рации', 'Цифровые рации'), ('Спутниковые телефоны', 'Спутниковые телефоны')], max_length=50, verbose_name='Рации и спутниковые телефоны')),
                ('spare', models.CharField(blank=True, choices=[('Аккумуляторы, батареи', 'Аккумуляторы, батареи'), ('Антенны', 'Антенны'), ('Вибромоторы', 'Вибромоторы'), ('Держатели SIM-карт', 'Держатели SIM-карт'), ('Джойстики', 'Джойстики'), ('Динамики', 'Динамики'), ('Дисплеи, тачскрины', 'Дисплеи, тачскрины'), ('Задние крышки', 'Задние крышки'), ('Инструменты для ремонта', 'Инструменты для ремонта'), ('Камеры', 'Камеры'), ('Клавиатуры', 'Клавиатуры'), ('Кнопки', 'Кнопки'), ('Корпусы', 'Корпусы'), ('Крышки аккумуляторов', 'Крышки аккумуляторов'), ('Микросхемы, платы', 'Микросхемы, платы'), ('Микрофоны', 'Микрофоны'), ('Панели', 'Панели'), ('Разъемы', 'Разъемы'), ('Шлейфы', 'Шлейфы')], max_length=50, verbose_name='Запчасти')),
                ('device', models.CharField(blank=True, choices=[('Для смартфонов', 'Для смартфонов'), ('Для планшетов', 'Для планшетов'), ('Для телефонов', 'Для телефонов')], max_length=50, verbose_name='Устройство')),
                ('brand_spare', models.CharField(blank=True, choices=[('3Q', '3Q'), ('4GOOD', '4GOOD'), ('iPhone', 'iPhone'), ('Samsung', 'Samsung'), ('Xiami', 'Xiami'), ('Nokia', 'Nokia'), ('ASUS', 'ASUS'), ('Acer', 'Acer'), ('Archos', 'Archos'), ('Alcatel', 'Alcatel'), ('BQ', 'BQ'), ('BlackBerry', 'BlackBerry'), ('DELL', 'DELL'), ('Dexp', 'Dexp'), ('Digma', 'Digma'), ('DNS', 'DNS'), ('Doogee', 'Doogee'), ('Explay', 'Explay'), ('Fly', 'Fly'), ('Nania', 'Nania'), ('Ginzzu', 'Ginzzu'), ('Google', 'GoogleGoogle'), ('Highscreen', 'Highscreen'), ('Homtom', 'Homtom'), ('Huawei', 'Huawei'), ('HP', 'HP'), ('HTC', 'HTC'), ('Jinga', 'Jinga'), ('Irbis', 'Irbis'), ('LeEco', 'LeEco'), ('Lenovo', 'Lenovo'), ('LG', 'LG'), ('Meizu', 'Meizu'), ('Micromax', 'Micromax'), ('Microsoft', 'Microsoft'), ('Motorola', 'Motorola'), ('Nvidia', 'Nvidia'), ('Oysters', 'Oysters'), ('Philips', 'Philips'), ('PlayPad', 'PlayPad'), ('Prestigio', 'Prestigio'), ('Qumo', 'Qumo'), ('Siemens', 'Siemens'), ('Sony', 'Sony'), ('Supra', 'Supra'), ('Telefunken', 'Telefunken'), ('Vertex', 'Vertex'), ('Vertu', 'Vertu'), ('Texet', 'Texet'), ('Wexler', 'Wexler'), ('WileyFox', 'WileyFox'), ('ZTE', 'ZTE'), ('MTC', 'MTC'), ('Билайн', 'Билайн'), ('Мегафон', 'Мегафон'), ('ТЕЛЕ2', 'ТЕЛЕ2'), ('Другая', 'Другая')], max_length=50, verbose_name='Бренд запчасти')),
                ('battery', models.CharField(blank=True, choices=[('До 3000 мАч', 'До 3000 мАч'), ('От 3000 до 4990 мАч', 'От 3000 до 4990 мАч'), ('От 5000 до 9990 мАч', 'От 5000 до 9990 мАч'), ('От 10000 до 14990 мАч', 'От 10000 до 14990 мАч'), ('От 15000 до 19990 мАч', 'От 15000 до 19990 мАч'), ('От 20000 мАч и более', 'От 20000 мАч и более')], max_length=50, verbose_name='Емкость батареи')),
                ('charger_type', models.CharField(blank=True, choices=[('Автомобильные', 'Автомобильные'), ('Адаптеры в розетку', 'Адаптеры в розетку'), ('Беспроводные', 'Беспроводные'), ('Док-станции', 'Док-станции')], max_length=50, verbose_name='Тип зарядного устройства')),
                ('acsessuare', models.CharField(blank=True, choices=[('Проводные гарнитуры', 'Проводные гарнитуры'), ('Bluetooth-гарнитуры', 'Bluetooth-гарнитуры'), ('Моноподы, палки для селфи', 'Моноподы, палки для селфи'), ('Защитные пленки, стекла', 'Защитные пленки, стекла'), ('Наклейки, стикеры', 'Наклейки, стикеры'), ('Кабели, переходники', 'Динамики'), ('Очки виртуальной реальности', 'Очки виртуальной реальности'), ('Стилусы', 'Стилусы'), ('Объективы', 'Объективы'), ('Вспышки, селфи кольца', 'Вспышки, селфи кольца'), ('Держатели, коврики', 'Держатели, коврики'), ('Коробка от телефона', 'Коробка от телефона'), ('Клавиатуры', 'Клавиатуры'), ('Геймпады', 'Геймпады')], max_length=50, verbose_name='Тип аксессуара')),
            ],
            options={
                'verbose_name_plural': 'Телефоны и планшеты',
                'verbose_name': 'Телефоны и планшеты',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='Realty',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('type', models.CharField(blank=True, choices=[('Вторичка', 'Вторичка'), ('Новостройка', 'Новостройка')], max_length=50, verbose_name='Тип')),
                ('year', models.CharField(blank=True, max_length=100, verbose_name='Год постройки')),
                ('type_house', models.CharField(blank=True, choices=[('Панельный', 'Панельный'), ('Кирпичный', 'Кирпичный'), ('Монолит', 'Монолит'), ('Кирпично-монолитный', 'Кирпично-монолитный'), ('Блочный', 'Блочный'), ('Деревянный', 'Деревянный')], max_length=50, verbose_name='Тип дома')),
                ('to_metro', models.CharField(blank=True, choices=[('До 5 мин. пешком', 'До 5 мин. пешком'), ('5-15 мин. пешком', '5-15 мин. пешком'), ('Более 15 мин. пешком', 'Более 15 мин. пешком'), ('На транспорте', 'На транспорте'), ('Метро планируется', 'Метро планируется'), ('Нет метро', 'Нет метро')], max_length=50, verbose_name='До метро')),
                ('elevators', models.CharField(blank=True, choices=[('Нет', 'Нет'), ('Легковой', 'Легковой'), ('Грузовой', 'Грузовой'), ('3 и более лифтов', '3 и более лифтов')], max_length=50, verbose_name='Лифты')),
                ('infrastructure', models.CharField(blank=True, max_length=50, verbose_name='Инфраструктура')),
                ('rooms', models.CharField(blank=True, choices=[('1 комната', '1 комната'), ('2 комнаты', '2 комнаты'), ('3 комнаты', '3 комнаты'), ('4 комнаты', '4 комнаты'), ('5 и более комнат', '5 и более комнат'), ('Свободная планировка', 'Свободная планировка'), ('Студия', 'Студия')], max_length=50, verbose_name='Комнат в квартире')),
                ('level', models.CharField(blank=True, max_length=100, verbose_name='Этаж')),
                ('levels', models.CharField(blank=True, max_length=100, verbose_name='Этажность')),
                ('total_area', models.CharField(blank=True, max_length=100, verbose_name='Общая площадь')),
                ('comn_area', models.CharField(blank=True, max_length=100, verbose_name='Площадь комнаты')),
                ('living_area', models.CharField(blank=True, max_length=100, verbose_name='Жилая площадь')),
                ('kitchen_area', models.CharField(blank=True, max_length=100, verbose_name='Площадь кухни')),
                ('ceiling_height', models.CharField(blank=True, max_length=100, verbose_name='Высота потолка')),
                ('repairs', models.CharField(blank=True, choices=[('Требуется ремонт', 'Требуется ремонт'), ('Не требуется', 'Не требуется'), ('Косметический', 'Косметический'), ('Евроремонт', 'Евроремонт'), ('Дизайнерский', 'Дизайнерский'), ('Капитальный ремонт', 'Капитальный ремонт')], max_length=50, verbose_name='Ремонт')),
                ('bathroom_unit', models.CharField(blank=True, choices=[('Совмещенный', 'Совмещенный'), ('Раздельный', 'Раздельный'), ('2 и более', '2 и более')], max_length=50, verbose_name='Санузлы')),
                ('balcony', models.CharField(blank=True, choices=[('Нет', 'Нет'), ('Балкон', 'Балкон'), ('Лоджия', 'Лоджия'), ('Несколько балконов', 'Несколько балконов')], max_length=50, verbose_name='Балкон')),
                ('tenure', models.CharField(blank=True, choices=[('До 3-х лет', 'До 3-х лет'), ('От 3 до 5 лет', 'От 3 до 5 лет'), ('Более 5 лет', 'Более 5 лет')], max_length=50, verbose_name='Срок владения')),
                ('house', models.CharField(blank=True, choices=[('Дом', 'Дом'), ('Таунхаус', 'Таунхаус'), ('Коттедж', 'Коттедж'), ('Дача', 'Дача')], max_length=50, verbose_name='Тип дома')),
                ('material_house', models.CharField(blank=True, choices=[('Кирпичный', 'Кирпичный'), ('Монолит', 'Монолит'), ('Блочный', 'Блочный'), ('Щитовой', 'Щитовой'), ('Деревянный', 'Деревянный')], max_length=50, verbose_name='Материал дома')),
                ('house_area', models.CharField(blank=True, max_length=50, verbose_name='Площадь дома')),
                ('number_of_bedrooms', models.CharField(blank=True, max_length=50, verbose_name='Количество спален')),
                ('electricity', models.CharField(blank=True, choices=[('Нет', 'Нет'), ('Подключено', 'Подключено')], max_length=50, verbose_name='Электричество')),
                ('heating', models.CharField(blank=True, choices=[('Нет', 'Нет'), ('Автономное', 'Автономное'), ('Централизованное', 'Централизованное')], max_length=50, verbose_name='Обогрев')),
                ('gas', models.CharField(blank=True, choices=[('Нет', 'Нет'), ('По границе', 'По границе'), ('Подведен', 'Подведен')], max_length=50, verbose_name='Газ')),
                ('water_supply', models.CharField(blank=True, choices=[('Нет', 'Нет'), ('Автономное', 'Автономное'), ('Централизованное', 'Централизованное')], max_length=50, verbose_name='Водоснабжение')),
                ('garage', models.CharField(blank=True, choices=[('Нет', 'Нет'), ('Автономное', 'Автономное'), ('Централизованное', 'Централизованное')], max_length=50, verbose_name='Гараж')),
                ('plottage', models.CharField(blank=True, max_length=50, verbose_name='Площадь участка')),
                ('type_plot', models.CharField(blank=True, choices=[('Сельхоз (СНТ или ДНП)', 'Сельхоз (СНТ или ДНП)'), ('Фермерское хоз-во', 'Фермерское хоз-во'), ('Поселения (ИЖС)', 'Поселения (ИЖС)'), ('Земля промназначения', 'Земля промназначения'), ('Инвестпроект', 'Инвестпроект')], max_length=50, verbose_name='Тип участка')),
                ('refrigerator', models.BooleanField(default=False, verbose_name='Холодильник')),
                ('dishwasher', models.BooleanField(default=False, verbose_name='Посудомоечная машина')),
                ('washing_machine', models.BooleanField(default=False, verbose_name='Стиральная машина')),
                ('prepaytment', models.CharField(blank=True, choices=[('Без предоплаты', 'Без предоплаты'), ('1 месяц', '1 месяц'), ('2 месяца', '2 месяца'), ('3 месяца', '3 месяца'), ('Больше 3 месяцев', 'Больше 3 месяцев')], max_length=50, verbose_name='Предоплата')),
                ('public_utilities', models.CharField(blank=True, choices=[('Включены', 'Включены'), ('Не включены', 'Не включены')], max_length=50, verbose_name='Коммунальные услуги')),
                ('comission', models.CharField(blank=True, choices=[('Нет', 'Нет'), ('30%', '30%'), ('50%', '50%'), ('100%', '100%'), ('Другая', 'Другая')], max_length=50, verbose_name='Комиссия')),
                ('type_build', models.CharField(blank=True, choices=[('Помещение свободного назначения', 'Помещение свободного назначения'), ('Торговое помещение', 'Торговое помещение'), ('Офисное помещение', 'Офисное помещение'), ('Производство', 'Производство'), ('Склад', 'Склад'), ('Другое', 'Другое')], max_length=50, verbose_name='Тип строения')),
                ('type_transaction', models.CharField(blank=True, choices=[('Аренда', 'Аренда'), ('Продажа', 'Продажа')], max_length=50, verbose_name='Тип сделки')),
                ('type_other', models.CharField(blank=True, choices=[('Баня', 'Баня'), ('Сарай', 'Сарай'), ('Бытовка', 'Бытовка'), ('Гараж', 'Гараж'), ('Машиноместо', 'Машиноместо'), ('Другое', 'Другое')], max_length=50, verbose_name='Тип строения')),
                ('auction', models.BooleanField(default=False, verbose_name='Торг возможен')),
            ],
            options={
                'verbose_name_plural': 'Недвижимость',
                'verbose_name': 'Недвижимость',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='Repair',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('type_door', models.CharField(blank=True, choices=[('Входные', 'Входные'), ('Дверные коробки', 'Дверные коробки'), ('Дверные ручки', 'Дверные ручки'), ('Межкомнатные', 'Межкомнатные')], max_length=50, verbose_name='Двери')),
                ('type_meas', models.CharField(blank=True, choices=[('Давление', 'Давление'), ('Длина', 'Длина'), ('Параметры тока', 'Параметры тока'), ('Температура', 'Температура'), ('Углы', 'Углы')], max_length=50, verbose_name='Измерительные приборы')),
                ('type_heating', models.CharField(blank=True, choices=[('Вентиляция', 'Вентиляция'), ('Газовые баллоны', 'Газовые баллоны'), ('Камины и печи', 'Камины и печи'), ('Отопительные котлы', 'Отопительные котлы'), ('Радиаторы', 'Радиаторы'), ('Теплый пол', 'Теплый пол')], max_length=50, verbose_name='Отопление и вентиляция')),
                ('type_roof', models.CharField(blank=True, choices=[('Комплектующие', 'Комплектующие'), ('Натяжные', 'Натяжные'), ('Плиточные', 'Плиточные'), ('Реечные', 'Реечные')], max_length=50, verbose_name='Потолки')),
                ('type_hand', models.CharField(blank=True, choices=[('Валики и кисти', 'Валики и кисти'), ('Клещи и бокорезы', 'Клещи и бокорезы'), ('Ключи', 'Ключи'), ('Молотки и кувалды', 'Молотки и кувалды'), ('Напильники', 'Напильники'), ('Отвертки', 'Отвертки'), ('Пассатижи и плоскогубцы', 'Пассатижи и плоскогубцы'), ('Паяльники', 'Паяльники'), ('Пилы', 'Пилы'), ('Плиткорезы', 'Плиткорезы'), ('Тиски и струбцины', 'Тиски и струбцины')], max_length=50, verbose_name='Ручные инструменты')),
                ('type_plumbing', models.CharField(blank=True, choices=[('Ванны', 'Ванны'), ('Водонагреватели', 'Водонагреватели'), ('Душевые кабинки', 'Душевые кабинки'), ('Души', 'Души'), ('Насосы', 'Насосы'), ('Полотенцесушители', 'Полотенцесушители'), ('Раковины, умывальники', 'Раковины, умывальники'), ('Смесители', 'Смесители'), ('Сушилки для рук', 'Сушилки для рук'), ('Счетчики воды', 'Счетчики воды'), ('Трубы и фитинги', 'Трубы и фитинги'), ('Унитазы и биде', 'Унитазы и биде')], max_length=50, verbose_name='Сантехника и водоснабжение')),
                ('type_build', models.CharField(blank=True, choices=[('Гипсокартон', 'Гипсокартон'), ('Кирпичи и блоки', 'Кирпичи и блоки'), ('Лакокрасочные материалы', 'Лакокрасочные материалы'), ('Напольные покрытия', 'Напольные покрытия'), ('Обои', 'Обои'), ('Пиломатериалы', 'Пиломатериалы'), ('Плитка', 'Плитка'), ('Сайдинг и панели', 'Сайдинг и панели'), ('Сухие смеси', 'Сухие смеси')], max_length=50, verbose_name='Стройматериалы')),
                ('type_electro', models.CharField(blank=True, choices=[('Аккумуляторы', 'Аккумуляторы'), ('Выключатели и переключатели', 'Выключатели и переключатели'), ('Источники бесперебойного питания', 'Источники бесперебойного питания'), ('Предохранители', 'Предохранители'), ('Провода и кабели', 'Провода и кабели'), ('Розетки', 'Розетки'), ('Стабилизаторы напряжения', 'Стабилизаторы напряжения'), ('Трансформаторы', 'Трансформаторы'), ('Удлиннители и переходники', 'Удлиннители и переходники'), ('Щиты и шкафы', 'Щиты и шкафы'), ('Электрогенераторы', 'Электрогенераторы'), ('Электросчетчики', 'Электросчетчики')], max_length=50, verbose_name='Электрика')),
                ('type_power', models.CharField(blank=True, choices=[('Дрели и шуруповерты', 'Дрели и шуруповерты'), ('Клеевые пистолеты', 'Клеевые пистолеты'), ('Краскопульты и аэрографы', 'Краскопульты и аэрографы'), ('Лобзики', 'Лобзики'), ('Отбойники', 'Отбойники'), ('Перфораторы', 'Перфораторы'), ('Рубанки', 'Рубанки'), ('Степлеры', 'Степлеры'), ('Строительные фены', 'Строительные фены'), ('Фрезеры', 'Фрезеры'), ('Шлифовальные машины', 'Шлифовальные машины'), ('Штраборезы', 'Штраборезы'), ('Электрические ножницы', 'Электрические ножницы'), ('Электро- и бензопилы', 'Электро- и бензопилы')], max_length=50, verbose_name='Электроинструменты')),
            ],
            options={
                'verbose_name_plural': 'Ремонт и строительство',
                'verbose_name': 'Ремонт и строительство',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('repairss', models.CharField(blank=True, choices=[('Дизайн интерьера', 'Дизайн интерьера'), ('Дома и коттеджи "под ключ"', 'Дома и коттеджи "под ключ"'), ('Земляные работы, колодцы, скважины', 'Земляные работы, колодцы, скважины'), ('Кровельные работы', 'Кровельные работы'), ('Ландшафтный дизайн, обустройство участка', 'Ландшафтный дизайн, обустройство участка'), ('Натяжные потолки', 'Натяжные потолки'), ('Остекленение, ремонт окон', 'Остекленение, ремонт окон'), ('Отделка фасадов', 'Отделка фасадов'), ('Отделочные работы', 'Отделочные работы'), ('Ремонт под ключ', 'Ремонт под ключ'), ('Строительство бань, саун', 'Строительство бань, саун'), ('Строительство кирпичных, блочных домов', 'Строительство кирпичных, блочных домов'), ('Строительство фундаментов', 'Строительство фундаментов'), ('Строительство.сборка деревянных домов', 'Строительство.сборка деревянных домов'), ('Услуги сантехника', 'Услуги сантехника'), ('Услуги электрика', 'Услуги электрика'), ('Установка и ремонт дверей', 'Установка и ремонт дверей'), ('Установка и ремонт отопления, водоснабжения, канализации', 'Установка и ремонт отопления, водоснабжения, канализации'), ('Другие строительные работы', 'Другие строительные работы')], max_length=100, verbose_name='Услуги ремонта')),
                ('price_indicated', models.CharField(blank=True, choices=[('За час', 'За час'), ('За услугу', 'За услугу'), ('За метраж, объем', 'За метраж, объем')], max_length=100, verbose_name='Стоимость указана')),
                ('rendering_services', models.CharField(blank=True, choices=[('Выезд на дом', 'Выезд на дом'), ('В салоне', 'В салоне'), ('Дома у мастера', 'Дома у мастера')], max_length=100, verbose_name='Оказание услуг')),
                ('hour', models.CharField(blank=True, choices=[('Дезинфекция, дезинсекция', 'Дезинфекция, дезинсекция'), ('Изготовление ключей, вскрытие замков', 'Изготовление ключей, вскрытие замков'), ('Мастер на час', 'Мастер на час'), ('Сборка и ремонт мебели', 'Сборка и ремонт мебели'), ('Услуги няни, гувернантки', 'Услуги няни, гувернантки'), ('Услуги сиделки', 'Услуги сиделки')], max_length=100, verbose_name='Мастер на час')),
                ('traffic', models.CharField(blank=True, choices=[('Аренда авто', 'Аренда авто'), ('Аренда спецтехники', 'Аренда спецтехники'), ('Вывоз мусора', 'Вывоз мусора'), ('Грузоперевозки', 'Грузоперевозки'), ('Грузчики', 'Грузчики'), ('Пассажирские перевозки', 'Пассажирские перевозки'), ('Услуги водителя', 'Услуги водителя'), ('Услуги эвакуатора', 'Услуги эвакуатора')], max_length=100, verbose_name='Перевозки')),
                ('beautys', models.CharField(blank=True, choices=[('Аренда кабинета', 'Аренда кабинета'), ('Косметология', 'Косметология'), ('Макияж', 'Макияж'), ('Маникюр, педикюр', 'Маникюр, педикюр'), ('Массаж', 'Массаж'), ('Наращивание волос', 'Наращивание волос'), ('Наращивание волос, услуги бровиста', 'Наращивание волос, услуги бровиста'), ('СПА-услуги', 'СПА-услуги'), ('Тату, пирсинг', 'Тату, пирсинг'), ('Услуги парикмахера', 'Услуги парикмахера'), ('Эпиляция, депиляция, шугаринг', 'Эпиляция, депиляция, шугаринг')], max_length=100, verbose_name='Красота и здоровье')),
                ('computer', models.CharField(blank=True, choices=[('Веб-дизайн, бренд, арт', 'Веб-дизайн, бренд, арт'), ('Косметология', 'Косметология'), ('Компьютерная помощь, настройка ПК', 'Компьютерная помощь, настройка ПК'), ('Набор текста, ввод данных', 'Набор текста, ввод данных'), ('Подключение интернета', 'Подключение интернета'), ('Создание и продвижение сайтов', 'Создание и продвижение сайтов'), ('Установка ПО', 'Установка ПО'), ('Другие IT-услуги', 'Другие IT-услуги')], max_length=100, verbose_name='Компьютерные услуги')),
                ('autos', models.CharField(blank=True, choices=[('Автоэлектрика', 'Автоэлектрика'), ('Диагностика, подбор авто', 'Диагностика, подбор авто'), ('Кузовные работы, покраска', 'Кузовные работы, покраска'), ('Ремонт двигателя и ходовой', 'Ремонт двигателя и ходовой'), ('Ремонт мототехники', 'Ремонт мототехники'), ('Тюнинг и установка доп. оборудования', 'Тюнинг и установка доп. оборудования'), ('Химчистка, мойка', 'Химчистка, мойка'), ('Шиномонтаж, диски', 'Шиномонтаж, диски')], max_length=100, verbose_name='Автоуслуги')),
                ('equipment', models.CharField(blank=True, choices=[('Ремонт газового оборудования', 'Ремонт газового оборудования'), ('Ремонт компьютеров, ноутбуков', 'Ремонт компьютеров, ноутбуков'), ('Ремонт телефонов, смартфонов', 'Ремонт телефонов, смартфонов'), ('Ремонт телевизоров, аудио, видеотехники', 'Ремонт телевизоров, аудио, видеотехники'), ('Ремонт фототехники', 'Ремонт фототехники'), ('Ремонт часов', 'Ремонт часов'), ('Установка кондиционеров', 'Установка кондиционеров'), ('Установка систем безопасности', 'Установка систем безопасности'), ('Установка, ремонт бытовой техники', 'Установка, ремонт бытовой техники')], max_length=100, verbose_name='Ремонт техники')),
                ('training', models.CharField(blank=True, choices=[('Детское развитие', 'Детское развитие'), ('Мастер-классы, тренинги', 'Мастер-классы, тренинги'), ('Обучение вождению', 'Обучение вождению'), ('Обучение языкам', 'Обучение языкам'), ('Подготовка к экзаменам', 'Подготовка к экзаменам'), ('Профессиональное обучение', 'Профессиональное обучение'), ('Уроки музыки, театрального мастерства', 'Уроки музыки, театрального мастерства'), ('Уроки рисования, дизайна, рукоделия', 'Уроки рисования, дизайна, рукоделия'), ('Услуги логопеда, дефектолога', 'Услуги логопеда, дефектолога'), ('Услуги психолога', 'Услуги психолога'), ('Услуги репетитора', 'Услуги репетитора'), ('Услуги тренера (спорт,танцы)', 'Услуги тренера (спорт,танцы)')], max_length=100, verbose_name='Обучение')),
                ('business', models.CharField(blank=True, choices=[('Бизнесс-консультирование', 'Бизнесс-консультирование'), ('Бухгалтерия, финансы', 'Бухгалтерия, финансы'), ('Изготовление вывесок, рекламы', 'Изготовление вывесок, рекламы'), ('Маркетинг, реклама, PR', 'Маркетинг, реклама, PR'), ('Перевод', 'Перевод'), ('Полиграфия, печать, дизайн', 'Полиграфия, печать, дизайн'), ('Риэлторские услуги', 'Риэлторские услуги'), ('Составление документов, сертификации и пр.', 'Составление документов, сертификации и пр.'), ('Юридические услуги', 'Юридические услуги')], max_length=100, verbose_name='Деловые услуги')),
                ('holidays', models.CharField(blank=True, choices=[('Аренда оборудования, аттракционов', 'Аренда оборудования, аттракционов'), ('Аренда площадки', 'Аренда площадки'), ('Ведущие, музыканты, артисты', 'Ведущие, музыканты, артисты'), ('Организация мероприятий', 'Организация мероприятий'), ('Приготовление еды, кейтеринг', 'Приготовление еды, кейтеринг'), ('Прокат костюмов', 'Прокат костюмов'), ('Промоутеры, модели', 'Промоутеры, модели'), ('Туризм и отдых', 'Туризм и отдых'), ('Цветы и декор', 'Цветы и декор')], max_length=100, verbose_name='Организация праздников')),
                ('cleans', models.CharField(blank=True, choices=[('Мойка окон, балконов', 'Мойка окон, балконов'), ('Уборка', 'Уборка'), ('Услуги домработницы', 'Услуги домработницы'), ('Химчистка, стирка, глажка', 'Химчистка, стирка, глажка')], max_length=100, verbose_name='Уборка')),
                ('customization', models.CharField(blank=True, choices=[('Изготовление и ремонт одежды, обуви, аксессуаров', 'Изготовление и ремонт одежды, обуви, аксессуаров'), ('Кованые изделия на заказ', 'Кованые изделия на заказ'), ('Мебель на заказ', 'Мебель на заказ'), ('Музыка, стихи, озвучка на заказ', 'Музыка, стихи, озвучка на заказ'), ('Печати и штампы на заказ', 'Печати и штампы на заказ'), ('Рисунок, живопись, графика на заказ', 'Рисунок, живопись, графика на заказ'), ('Сувенирная продукция, полиграфия', 'Сувенирная продукция, полиграфия'), ('Другие услуги на заказ', 'Другие услуги на заказ')], max_length=100, verbose_name='Изготовление на заказ')),
                ('food', models.CharField(blank=True, choices=[('Выпечка, торты на заказ', 'Выпечка, торты на заказ'), ('Продукты питания', 'Продукты питания'), ('Услуги повара', 'Услуги повара'), ('Чай, кофе', 'Чай, кофе')], max_length=100, verbose_name='Продукты питания')),
                ('animal', models.CharField(blank=True, choices=[('Вязка', 'Вязка'), ('Дрессировка и выгул', 'Дрессировка и выгул'), ('Передержка', 'Передержка'), ('Стрижка, уход', 'Стрижка, уход'), ('Другие услуги для животных', 'Другие услуги для животных')], max_length=100, verbose_name='Уход за животными')),
            ],
            options={
                'verbose_name_plural': 'Услуги',
                'verbose_name': 'Услуги',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='SpecMoto',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('buses_trucks', models.CharField(blank=True, choices=[('Автобусы', 'Автобусы'), ('Микроавтобусы', 'Микроавтобусы'), ('Автодома', 'Автодома'), ('Авторефрижераторы', 'Авторефрижераторы'), ('Грузовики, шасси', 'Грузовики, шасси'), ('Грузовые прицепы', 'Грузовые прицепы'), ('Седельные тягачи', 'Седельные тягачи')], max_length=50, verbose_name='Автобусы и грузовики')),
                ('motortechnique', models.CharField(blank=True, choices=[('Гидроциклы', 'Гидроциклы'), ('Гребные лодки', 'Гребные лодки'), ('Катера, яхты', 'Катера, яхты'), ('Моторные лодки', 'Моторные лодки'), ('Надувные лодки', 'Надувные лодки'), ('Лодочные моторы, запчасти', 'Лодочные моторы, запчасти')], max_length=50, verbose_name='Водный транспорт')),
                ('motor', models.CharField(blank=True, choices=[('Дорожные мотоциклы', 'Дорожные мотоциклы'), ('Спортивные мотоциклы', 'Спортивные мотоциклы'), ('Кросс, эндуро', 'Кросс, эндуро'), ('Круизеры, чопперы', 'Круизеры, чопперы'), ('Кастом-байки', 'Кастом-байки'), ('Мопеды, скутеры', 'Мопеды, скутеры'), ('Квадроциклы', 'Квадроциклы'), ('Багги', 'Багги'), ('Картинг', 'Картинг'), ('Снегоходы', 'Снегоходы')], max_length=50, verbose_name='Мототехника')),
                ('special_machinery', models.CharField(blank=True, choices=[('Автовышки', 'Автовышки'), ('Автокраны', 'Автокраны'), ('Бульдозеры', 'Бульдозеры'), ('Вездеходы-амфибии', 'Вездеходы-амфибии'), ('Коммунальная техника', 'Коммунальная техника'), ('Погрузчики', 'Погрузчики'), ('Строительная техника', 'Строительная техника'), ('Техника для лесозаготовки', 'Техника для лесозаготовки'), ('Тракторы, сельхозтехника', 'Тракторы, сельхозтехника'), ('Экскаваторы', 'Экскаваторы')], max_length=50, verbose_name='Спецтехника')),
            ],
            options={
                'verbose_name_plural': 'Спецтехника и мотоциклы',
                'verbose_name': 'Спецтехника и мотоциклы',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('type_protect', models.CharField(blank=True, choices=[('Защита бедра', 'Защита бедра'), ('Защита груди', 'Защита груди'), ('Защита запястий', 'Защита запястий'), ('Защита паха', 'Защита паха'), ('Защита стопы', 'Защита стопы'), ('Защита спины', 'Защита спины'), ('Капы', 'Капы'), ('Комплекты защиты', 'Комплекты защиты'), ('Маски, очки', 'Маски, очки'), ('Наколенники', 'Наколенники'), ('Налокотники', 'Налокотники'), ('Шлемы', 'Шлемы')], max_length=50, verbose_name='Тип защиты')),
                ('type_sport', models.CharField(blank=True, choices=[('Бокс, единоборства', 'Бокс, единоборства'), ('Велоспорт', 'Велоспорт'), ('Волейбол', 'Волейбол'), ('Горные лыжи', 'Горные лыжи'), ('Пейнтбол, страйкбол', 'Пейнтбол, страйкбол'), ('Регби, гантбол', 'Регби, гантбол'), ('Ролики, самокаты, скейтборды', 'Ролики, самокаты, скейтборды'), ('Сноубординг', 'Сноубординг'), ('Футбол', 'Футбол'), ('Хоккей', 'Хоккей')], max_length=50, verbose_name='Вид спорта')),
                ('for_kind', models.BooleanField(default=False, verbose_name='Для детей')),
                ('type_bikes', models.CharField(blank=True, choices=[('Трехколесные', 'Трехколесные'), ('Городские, дорожные', 'Городские, дорожные'), ('Горные, МТВ', 'Горные, МТВ'), ('Шоссейные', 'Шоссейные'), ('BMX, трюковые', 'BMX, трюковые'), ('Фэт-байки', 'Фэт-байки'), ('Круизеры', 'Круизеры')], max_length=50, verbose_name='Велосипеды')),
                ('frame', models.CharField(blank=True, choices=[('XS (158-165 см)', 'XS (158-165 см)'), ('S (164-173 см)', 'S (164-173 см)'), ('M (168-180 см)', 'M (168-180 см)'), ('L (178-190 см)', 'L (178-190 см)'), ('XL (185-197 см)', 'XL (185-197 см)'), ('XXL (193-205 см)', 'XXL (193-205 см)'), ('11" (80-135 см)', '11" (80-135 см)')], max_length=50, verbose_name='Рама / Рост велосипедиста')),
                ('color', models.CharField(blank=True, choices=[('Белый', 'Белый'), ('Хаки', 'Хаки'), ('Серый', 'Серый'), ('Чёрный', 'Чёрный'), ('Коричневый', 'Коричневый'), ('Бордовый', 'Бордовый'), ('Бежевый', 'Бежевый'), ('Красный', 'Красный'), ('Оранжевый', 'Оранжевый'), ('Жёлтый', 'Жёлтый'), ('Зелёный', 'Зелёный'), ('Голубой', 'Голубой'), ('Синий', 'Синий'), ('Фиолетовый', 'Фиолетовый'), ('Пурпурный', 'Пурпурный'), ('Розовый', 'Розовый'), ('Разноцветный', 'Разноцветный')], max_length=45, verbose_name='Цвет')),
                ('type_rolls', models.CharField(blank=True, choices=[('Роликовые коньки', 'Роликовые коньки'), ('Скейтборды', 'Скейтборды'), ('Лонгборды', 'Лонгборды')], max_length=50, verbose_name='Ролики и скейтбординг')),
                ('type_scoo', models.CharField(blank=True, choices=[('Самокаты', 'Самокаты'), ('Гироскутеры', 'Гироскутеры'), ('Беговелы', 'Беговелы')], max_length=50, verbose_name='Самокаты и гироскутеры')),
                ('type_bili', models.CharField(blank=True, choices=[('Бильярдные кии', 'Бильярдные кии'), ('Бильярдные столы', 'Бильярдные столы'), ('Шары для бильярда', 'Шары для бильярда'), ('Шары для боулинга', 'Шары для боулинга')], max_length=50, verbose_name='Бильярд и боулинг')),
                ('type_water', models.CharField(blank=True, choices=[('Серфинг, водные лыжи', 'Серфинг, водные лыжи'), ('Бассейны', 'Бассейны'), ('Гидрокосюмы, дайвинг', 'Гидрокосюмы, дайвинг'), ('Ласты', 'Ласты'), ('Маски, трубки', 'Маски, трубки'), ('Надувные круги, матрасы', 'Надувные круги, матрасы'), ('Очки для плавания', 'Очки для плавания'), ('Спасательные жилеты', 'Спасательные жилеты'), ('Шапочки для плавания', 'Шапочки для плавания')], max_length=50, verbose_name='Водные виды спорта')),
                ('type_combat', models.CharField(blank=True, choices=[('Перчатки', 'Перчатки'), ('Лапы, макивары', 'Лапы, макивары'), ('Груши, мешки, манекены', 'Груши, мешки, манекены'), ('Кимоно, одежда', 'Кимоно, одежда'), ('Обувь для единоборств', 'Обувь для единоборств')], max_length=50, verbose_name='Единоборства')),
                ('type_winter', models.CharField(blank=True, choices=[('Беговые дорожки', 'Беговые дорожки'), ('Горные лыжи', 'Горные лыжи'), ('Сноубординг', 'Сноубординг'), ('Фигурное катание', 'Фигурное катание'), ('Хоккей', 'Хоккей'), ('Санки, снегокаты', 'Санки, снегокаты')], max_length=50, verbose_name='Зимние виды спорта')),
                ('type_ball', models.CharField(blank=True, choices=[('Баскетбол', 'Баскетбол'), ('Бейсбол', 'Бейсбол'), ('Водное поло', 'Водное поло'), ('Волейбол', 'Волейбол'), ('Гандбол', 'Гандбол'), ('Гольф', 'Гольф'), ('Регби', 'Регби'), ('Футбол', 'Футбол'), ('Хоккей на траве', 'Хоккей на траве')], max_length=50, verbose_name='Игра с мячом')),
                ('type_tou', models.CharField(blank=True, choices=[('Альпинизм, скалолазание', 'Аксессуары для оружия'), ('Газовые горелки', 'Катушки'), ('Генераторы, обогреватели', 'Крючки, грузила, поплавки'), ('Грили, барбекю, коптильни', 'Ледобуры'), ('Компасы', 'Леска, поводки'), ('Мангалы, шампуры', 'Маскировка'), ('Металлоискатели', 'Подводная охота'), ('Палатки, походная мебель', 'Приманки, воблеры'), ('Палатки для треккинга', 'Садки, подсачеки'), ('Спальные мешки, коврики', 'Удилища'), ('Термосумки', 'Удочки, спиннинги'), ('Туристическая посуда', 'Эхолоты'), ('Туристические рюкзаки', 'Эхолоты'), ('Угли, средства для росжига', 'Эхолоты'), ('Фонари, лампы', 'Эхолоты')], max_length=50, verbose_name='Туризм')),
                ('type_hunting', models.CharField(blank=True, choices=[('Аксессуары для оружия', 'Аксессуары для оружия'), ('Катушки', 'Катушки'), ('Крючки, грузила, поплавки', 'Крючки, грузила, поплавки'), ('Ледобуры', 'Ледобуры'), ('Леска, поводки', 'Леска, поводки'), ('Маскировка', 'Маскировка'), ('Подводная охота', 'Подводная охота'), ('Приманки, воблеры', 'Приманки, воблеры'), ('Садки, подсачеки', 'Садки, подсачеки'), ('Удилища', 'Удилища'), ('Удочки, спиннинги', 'Удочки, спиннинги'), ('Эхолоты', 'Эхолоты')], max_length=50, verbose_name='Охота и рыбалка')),
                ('type_ten', models.CharField(blank=True, choices=[('Большой теннис', 'Большой теннис'), ('Настольный теннис', 'Настольный теннис'), ('Бадбинтон', 'Бадбинтон'), ('Дартс', 'Дартс')], max_length=50, verbose_name='Бадбинтон, теннис, дартс')),
                ('type_fit', models.CharField(blank=True, choices=[('Батуты', 'Батуты'), ('Беговые дорожки', 'Беговые дорожки'), ('Велотренажеры', 'Велотренажеры'), ('Виброплатформы', 'Виброплатформы'), ('Гантели', 'Гантели'), ('Гимнастические мячи', 'Гимнастические мячи'), ('Гири', 'Гири'), ('Гребные тренажеры', 'Гребные тренажеры'), ('Джамперы', 'Джамперы'), ('Коврики, товары для йоги', 'Коврики, товары для йоги'), ('Обручи', 'Обручи'), ('Силовые тренажеры', 'Силовые тренажеры'), ('Скакалки', 'Скакалки'), ('Спортивные комплексы', 'Спортивные комплексы'), ('Степперы', 'Степперы'), ('Утяжелители', 'Утяжелители'), ('Штанги, блины', 'Штанги, блины'), ('Эллиптические тренажеры', 'Эллиптические тренажеры'), ('Эспандеры', 'Эспандеры')], max_length=50, verbose_name='Фитнесс')),
                ('type_nutrition', models.CharField(blank=True, choices=[('Аминокислоты', 'Аминокислоты'), ('Витамины, минералы', 'Витамины, минералы'), ('Гейнеры', 'Гейнеры'), ('Жиросжигатели', 'Жиросжигатели'), ('Креатин', 'Креатин'), ('Препараты для восстановления', 'Препараты для восстановления'), ('Протеины', 'Протеины'), ('Энергетики, изотоники', 'Энергетики, изотоники'), ('Шейкеры, бутылки', 'Шейкеры, бутылки')], max_length=50, verbose_name='Спортивное питание')),
            ],
            options={
                'verbose_name_plural': 'Спорт и отдых',
                'verbose_name': 'Спорт и отдых',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='TV',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('type_tv', models.CharField(blank=True, choices=[('OLED', 'Ноутбуки'), ('ЖК, LED', 'Нетбуки'), ('ЭЛТ, кинескопные', 'Трансформеры'), ('4K UHD', 'Ноутбуки')], max_length=50, verbose_name='Тип телевизора')),
                ('brand_tv', models.CharField(blank=True, choices=[('Aiwa', 'Aiwa'), ('Akai', 'Akai'), ('Akira', 'Akira'), ('BBK', 'BBK'), ('Daewoo', 'Daewoo'), ('Erisson', 'Erisson'), ('Funai', 'Funai'), ('Fusion', 'Fusion'), ('Goldstar', 'Goldstar'), ('Grundig', 'Grundig'), ('Hitachi', 'Hitachi'), ('Horizont', 'Horizont'), ('JVS', 'JVS'), ('LG', 'LG'), ('Loewe', 'Loewe'), ('Mystery', 'Mystery'), ('Orion', 'Orion'), ('Panasonic', 'Panasonic'), ('Philips', 'Philips'), ('Rolsen', 'Rolsen'), ('Rubin', 'Rubin'), ('Samsung', 'Samsung'), ('Sharp', 'Sharp'), ('Shivaki', 'Shivaki'), ('Sony', 'Sony'), ('Supra', 'Supra'), ('TCL', 'TCL'), ('Telefunken', 'Telefunken'), ('Thomson', 'Thomson'), ('Витязь', 'Витязь'), ('Другая', 'Другая')], max_length=50, verbose_name='Марка телевизора')),
                ('diagonal_tv', models.CharField(blank=True, choices=[('До 15"', 'До 15"'), ('От 15" до 19.9"', 'От 15" до 19.9"'), ('От 20" до 24.9"', 'От 20" до 24.9"'), ('От 25" до 29.9"', 'От 25" до 29.9"'), ('От 30" до 34.9"', 'От 30" до 34.9"'), ('От 35" до 39.9"', 'От 35" до 39.9"'), ('От 40" до 44.9"', 'От 40" до 44.9"'), ('От 45" до 49.9"', 'От 45" до 49.9"'), ('От 50" до 54.9"', 'От 50" до 54.9"'), ('От 55" до 59.9"', 'От 55" до 59.9"'), ('60" и более', '60" и более')], max_length=50, verbose_name='Диагональ экрана')),
                ('smart', models.BooleanField(default=False, verbose_name='Smart TV')),
                ('enable_3D', models.BooleanField(default=False, verbose_name='Поддержка 3D')),
                ('screen_tv', models.CharField(blank=True, choices=[('Full HD', 'Full HD'), ('HD-Ready, LED', 'HD-Ready, LED'), ('Ultra HD', 'Ultra HD')], max_length=50, verbose_name='Разрешение экрана')),
                ('curved_screen', models.BooleanField(default=False, verbose_name='Изогнутый экран')),
                ('wi_fi', models.BooleanField(default=False, verbose_name='Wi-fi')),
                ('HDR', models.BooleanField(default=False, verbose_name='Поддержка HDR')),
                ('type_projectors', models.CharField(blank=True, choices=[('Портативные', 'Портативные'), ('Стационарные', 'Стационарные')], max_length=50, verbose_name='Тип проектора')),
                ('brand_projectors', models.CharField(blank=True, choices=[('Acer', 'Acer'), ('ASUS', 'ASUS'), ('BenQ', 'BenQ'), ('Canon', 'Canon'), ('Epson', 'Epson'), ('Hitachi', 'Hitachi'), ('InFocus', 'InFocus'), ('LG', 'LG'), ('NEC', 'NEC'), ('Optoma', 'Optoma'), ('Panasonic', 'Panasonic'), ('Philips', 'Philips'), ('Sanyo', 'Sanyo'), ('Sony', 'Sony'), ('Toshiba', 'Toshiba'), ('Unic', 'Unic'), ('Viewsonic', 'Viewsonic'), ('Vivitek', 'Vivitek')], max_length=50, verbose_name='Марка проектора')),
                ('screen_res', models.CharField(blank=True, choices=[('3840x2160', '3840x2160'), ('2716x1528', '2716x1528'), ('1920x1200', '1920x1200'), ('1920x1080', '1920x1080'), ('1280x720', '1280x720'), ('1280x800', '1280x800'), ('1440x900', '1440x900'), ('1024x768', '1024x768'), ('800x600', '800x600'), ('854x480', '854x480')], max_length=50, verbose_name='Разрешение экрана')),
                ('type_sound', models.CharField(blank=True, choices=[('Комплекты акустики', 'Комплекты акустики'), ('Сабвуферы', 'Сабвуферы'), ('Звуковые панели, саундбары', 'Звуковые панели, саундбары'), ('Портативные колонки', 'Портативные колонки'), ('Центральные каналы', 'Центральные каналы'), ('Встраиваемые колонки', 'Встраиваемые колонки'), ('Напольные колонки', 'Напольные колонки'), ('Полочные, подвесные колонки', 'Полочные, подвесные колонки')], max_length=50, verbose_name='Тип')),
                ('brand_sound', models.CharField(blank=True, choices=[('Attitude', 'Attitude'), ('Audiovector', 'Audiovector'), ('BBK', 'BBK'), ('Behringer', 'Behringer'), ('Bose', 'Bose'), ('Bowers & Wilkins', 'Bowers & Wilkins'), ('Cambridg Audio', 'Cambridg Audio'), ('Canton', 'Canton'), ('Dali', 'Dali'), ('Denon', 'Denon'), ('Elac', 'Elac'), ('Focal', 'Focal'), ('Gheco', 'Gheco'), ('Harman / Kardon', 'Harman / Kardon'), ('Jamo', 'Jamo'), ('JBL', 'JBL'), ('KEF', 'KEF'), ('LG', 'LG'), ('Monitor Audio', 'Monitor Audio'), ('Mistery', 'Mistery'), ('Onkyo', 'Onkyo'), ('Philips', 'Philips'), ('Pioneer', 'Pioneer'), ('RBH', 'RBH'), ('Referense Audio', 'Referense Audio'), ('REL', 'REL'), ('Samsung', 'Samsung'), ('Sharp', 'Sharp'), ('Sonos', 'Sonos'), ('Sony', 'Sony'), ('Sven', 'Sven'), ('Tannoy', 'Tannoy'), ('Ultimate', 'Ultimate'), ('Vector', 'Vector'), ('Yamaha', 'Yamaha'), ('Радиотехника', 'Радиотехника')], max_length=50, verbose_name='Марка')),
                ('brand_theater', models.CharField(blank=True, choices=[('BBK', 'BBK'), ('Bose', 'Bose'), ('Harman / Kardon', 'Harman / Kardon'), ('LG', 'LG'), ('Mistery', 'Mistery'), ('Onkyo', 'Onkyo'), ('Philips', 'Philips'), ('Pioneer', 'Pioneer'), ('Samsung', 'Samsung'), ('Sharp', 'Sharp'), ('Sony', 'Sony'), ('Yamaha', 'Yamaha')], max_length=50, verbose_name='Марка кинотеатра')),
                ('karaoke', models.BooleanField(default=False, verbose_name='Караоке')),
                ('acoustics', models.CharField(blank=True, choices=[('2.1', '2.1'), ('4.2', '4.2'), ('5.1', '5.1'), ('7.1', '7.1'), ('9.1', '9.1')], max_length=50, verbose_name='Тип акустики')),
                ('type_dvd', models.CharField(blank=True, choices=[('Медиаплееры', 'Медиаплееры'), ('DVD плееры', 'DVD плееры'), ('Blu-ray плееры, саундбары', 'Blu-ray плееры, саундбары'), ('VHS видеомагнитофоны', 'VHS видеомагнитофоны')], max_length=50, verbose_name='Тип')),
                ('portable', models.BooleanField(default=False, verbose_name='Портативный')),
                ('brand_dvd', models.CharField(blank=True, choices=[('Akai', 'Akai'), ('Apple', 'Apple'), ('BBK', 'BBK'), ('Dune', 'Dune'), ('Google', 'Google'), ('Hitachi', 'Hitachi'), ('Iconbit', 'Iconbit'), ('JVC', 'JVC'), ('LG', 'LG'), ('Loewe', 'Loewe'), ('Marantz', 'Marantz'), ('MXQ', 'MXQ'), ('Mystery', 'Mystery'), ('Panasonic', 'Panasonic'), ('Philips', 'Philips'), ('Pioneer', 'Pioneer'), ('Rolsen', 'Rolsen'), ('Rombica', 'Rombica'), ('Rubin', 'Rubin'), ('Samsung', 'Samsung'), ('Sanyo', 'Sanyo'), ('Sharp', 'Sharp'), ('Sony', 'Sony'), ('Supra', 'Supra'), ('Sven', 'Sven'), ('Telefunken', 'Telefunken'), ('Thomson', 'Thomson'), ('Toshiba', 'Toshiba'), ('Xiami', 'Xiami'), ('Xoro', 'Xoro'), ('Yamaha', 'Yamaha')], max_length=50, verbose_name='Марка')),
                ('type_center', models.CharField(blank=True, choices=[('Музыкальные центры', 'Музыкальные центры'), ('Магнитолы, магнитофоны', 'Магнитолы, магнитофоны'), ('Радиоприемники', 'Радиоприемники'), ('CD-проигрыватели', 'CD-проигрыватели'), ('Проигрыватели виниловых дисков', 'Проигрыватели виниловых дисков')], max_length=50, verbose_name='Тип')),
                ('brand_center', models.CharField(blank=True, choices=[('BBK', 'BBK'), ('Bose', 'Bose'), ('Denon', 'Denon'), ('Huindai', 'Huindai'), ('JVC', 'JVC'), ('LG', 'LG'), ('Onkyo', 'Onkyo'), ('Panasonic', 'Panasonic'), ('Philips', 'Philips'), ('Pioneer', 'Pioneer'), ('Ritmix', 'Ritmix'), ('Samsung', 'Samsung'), ('Sony', 'Sony'), ('Supra', 'Supra'), ('Telefunken', 'Telefunken'), ('Texet', 'Texet'), ('Vitek', 'Vitek'), ('Yamaha', 'Yamaha')], max_length=50, verbose_name='Марка')),
                ('type_mp3', models.CharField(blank=True, choices=[('MP3, цифровые плееры', 'MP3, цифровые плееры'), ('Диктофоны', 'Диктофоны'), ('CD-плееры', 'CD-плееры'), ('Кассетные плееры', 'Кассетные плееры')], max_length=50, verbose_name='Тип')),
                ('brand_mp3', models.CharField(blank=True, choices=[('Aiwa', 'Aiwa'), ('Apple', 'Apple'), ('Covon', 'Covon'), ('Digma', 'Digma'), ('Explay', 'Explay'), ('Fiio', 'Fiio'), ('iRiver', 'iRiver'), ('Nexx', 'Nexx'), ('Olympus', 'Olympus'), ('Panasonic', 'Panasonic'), ('Philips', 'Philips'), ('Qumo', 'Qumo'), ('Ritmix', 'Ritmix'), ('Samsung', 'Samsung'), ('Sanyo', 'Sanyo'), ('Sony', 'Sony'), ('Texet', 'Texet'), ('xDuoo', 'xDuoo')], max_length=50, verbose_name='Марка')),
                ('sensor', models.BooleanField(default=False, verbose_name='Сенсорный экран')),
                ('radio', models.BooleanField(default=False, verbose_name='Радио')),
                ('brand_book', models.CharField(blank=True, choices=[('Amazon', 'Aiwa'), ('Digma', 'Digma'), ('Gmini', 'Gmini'), ('Onix', 'Onix'), ('PocketBook', 'PocketBook'), ('Ritmix', 'Ritmix'), ('Sony', 'Sony'), ('Texet', 'Texet'), ('Wexler', 'Wexler')], max_length=50, verbose_name='Марка электронной книги')),
                ('diagonal_book', models.CharField(blank=True, choices=[('До 4.9"', 'До 4.9"'), ('От 5" до 5.9"', 'От 5" до 5.9"'), ('От 6" до 6.9"', 'От 6" до 6.9"'), ('От 7" до 7.9"', 'От 7" до 7.9"'), ('От 8" до 8.9"', 'От 8" до 8.9"'), ('От 9" до 9.9"', 'От 9" до 9.9"'), ('10" и более', '10" и более')], max_length=50, verbose_name='Диагональ экрана')),
                ('type_display', models.CharField(blank=True, choices=[('E-lnk', 'E-lnk'), ('LCD, TFT', 'LCD, TFT')], max_length=50, verbose_name='Тип дисплея')),
                ('color_display', models.BooleanField(default=False, verbose_name='Цветной экран')),
                ('light_display', models.BooleanField(default=False, verbose_name='Подсветка')),
                ('type_satellite', models.CharField(blank=True, choices=[('Цифровое ТВ, ТВ-ресиверы', 'Цифровое ТВ, ТВ-ресиверы'), ('Спутниковое ТВ', 'Спутниковое ТВ'), ('Антенны, ТВ-ресиверы', 'Антенны, ТВ-ресиверы'), ('Кабельное ТВ', 'Кабельное ТВ')], max_length=50, verbose_name='Тип')),
                ('brand_satellite', models.CharField(blank=True, choices=[('BBK', 'BBK'), ('Cadena', 'Cadena'), ('D-color', 'D-color'), ('Galaxy Innovations', 'Galaxy Innovations'), ('General satellite', 'General satellite'), ('Harper', 'Harper'), ('OnLime', 'OnLime'), ('Openbox', 'Openbox'), ('Oriel', 'Oriel'), ('Rolsen', 'Rolsen'), ('Selenga', 'Selenga'), ('Skywey', 'Skywey'), ('Supra', 'Supra'), ('Telefunken', 'Telefunken'), ('Tesler', 'Tesler'), ('World vision', 'World vision'), ('MTC', 'MTC'), ('НТВ-плюс', 'НТВ-плюс'), ('Ростелеком', 'Ростелеком'), ('Рускарта', 'Рускарта'), ('Триколор', 'Триколор')], max_length=50, verbose_name='Марка')),
                ('type_resever', models.CharField(blank=True, choices=[('Усилители', 'Усилители'), ('Ресиверы', 'Ресиверы'), ('AV-процессоры', 'AV-процессоры')], max_length=50, verbose_name='Тип')),
                ('brand_resever', models.CharField(blank=True, choices=[('Behringer', 'Behringer'), ('Cambridg Audio', 'Cambridg Audio'), ('Denon', 'Denon'), ('Fiio', 'Fiio'), ('Harman / Cardon', 'Harman / Cardon'), ('Kenwood', 'Kenwood'), ('Marantz', 'Marantz'), ('NAD', 'NAD'), ('Onkyo', 'Onkyo'), ('Pioneer', 'Pioneer'), ('Rotel', 'Rotel'), ('Sony', 'Sony'), ('Technics', 'Technics'), ('Yamaha', 'Yamaha')], max_length=50, verbose_name='Марка')),
                ('type_head', models.CharField(blank=True, choices=[('Вкладыши', 'Вкладыши'), ('Вставные (затычки)', 'Вставные (затычки)'), ('Накладные, полноразмерные', 'Накладные, полноразмерные'), ('Игровые наушники', 'Игровые наушники')], max_length=50, verbose_name='Тип наушников')),
                ('brand_head', models.CharField(blank=True, choices=[('AKG', 'AKG'), ('Apple', 'Apple'), ('Audio-Technic', 'Audio-Technic'), ('Beats', 'Beats'), ('Bose', 'Bose'), ('Defender', 'Defender'), ('JBL', 'JBL'), ('Meizu', 'Meizu'), ('Panasonic', 'Panasonic'), ('Pkilips', 'Pkilips'), ('Pioneer', 'Pioneer'), ('Platronics', 'Platronics'), ('Razer', 'Razer'), ('Remax', 'Remax'), ('Samsung', 'Samsung'), ('Sennheiser', 'Sennheiser'), ('Sony', 'Sony'), ('SteelSeries', 'SteelSeries'), ('Sven', 'Sven'), ('Xiami', 'Xiami')], max_length=50, verbose_name='Марка наушников')),
                ('volume', models.BooleanField(default=False, verbose_name='Регулировка громкости')),
                ('woter', models.BooleanField(default=False, verbose_name='Водонепроницаемость')),
                ('noise', models.BooleanField(default=False, verbose_name='Шумоподавление')),
                ('type_micro', models.CharField(blank=True, choices=[('Для вокала', 'Для вокала'), ('Петличный', 'Петличный'), ('Студийный', 'Студийный'), ('Универсальный', 'Универсальный')], max_length=50, verbose_name='Тип микрофона')),
                ('type_acces', models.CharField(blank=True, choices=[('3D очки', '3D очки'), ('Батарейки, аккумуляторы', 'Батарейки, аккумуляторы'), ('Кабели, адаптеры', 'Кабели, адаптеры'), ('Кронштейны, подставки', 'Кронштейны, подставки'), ('Пульты дистанционного управления', 'Пульты дистанционного управления')], max_length=50, verbose_name='Тип аксессуара')),
            ],
            options={
                'verbose_name_plural': 'ТВ, аудио, видео',
                'verbose_name': 'ТВ, аудио, видео',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='Women',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('type', models.CharField(blank=True, choices=[('Брелоки и ключницы', 'Брелоки и ключницы'), ('Галстуки', 'Галстуки'), ('Для волос', 'Для волос'), ('Зеркала', 'Зеркала'), ('Зонты', 'Зонты'), ('Косметички', 'Косметички'), ('Кошельки', 'Кошельки'), ('Очки', 'Очки'), ('Перчатки и варежки', 'Перчатки и варежки'), ('Ремни и пояса', 'Ремни и пояса'), ('Рюкзаки', 'Рюкзаки'), ('Свадебные', 'Свадебные'), ('Сумки', 'Сумки'), ('Украшения', 'Украшения'), ('Часы', 'Часы'), ('Чемоданы', 'Чемоданы'), ('Шарфы и платки', 'Шарфы и платки')], max_length=50, verbose_name='Тип аксессуара')),
                ('brand', models.CharField(blank=True, choices=[('ACNE STUDIOS', 'ACNE STUDIOS'), ('ADIDAS', 'ADIDAS'), ('Alba', 'Alba'), ('Alexander McQueen', 'Alexander McQueen'), ('Alexander Wang', 'Alexander Wang'), ('Ann Demeulemeester', 'Ann Demeulemeester'), ('Armani', 'Armani'), ('Asos', 'Asos'), ('Avon', 'Avon'), ('Baldinini', 'Baldinini'), ('Balenciaga', 'Balenciaga'), ('Befree', 'Befree'), ('Braccialini', 'Braccialini'), ('Burberry', 'Burberry'), ('Calipso', 'Calipso'), ('Calvin Clein', 'Calvin Clein'), ('Casio', 'Casio'), ('Celine', 'Celine'), ('Chanel', 'Chanel'), ('Chloe', 'Chloe'), ('Chtistian Dior', 'Chtistian Dior'), ("Colin's", "Colin's"), ('Comme des Garcons', 'Comme des Garcons'), ('Cos', 'Cos'), ('Daniel Wellington', 'Daniel Wellington'), ('Dasigual', 'Dasigual'), ('Diesel', 'Diesel'), ('Diva', 'Diva'), ('Dkny', 'Dkny'), ('Dolce&Cabbana', 'Dolce&Cabbana'), ('Dries Van Noten', 'Dries Van Noten'), ('Ecco', 'Ecco'), ('Escada', 'Escada'), ('Etro', 'Etro'), ('Fendi', 'Fendi'), ('Fjallraven', 'Fjallraven'), ('Furla', 'Furla'), ('Geargio Armani', 'Geargio Armani'), ('Givenchy', 'Givenchy'), ('Gucci', 'Gucci'), ('H&M', 'H&M'), ('Helmut Lang', 'Helmut Lang'), ('Incanto', 'Incanto'), ('Insity', 'Insity'), ('Isabel Marant', 'Isabel Marant'), ('Jil Sander', 'Jil Sander'), ('Jimmy Choo', 'Jimmy Choo'), ('Jast Cavalli', 'Jast Cavalli'), ('Karen Millen', 'Karen Millen'), ('Kenzo', 'Kenzo'), ('Lacoste', 'Lacoste'), ("Livi's", "Livi's"), ('Louiss Vuitton', 'Louiss Vuitton'), ('Love Republic', 'Love Republic'), ('Maison Margiela', 'Maison Margiela'), ('Maison Kitsune', 'Maison Kitsune'), ('Mango', 'Mango'), ('Marc Jacobs', 'Marc Jacobs'), ('Marni', 'Marni'), ('Mascotte', 'Mascotte'), ('Max Mara', 'Max Mara'), ('Mexx', 'Mexx'), ('Michael Cors', 'Michael Cors'), ('Missoni', 'Missoni'), ('Miu Miu', 'Miu Miu'), ('Mohito', 'Mohito'), ('Moschino', 'Moschino'), ('Motivi', 'Motivi'), ('Neil Barrett', 'Neil Barrett'), ('New Yorker', 'New Yorker'), ('Next', 'Next'), ('Nike', 'Nike'), ("O'Stin", "O'Stin"), ('Off-White', 'Off-White'), ('Officine Creative', 'Officine Creative'), ('Oysho', 'Oysho'), ('Pinco', 'Pinco'), ('Piquadro', 'Piquadro'), ('Prada', 'Prada'), ('Pull&Bear', 'Pull&Bear'), ('RAFF SIMONS', 'RAFF SIMONS'), ('Ralph Lauren', 'Ralph Lauren'), ('Ray-Ban', 'Ray-Ban'), ('Reebok', 'Reebok'), ('Reserved', 'Reserved'), ('Rick Owens', 'Rick Owens'), ('River Island', 'River Island'), ('Roxy', 'Roxy'), ('Salvatore Ferragamo', 'Salvatore Ferragamo'), ('Sisley', 'Sisley'), ('Skagen', 'Skagen'), ('Stella Mccartney', 'Stella Mccartney'), ('Stradivarius', 'Stradivarius'), ('Sunlight', 'Sunlight'), ('Swarovski', 'Swarovski'), ('Ted Baker', 'Ted Baker'), ('Terranova', 'Terranova'), ('Tods', 'Tods'), ('Tommy Hilfiger', 'Tommy Hilfiger'), ('Topshop', 'Topshop'), ('Toska Blu', 'Toska Blu'), ('Tous', 'Tous'), ('Undercover', 'Undercover'), ('United Colors of Beneton', 'United Colors of Beneton'), ('Valentino', 'Valentino'), ('Vans', 'Vans'), ('Versace', 'Versace'), ("Victoria's Secret", "Victoria's Secret"), ('Vivienne WestWood', 'Vivienne WestWood'), ('YSL', 'YSL'), ('Yohji Yamamoto', 'Yohji Yamamoto'), ('Yves Saint Laurent', 'Yves Saint Laurent'), ('Zara', 'Zara'), ('Zarina', 'Zarina'), ('Дикая Орхидея', 'Дикая Орхидея'), ('Новая Заря', 'Новая Заря'), ('Эконика', 'Эконика')], max_length=50, verbose_name='Бренд')),
                ('color', models.CharField(blank=True, choices=[('Белый', 'Белый'), ('Хаки', 'Хаки'), ('Серый', 'Серый'), ('Чёрный', 'Чёрный'), ('Коричневый', 'Коричневый'), ('Бордовый', 'Бордовый'), ('Бежевый', 'Бежевый'), ('Красный', 'Красный'), ('Оранжевый', 'Оранжевый'), ('Жёлтый', 'Жёлтый'), ('Зелёный', 'Зелёный'), ('Голубой', 'Голубой'), ('Синий', 'Синий'), ('Фиолетовый', 'Фиолетовый'), ('Пурпурный', 'Пурпурный'), ('Розовый', 'Розовый'), ('Разноцветный', 'Разноцветный')], max_length=45, verbose_name='Цвет')),
                ('condition', models.CharField(blank=True, choices=[('Б/У', 'Б/У'), ('Новое', 'Новое')], max_length=50, verbose_name='Состояние')),
                ('size', models.CharField(blank=True, choices=[('40-42 (XS)', '40-42 (XS)'), ('42-44 (S)', '42-44 (S)'), ('44-46 (M)', '44-46 (M)'), ('46-48 (L)', '46-48 (L)'), ('48-50 (XL)', '48-50 (XL)'), ('50-52 (XXL)', '50-52 (XXL)'), ('52-54 (XXXL) и больше', '52-54 (XXXL) и больше')], max_length=50, verbose_name='Размер')),
                ('type_mom', models.CharField(blank=True, choices=[('Блузы и рубашки', 'Блузы и рубашки'), ('Верхняя одежда', 'Верхняя одежда'), ('Домашняя одежда', 'Домашняя одежда'), ('Комбинезоны', 'Комбинезоны'), ('Купальники', 'Купальники'), ('Нижнее белье', 'Нижнее белье'), ('Пиджаки и костюмы', 'Пиджаки и костюмы'), ('Платья и юбки', 'Платья и юбки'), ('Свитера и толстовки', 'Свитера и толстовки'), ('Футболки и топы', 'Футболки и топы'), ('Штаны и шорты', 'Штаны и шорты')], max_length=50, verbose_name='Тип одежды')),
                ('season', models.CharField(blank=True, choices=[('Демисезон', 'Демисезон'), ('Зима', 'Зима'), ('Лето', 'Лето')], max_length=50, verbose_name='Сезон')),
                ('outerwear', models.CharField(blank=True, choices=[('Бомберы', 'Бомберы'), ('Ветровки', 'Ветровки'), ('Джинсовые куртки', 'Джинсовые куртки'), ('Дождевики', 'Дождевики'), ('Дубленки', 'Дубленки'), ('Жилеты', 'Жилеты'), ('Кожаные куртки', 'Кожаные куртки'), ('Куртки', 'Куртки'), ('Накидки и пончо', 'Накидки и пончо'), ('Пальто', 'Пальто'), ('Парки', 'Парки'), ('Плащи и тренчи', 'Плащи и тренчи'), ('Полупальто', 'Полупальто'), ('Пуховики', 'Пуховики'), ('Шубы', 'Шубы')], max_length=50, verbose_name='Верхняя одежда')),
                ('hat', models.CharField(blank=True, choices=[('Бейсболки и кепки', 'Бейсболки и кепки'), ('Береты', 'Береты'), ('Платки и косынки', 'Платки и косынки'), ('Повязки', 'Повязки'), ('Шапки', 'Шапки'), ('Шляпы', 'Шляпы')], max_length=50, verbose_name='Головные уборы')),
                ('home', models.CharField(blank=True, choices=[('Ночные сорочки', 'Ночные сорочки'), ('Пеньюары', 'Пеньюары'), ('Пижамы', 'Пижамы'), ('Халаты', 'Халаты')], max_length=50, verbose_name='Домашняя одежда')),
                ('coverall', models.CharField(blank=True, choices=[('Полукомбинезоны', 'Полукомбинезоны'), ('С брюками', 'С брюками'), ('С шортами', 'С шортами')], max_length=50, verbose_name='Комбинезоны')),
                ('swimsuits', models.CharField(blank=True, choices=[('Бикини', 'Бикини'), ('Лифы', 'Лифы'), ('Плавки', 'Плавки'), ('Раздельные купальники', 'Раздельные купальники'), ('Слитные купальники', 'Слитные купальники')], max_length=50, verbose_name='Купальники')),
                ('underwear', models.CharField(blank=True, choices=[('Боди', 'Боди'), ('Бюстгалтеры', 'Бюстгалтеры'), ('Гольфы и гетры', 'Гольфы и гетры'), ('Колготки', 'Колготки'), ('Корректирующее', 'Корректирующее'), ('Корсеты', 'Корсеты'), ('Носки', 'Носки'), ('Пояса для чулок', 'Пояса для чулок'), ('Сорочки', 'Сорочки'), ('Термобелье', 'Термобелье'), ('Трусы', 'Трусы'), ('Чулки', 'Чулки')], max_length=50, verbose_name='Нижнее белье')),
                ('shoes', models.CharField(blank=True, choices=[('Балетки', 'Балетки'), ('Босоножки', 'Босоножки'), ('Ботильоны', 'Ботильоны'), ('Ботинки', 'Ботинки'), ('Валенки и галоши', 'Валенки и галоши'), ('Домашняя обувь', 'Домашняя обувь'), ('Дутики и луноходы', 'Дутики и луноходы'), ('Кеды', 'Кеды'), ('Кроссовки', 'Кроссовки'), ('Мокасины', 'Мокасины'), ('Полусапожки', 'Полусапожки'), ('Сандалии', 'Сандалии'), ('Сапоги', 'Сапоги'), ('Слипоны', 'Слипоны'), ('Тапочки', 'Тапочки'), ('Туфли', 'Туфли'), ('Угги и унты', 'Угги и унты'), ('Шлепанцы', 'Шлепанцы')], max_length=50, verbose_name='Обувь')),
                ('shoe_size', models.CharField(blank=True, choices=[('33', '33'), ('34', '34'), ('35', '35'), ('36', '36'), ('37', '37'), ('38', '38'), ('39', '39'), ('40', '40'), ('41', '41'), ('42', '42'), ('43', '43'), ('44', '44'), ('45', '45'), ('46', '46')], max_length=50, verbose_name='Размер обуви')),
                ('suits', models.CharField(blank=True, choices=[('Жилетки', 'Жилетки'), ('Костюмы с брюками', 'Костюмы с брюками'), ('Костюмы с юбками', 'Костюмы с юбками'), ('Пиджаки', 'Пиджаки')], max_length=50, verbose_name='Пиджаки и костюмы')),
                ('dresses', models.CharField(blank=True, choices=[('Вечерние платья', 'Вечерние платья'), ('Вязаные платья', 'Вязаные платья'), ('Джинсовые платья', 'Джинсовые платья'), ('Офисные платья', 'Офисные платья'), ('Платья мини', 'Платья мини'), ('Платья-рубашки', 'Платья-рубашки'), ('Повседневные платья', 'Повседневные платья'), ('Сарафаны', 'Сарафаны'), ('Свадебные платья', 'Свадебные платья'), ('Туники', 'Туники'), ('Юбки', 'Юбки')], max_length=50, verbose_name='Платья и юбки')),
                ('length', models.CharField(blank=True, choices=[('Макси', 'Макси'), ('Миди', 'Миди'), ('Мини', 'Мини')], max_length=50, verbose_name='Длина')),
                ('sweaters', models.CharField(blank=True, choices=[('Водолазки', 'Водолазки'), ('Джемперы', 'Джемперы'), ('Кардиганы', 'Кардиганы'), ('Кофты', 'Кофты'), ('Олимпайки', 'Олимпайки'), ('Пуловеры', 'Пуловеры'), ('Свитеры', 'Свитеры'), ('Толстовки и худи', 'Толстовки и худи')], max_length=50, verbose_name='Свитера и толстовки')),
                ('sportwear', models.CharField(blank=True, choices=[('Верхняя одежда', 'Верхняя одежда'), ('Комбинезоны', 'Комбинезоны'), ('Платья и юбки', 'Платья и юбки'), ('Спортивные костюмы', 'Спортивные костюмы'), ('Футболки и топы', 'Футболки и топы'), ('Штаны и шорты', 'Штаны и шорты')], max_length=50, verbose_name='Спортивная одежда')),
                ('tops', models.CharField(blank=True, choices=[('Лонгсливы', 'Лонгсливы'), ('Майки', 'Майки'), ('Поло', 'Поло'), ('Топы', 'Топы'), ('Футболки', 'Футболки')], max_length=50, verbose_name='Футболки и топы')),
                ('pants', models.CharField(blank=True, choices=[('Бриджы', 'Бриджы'), ('Брюки', 'Брюки'), ('Джинсы', 'Джинсы'), ('Капри', 'Капри'), ('Леггинсы', 'Леггинсы'), ('Шорты', 'Шорты')], max_length=50, verbose_name='Штаны и шорты')),
                ('pant_size', models.CharField(blank=True, choices=[('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30'), ('31', '31'), ('32', '32'), ('33', '33'), ('34 и больше', '34 и больше')], max_length=50, verbose_name='Размер штанов')),
            ],
            options={
                'verbose_name_plural': 'Женский гардероб',
                'verbose_name': 'Женский гардероб',
            },
            bases=('ad_posts.ad',),
        ),
        migrations.CreateModel(
            name='ZapAuto',
            fields=[
                ('ad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad_posts.Ad')),
                ('spare', models.CharField(blank=True, choices=[('Автосвет, оптика', 'Автосвет, оптика'), ('Аккумуляторы', 'Аккумуляторы'), ('Безопасность', 'Безопасность'), ('Двигатель, система зажигания', 'Двигатель, система зажигания'), ('Впускная система', 'Впускная система'), ('Выхлопная система', 'Выхлопная система'), ('Топливная система', 'Топливная система'), ('Тормозная система', 'Тормозная система'), ('Кузовные запчасти', 'Кузовные запчасти'), ('Авто в разборе', 'Авто в разборе'), ('Рулевое управление', 'Рулевое управление'), ('Салон, интерьер', 'Салон, интерьер'), ('Подвеска', 'Подвеска'), ('Расходники', 'Расходники'), ('Системы охлаждения, обогрева', 'Системы охлаждения, обогрева'), ('Стекла', 'Стекла'), ('Трансмиссия, привод', 'Трансмиссия, привод'), ('Электрооборудование', 'Электрооборудование')], max_length=50, verbose_name='Тип')),
                ('type_of_headlight', models.CharField(blank=True, choices=[('Основные фары', 'Основные фары'), ('Задние фары', 'Задние фары'), ('Противотуманные фары', 'Противотуманные фары'), ('Лампочки', 'Лампочки')], max_length=50, verbose_name='Тип фары')),
                ('mode_of_transport', models.CharField(blank=True, choices=[('Для автомобилей', 'Для автомобилей'), ('Для мототехники', 'Для мототехники'), ('Для спецтехники', 'Для спецтехники'), ('Для грузовиков и автобусов', 'Для грузовиков и автобусов')], max_length=50, verbose_name='Вид транспорта')),
                ('brand', models.CharField(blank=True, choices=[('Acura', 'Acura'), ('AC', 'AC'), ('Alfa Romeo', 'Alfa Romeo'), ('Alpina', 'Alpina'), ('Aro', 'Aro'), ('Asia', 'Asia'), ('Aston Martin', 'Aston Martin'), ('Audi', 'Audi'), ('BAW', 'BAW'), ('Bentley', 'Bentley'), ('BMW', 'BMW'), ('Brilliance', 'Brilliance'), ('Bugatti', 'Bugatti'), ('Buick', 'Buick'), ('BYD', 'BYD'), ('Cadillac', 'Cadillac'), ('Changan', 'Changan'), ('ChangFeng', 'ChangFeng'), ('Chery', 'Chery'), ('Chevrolet', 'Chevrolet'), ('Chrysler', 'Chrysler'), ('Citroen', 'Citroen'), ('Dacia', 'Dacia'), ('Dadi', 'Dadi'), ('Daewoo', 'Daewoo'), ('Daihatsu', 'Daihatsu'), ('Daimler', 'Daimler'), ('Datsun', 'Datsun'), ('Derways', 'Derways'), ('Dodge', 'Dodge'), ('Dongfeng', 'Dongfeng'), ('Doninvest', 'Doninvest'), ('DS', 'DS'), ('DW Hover', 'DW Hover'), ('Eagle', 'Eagle'), ('FAW', 'FAW'), ('Ferrari', 'Ferrari'), ('FIAT', 'FIAT'), ('Ford', 'Ford'), ('Foton', 'Foton'), ('GAC', 'GAC'), ('Geely', 'Geely'), ('Genesis', 'Genesis'), ('Geo', 'Geo'), ('GMC', 'GMC'), ('Great Wall', 'Great Wall'), ('Hafei', 'Hafei'), ('Haima', 'Haima'), ('Haval', 'Haval'), ('Hawtai', 'Hawtai'), ('Honda', 'Honda'), ('HuangHai', 'HuangHai'), ('Hummer', 'Hummer'), ('Hyindai', 'Hyindai'), ('Infiniti', 'Infiniti'), ('Iran Khondro', 'Iran Khondro'), ('Isuzu', 'Isuzu'), ('Iveco', 'Iveco'), ('JAC', 'JAC'), ('Jaguar', 'Jaguar'), ('Jeep', 'Jeep'), ('Jinbei', 'Jinbei'), ('JMC', 'JMC'), ('KIA', 'KIA'), ('Lambordhini', 'Lambordhini'), ('Lancia', 'Lancia'), ('Land Rover', 'Land Rover'), ('Landwind', 'Landwind'), ('LDV', 'LDV'), ('Lexus', 'Lexus'), ('LIFAN', 'LIFAN'), ('Lincoln', 'Lincoln'), ('Lotus', 'Lotus'), ('Luxgen', 'Luxgen'), ('Mahindra', 'Mahindra'), ('Maserati', 'Maserati'), ('Maybach', 'Maybach'), ('Mazda', 'Mazda'), ('Mercedes-Benz', 'Mercedes-Benz'), ('Mercury', 'Mercury'), ('Metrocab', 'Metrocab'), ('MG', 'MG'), ('MINI', 'MINI'), ('Mitsubishi', 'Mitsubishi'), ('Mitsuoka', 'Mitsuoka'), ('Morgan', 'Morgan'), ('Morris', 'Morris'), ('Nissan', 'Nissan'), ('Oldsmobile', 'Oldsmobile'), ('Opel', 'Opel'), ('Peugeot', 'Peugeot'), ('Plymouth', 'Plymouth'), ('Pontiac', 'Pontiac'), ('Porsche', 'Porsche'), ('Proton', 'Proton'), ('Ravon', 'Ravon'), ('Renault', 'Renault'), ('Rolls-Royce', 'Rolls-Royce'), ('Ronart', 'Ronart'), ('Rover', 'Rover'), ('Saab', 'Saab'), ('Saturn', 'Saturn'), ('Scion', 'Scion'), ('SEAT', 'SEAT'), ('Shuanghuan', 'Shuanghuan'), ('Scoda', 'Scoda'), ('SMA', 'SMA'), ('Smart', 'Smart'), ('SsangYong', 'SsangYong'), ('Subaru', 'Subaru'), ('Suzuki', 'Suzuki'), ('Talbot', 'Talbot'), ('Tata', 'Tata'), ('Tesla', 'Tesla'), ('Tianma', 'Tianma'), ('Tianye', 'Tianye'), ('Toyota', 'Toyota'), ('Trabant', 'Trabant'), ('Volkswagen', 'Volkswagen'), ('Volvo', 'Volvo'), ('Vortex', 'Vortex'), ('Watrburg', 'Watrburg'), ('Xin Kai', 'Xin Kai'), ('ZOTYE', 'ZOTYE'), ('ZX', 'ZX'), ('ВАЗ (LADA)', 'ВАЗ (LADA)'), ('ВИС', 'ВИС'), ('ГАЗ', 'ГАЗ'), ('ЗАЗ', 'ЗАЗ'), ('ЗИЛ', 'ЗИЛ'), ('ИЖ', 'ИЖ'), ('ЛуАЗ', 'ЛуАЗ'), ('Москвич', 'Москвич'), ('РАФ', 'РАФ'), ('СМЗ', 'СМЗ'), ('ТагАЗ', 'ТагАЗ'), ('УАЗ', 'УАЗ')], max_length=50, verbose_name='Марка')),
                ('condition', models.CharField(blank=True, choices=[('Б/У', 'Б/У'), ('Новое', 'Новое')], max_length=50, verbose_name='Состояние')),
                ('art', models.CharField(blank=True, max_length=100, verbose_name='Артикул')),
                ('tires_wheels', models.CharField(blank=True, choices=[('Шины', 'Шины'), ('Диски', 'Диски'), ('Колеса в сборе', 'Колеса в сборе'), ('Колпаки', 'Колпаки'), ('Комплектующие', 'Комплектующие')], max_length=50, verbose_name='Тип')),
                ('tires', models.CharField(blank=True, choices=[('7"', '7"'), ('8"', '8"'), ('9"', '9"'), ('10"', '10"'), ('11"', '11"'), ('12"', '12"'), ('13"', '13"'), ('14"', '14"'), ('15"', '15"'), ('16"', '16"'), ('17"', '17"'), ('18"', '18"'), ('19"', '19"'), ('20"', '20"'), ('21"', '21"'), ('22"', '22"'), ('23"', '23"'), ('24"', '24"'), ('25"', '25"'), ('26"', '26"'), ('27"', '27"'), ('28"', '28"'), ('29"', '29"'), ('30"', '30"')], max_length=50, verbose_name='Диаметр')),
                ('oils_car_chemicals', models.CharField(blank=True, choices=[('Моторные масла', 'Моторные масла'), ('Трансмиссионные масла', 'Трансмиссионные масла'), ('Гидравлические масла', 'Гидравлические масла'), ('Автошампуни', 'Автошампуни'), ('Автоэмали, краски, лаки', 'Автоэмали, краски, лаки'), ('Герметики, клеи', 'Герметики, клеи'), ('Антифризы, тосолы', 'Антифризы, тосолы'), ('Антидождь', 'Антидождь'), ('Жидкости гидравлические', 'Жидкости гидравлические'), ('Жидкости омывателя стекла', 'Жидкости омывателя стекла'), ('Жидкости тормозные', 'Жидкости тормозные'), ('Полироли', 'Полироли'), ('Присадки, промыватели', 'Присадки, промыватели'), ('Смазки', 'Смазки'), ('Средства для очистки', 'Средства для очистки')], max_length=50, verbose_name='Масла и автохимия')),
                ('electronics_gps', models.CharField(blank=True, choices=[('GPS-навигаторы', 'GPS-навигаторы'), ('GPS-трекеры', 'GPS-трекеры'), ('Видеорегистраторы', 'Видеорегистраторы'), ('Камеры звднего вида', 'Камеры звднего вида'), ('Парктроники', 'Парктроники'), ('Радар-детекторы', 'Радар-детекторы')], max_length=50, verbose_name='Автоэлектроника и gps')),
                ('accessories_tools', models.CharField(blank=True, choices=[('Аксессуары интерьера', 'Аксессуары интерьера'), ('Аксессуары экстерьера', 'Аксессуары экстерьера'), ('Брелоки, атрибутика', 'Брелоки, атрибутика'), ('Держатели, подставки, атрибутика', 'Держатели, подставки, атрибутика'), ('Дефлекторы, ветровики', 'Дефлекторы, ветровики'), ('Диагностическое оборудование', 'Диагностическое оборудование'), ('Домкраты', 'Домкраты'), ('Канистры', 'Канистры'), ('Коврики', 'Коврики'), ('Наборы автомобилиста', 'Наборы автомобилиста'), ('Наборы инструментов', 'Наборы инструментов'), ('Насосы', 'Насосы'), ('Компрессоры', 'Компрессоры'), ('Наклейки, накладки', 'Наклейки, накладки'), ('Оплетки, чехлы на руль', 'Оплетки, чехлы на руль'), ('Пленки для авто', 'Пленки для авто'), ('Подсветка и переключатели', 'Подсветка и переключатели'), ('Пуско-зарядные устройства', 'Пуско-зарядные устройства'), ('Пылесосы', 'Пылесосы'), ('Ручки КПП', 'Ручки КПП'), ('Сумки, органайзеры', 'Сумки, органайзеры'), ('Тенты для автомобиля', 'Тенты для автомобиля'), ('Тросы, лебедки', 'Тросы, лебедки'), ('Уход за авто', 'Уход за авто'), ('Чехлы для сидений', 'Чехлы для сидений'), ('Шторки, козырьки', 'Шторки, козырьки'), ('Щетки стеклоочистителя', 'Щетки стеклоочистителя')], max_length=50, verbose_name='Аксессуары и инструменты')),
                ('audio_video', models.CharField(blank=True, choices=[('CD, DVD-чейнжеры', 'CD, DVD-чейнжеры'), ('FM-трансмиттеры', 'FM-трансмиттеры'), ('Автоакустика, колонки', 'Автоакустика, колонки'), ('Автомагнитолы', 'Автомагнитолы'), ('Автомобильные рации', 'Автомобильные рации'), ('Аккустические полки, короба', 'Аккустические полки, короба'), ('Кабели, переходники', 'Кабели, переходники'), ('Усилители, сабвуферы', 'Усилители, сабвуферы'), ('Телевизоры, TV-тюнеры', 'Телевизоры, TV-тюнеры'), ('Переходные рамки', 'Переходные рамки')], max_length=50, verbose_name='Аудио и видео')),
                ('anti_theft', models.CharField(blank=True, choices=[('Автосигнализация', 'Автосигнализация'), ('Иммобилайзеры', 'Иммобилайзеры'), ('Механические блокираторы', 'Механические блокираторы'), ('Спутниковые системы', 'Спутниковые системы')], max_length=50, verbose_name='Противоугонные системы')),
                ('roof_trailers', models.CharField(blank=True, choices=[('Багажники, рейлинги', 'Багажники, рейлинги'), ('Боксы на крышу', 'Боксы на крышу'), ('Крепления для багажа', 'Крепления для багажа'), ('Прицепы', 'Прицепы'), ('Фаркопы', 'Фаркопы')], max_length=50, verbose_name='Багажные системы и прицепы')),
                ('moto_gear', models.CharField(blank=True, choices=[('Шлемы', 'Шлемы'), ('Очки, маски', 'Очки, маски'), ('Мотозащита', 'Мотозащита'), ('Куртки', 'Куртки'), ('Обувь', 'Обувь'), ('Перчатки', 'Перчатки'), ('Штаны и джинсы', 'Штаны и джинсы'), ('Комбинезон', 'Комбинезон'), ('Аксессуары', 'Аксессуары')], max_length=50, verbose_name='Мотоэкипировка')),
                ('gender', models.CharField(blank=True, choices=[('Женский', 'Женский'), ('Мужской', 'Мужской')], max_length=50, verbose_name='Пол')),
                ('size', models.CharField(blank=True, choices=[('XXS', 'XXS'), ('XS', 'XS'), ('S', 'S'), ('M', 'M'), ('L', 'L'), ('XL', 'XL'), ('XXL', 'XXL')], max_length=50, verbose_name='Размер')),
                ('jacket_size', models.CharField(blank=True, choices=[('XS (48)', 'XS (48)'), ('S (50)', 'S (50)'), ('M (52)', 'M (52)'), ('L (54)', 'L (54)'), ('XL (56)', 'XL (56)'), ('2XL (58)', '2XL (58)'), ('3XL (60)', '3XL (60)'), ('4XL (62)', '4XL (62)'), ('5XL (64)', '5XL (64)'), ('6XL (66)', '6XL (66)')], max_length=50, verbose_name='Размер куртки')),
                ('shoe_size', models.CharField(blank=True, choices=[('35', '35'), ('36', '36'), ('37', '37'), ('38', '38'), ('39', '39'), ('40', '40'), ('41', '41'), ('42', '42'), ('43', '43'), ('44', '44'), ('45', '45'), ('46', '46'), ('47', '47'), ('48', '48')], max_length=50, verbose_name='Размер обуви')),
                ('glove_size', models.CharField(blank=True, choices=[('6 (XXS)', '6 (XXS)'), ('7 (XS)', '7 (XS)'), ('8 (S)', '8 (S)'), ('9 (M)', '9 (M)'), ('10 (L)', '10 (L)'), ('11 (Xl)', '11 (Xl)'), ('12 (2XL)', '12 (2XL)'), ('13 (3XL)', '13 (3XL)')], max_length=50, verbose_name='Размер перчатки')),
                ('pant_size', models.CharField(blank=True, choices=[('XXS (36)', 'XXS (36)'), ('XS (38)', 'XS (38)'), ('S (40)', 'S (40)'), ('M (42)', 'M (42)'), ('L (44)', 'L (44)'), ('XL (46)', 'XL (46)'), ('2XL (48)', '2XL (48)'), ('3XL (50)', '3XL (50)'), ('4XL (52)', '4XL (52)'), ('5XL (54)', '5XL (54)'), ('6XL (56)', '6XL (56)')], max_length=50, verbose_name='Размер штанов')),
                ('jumpsuit_size', models.CharField(blank=True, choices=[('36', '36'), ('38', '38'), ('40', '40'), ('42', '42'), ('44', '44'), ('46', '46'), ('48', '48'), ('50', '50'), ('52', '52'), ('54', '54'), ('56', '56'), ('58', '58'), ('60', '60')], max_length=50, verbose_name='Размер комбинезона')),
            ],
            options={
                'verbose_name_plural': 'Запчасти и автотовары',
                'verbose_name': 'Запчасти и автотовары',
            },
            bases=('ad_posts.ad',),
        ),
    ]
