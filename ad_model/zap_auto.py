from django.db import models
from ad_posts.models import Ad


class ZapAuto(Ad):
    SPARE=(
        ('Автосвет, оптика','Автосвет, оптика'),
        ('Аккумуляторы','Аккумуляторы'),
        ('Безопасность','Безопасность'),
        ('Двигатель, система зажигания','Двигатель, система зажигания'),
        ('Впускная система','Впускная система'),
        ('Выхлопная система','Выхлопная система'),
        ('Топливная система','Топливная система'),
        ('Тормозная система','Тормозная система'),
        ('Кузовные запчасти','Кузовные запчасти'),
        ('Авто в разборе','Авто в разборе'),
        ('Рулевое управление','Рулевое управление'),
        ('Салон, интерьер','Салон, интерьер'),
        ('Подвеска','Подвеска'),
        ('Расходники','Расходники'),
        ('Системы охлаждения, обогрева','Системы охлаждения, обогрева'),
        ('Стекла','Стекла'),
        ('Трансмиссия, привод','Трансмиссия, привод'),
        ('Электрооборудование','Электрооборудование'),
    )
    MODE_TRANSPORT=(
        ('Для автомобилей','Для автомобилей'),
        ('Для мототехники','Для мототехники'),
        ('Для спецтехники','Для спецтехники'),
        ('Для грузовиков и автобусов','Для грузовиков и автобусов'),
    )
    BRANDS=(
        ('Acura','Acura'),
        ('AC','AC'),
        ('Alfa Romeo','Alfa Romeo'),
        ('Alpina','Alpina'),
        ('Aro','Aro'),
        ('Asia','Asia'),
        ('Aston Martin','Aston Martin'),
        ('Audi','Audi'),
        ('BAW','BAW'),
        ('Bentley','Bentley'),
        ('BMW','BMW'),
        ('Brilliance','Brilliance'),
        ('Bugatti','Bugatti'),
        ('Buick','Buick'),
        ('BYD','BYD'),
        ('Cadillac','Cadillac'),
        ('Changan','Changan'),
        ('ChangFeng','ChangFeng'),
        ('Chery','Chery'),
        ('Chevrolet','Chevrolet'),
        ('Chrysler','Chrysler'),
        ('Citroen','Citroen'),
        ('Dacia','Dacia'),
        ('Dadi','Dadi'),
        ('Daewoo','Daewoo'),
        ('Daihatsu','Daihatsu'),
        ('Daimler','Daimler'),
        ('Datsun','Datsun'),
        ('Derways','Derways'),
        ('Dodge','Dodge'),
        ('Dongfeng','Dongfeng'),
        ('Doninvest','Doninvest'),
        ('DS','DS'),
        ('DW Hover','DW Hover'),
        ('Eagle','Eagle'),
        ('FAW','FAW'),
        ('Ferrari','Ferrari'),
        ('FIAT','FIAT'),
        ('Ford','Ford'),
        ('Foton','Foton'),
        ('GAC','GAC'),
        ('Geely','Geely'),
        ('Genesis','Genesis'),
        ('Geo','Geo'),
        ('GMC','GMC'),
        ('Great Wall','Great Wall'),
        ('Hafei','Hafei'),
        ('Haima','Haima'),
        ('Haval','Haval'),
        ('Hawtai','Hawtai'),
        ('Honda','Honda'),
        ('HuangHai','HuangHai'),
        ('Hummer','Hummer'),
        ('Hyindai','Hyindai'),
        ('Infiniti','Infiniti'),
        ('Iran Khondro','Iran Khondro'),
        ('Isuzu','Isuzu'),
        ('Iveco','Iveco'),
        ('JAC','JAC'),
        ('Jaguar','Jaguar'),
        ('Jeep','Jeep'),
        ('Jinbei','Jinbei'),
        ('JMC','JMC'),
        ('KIA','KIA'),
        ('Lambordhini','Lambordhini'),
        ('Lancia','Lancia'),
        ('Land Rover','Land Rover'),
        ('Landwind','Landwind'),
        ('LDV','LDV'),
        ('Lexus','Lexus'),
        ('LIFAN','LIFAN'),
        ('Lincoln','Lincoln'),
        ('Lotus','Lotus'),
        ('Luxgen','Luxgen'),
        ('Mahindra','Mahindra'),
        ('Maserati','Maserati'),
        ('Maybach','Maybach'),
        ('Mazda','Mazda'),
        ('Mercedes-Benz','Mercedes-Benz'),
        ('Mercury','Mercury'),
        ('Metrocab','Metrocab'),
        ('MG','MG'),
        ('MINI','MINI'),
        ('Mitsubishi','Mitsubishi'),
        ('Mitsuoka','Mitsuoka'),
        ('Morgan','Morgan'),
        ('Morris','Morris'),
        ('Nissan','Nissan'),
        ('Oldsmobile','Oldsmobile'),
        ('Opel','Opel'),
        ('Peugeot','Peugeot'),
        ('Plymouth','Plymouth'),
        ('Pontiac','Pontiac'),
        ('Porsche','Porsche'),
        ('Proton','Proton'),
        ('Ravon','Ravon'),
        ('Renault','Renault'),
        ('Rolls-Royce','Rolls-Royce'),
        ('Ronart','Ronart'),
        ('Rover','Rover'),
        ('Saab','Saab'),
        ('Saturn','Saturn'),
        ('Scion','Scion'),
        ('SEAT','SEAT'),
        ('Shuanghuan','Shuanghuan'),
        ('Scoda','Scoda'),
        ('SMA','SMA'),
        ('Smart','Smart'),
        ('SsangYong','SsangYong'),
        ('Subaru','Subaru'),
        ('Suzuki','Suzuki'),
        ('Talbot','Talbot'),
        ('Tata','Tata'),
        ('Tesla','Tesla'),
        ('Tianma','Tianma'),
        ('Tianye','Tianye'),
        ('Toyota','Toyota'),
        ('Trabant','Trabant'),
        ('Volkswagen','Volkswagen'),
        ('Volvo','Volvo'),
        ('Vortex','Vortex'),
        ('Watrburg','Watrburg'),
        ('Xin Kai','Xin Kai'),
        ('ZOTYE','ZOTYE'),
        ('ZX','ZX'),
        ('ВАЗ (LADA)','ВАЗ (LADA)'),
        ('ВИС','ВИС'),
        ('ГАЗ','ГАЗ'),
        ('ЗАЗ','ЗАЗ'),
        ('ЗИЛ','ЗИЛ'),
        ('ИЖ','ИЖ'),
        ('ЛуАЗ','ЛуАЗ'),
        ('Москвич','Москвич'),
        ('РАФ','РАФ'),
        ('СМЗ','СМЗ'),
        ('ТагАЗ','ТагАЗ'),
        ('УАЗ','УАЗ'),
    )
    CONDITION =(
        ('Б/У','Б/У'),
        ('Новое','Новое'),
    )
    TIRES_WHEELS=(
        ('Шины','Шины'),
        ('Диски','Диски'),
        ('Колеса в сборе','Колеса в сборе'),
        ('Колпаки','Колпаки'),
        ('Комплектующие','Комплектующие'),
    )
    TIRES=(
        ('7"','7"'),
        ('8"','8"'),
        ('9"','9"'),
        ('10"','10"'),
        ('11"','11"'),
        ('12"','12"'),
        ('13"','13"'),
        ('14"','14"'),
        ('15"','15"'),
        ('16"','16"'),
        ('17"','17"'),
        ('18"','18"'),
        ('19"','19"'),
        ('20"','20"'),
        ('21"','21"'),
        ('22"','22"'),
        ('23"','23"'),
        ('24"','24"'),
        ('25"','25"'),
        ('26"','26"'),
        ('27"','27"'),
        ('28"','28"'),
        ('29"','29"'),
        ('30"','30"'),
    )
    TYPE_HEADLIGHT =(
        ('Основные фары','Основные фары'),
        ('Задние фары','Задние фары'),
        ('Противотуманные фары','Противотуманные фары'),
        ('Лампочки','Лампочки'),
    )
    OILS_HEMICALS=(
        ('Моторные масла','Моторные масла'),
        ('Трансмиссионные масла','Трансмиссионные масла'),
        ('Гидравлические масла','Гидравлические масла'),
        ('Автошампуни','Автошампуни'),
        ('Автоэмали, краски, лаки','Автоэмали, краски, лаки'),
        ('Герметики, клеи','Герметики, клеи'),
        ('Антифризы, тосолы','Антифризы, тосолы'),
        ('Антидождь','Антидождь'),
        ('Жидкости гидравлические','Жидкости гидравлические'),
        ('Жидкости омывателя стекла','Жидкости омывателя стекла'),
        ('Жидкости тормозные','Жидкости тормозные'),
        ('Полироли','Полироли'),
        ('Присадки, промыватели','Присадки, промыватели'),
        ('Смазки','Смазки'),
        ('Средства для очистки','Средства для очистки'),
    )
    ELECTRONICS_GPS =(
        ('GPS-навигаторы','GPS-навигаторы'),
        ('GPS-трекеры','GPS-трекеры'),
        ('Видеорегистраторы','Видеорегистраторы'),
        ('Камеры звднего вида','Камеры звднего вида'),
        ('Парктроники','Парктроники'),
        ('Радар-детекторы','Радар-детекторы'),
    )
    ACCESSORIES_TOOLS=(
        ('Аксессуары интерьера','Аксессуары интерьера'),
        ('Аксессуары экстерьера','Аксессуары экстерьера'),
        ('Брелоки, атрибутика','Брелоки, атрибутика'),
        ('Держатели, подставки, атрибутика','Держатели, подставки, атрибутика'),
        ('Дефлекторы, ветровики','Дефлекторы, ветровики'),
        ('Диагностическое оборудование','Диагностическое оборудование'),
        ('Домкраты','Домкраты'),
        ('Канистры','Канистры'),
        ('Коврики','Коврики'),
        ('Наборы автомобилиста','Наборы автомобилиста'),
        ('Наборы инструментов','Наборы инструментов'),
        ('Насосы','Насосы'),
        ('Компрессоры','Компрессоры'),
        ('Наклейки, накладки','Наклейки, накладки'),
        ('Оплетки, чехлы на руль','Оплетки, чехлы на руль'),
        ('Пленки для авто','Пленки для авто'),
        ('Подсветка и переключатели','Подсветка и переключатели'),
        ('Пуско-зарядные устройства','Пуско-зарядные устройства'),
        ('Пылесосы','Пылесосы'),
        ('Ручки КПП','Ручки КПП'),
        ('Сумки, органайзеры','Сумки, органайзеры'),
        ('Тенты для автомобиля','Тенты для автомобиля'),
        ('Тросы, лебедки','Тросы, лебедки'),
        ('Уход за авто','Уход за авто'),
        ('Чехлы для сидений','Чехлы для сидений'),
        ('Шторки, козырьки','Шторки, козырьки'),
        ('Щетки стеклоочистителя','Щетки стеклоочистителя'),
    )
    AUDIO_VIDEO=(
        ('CD, DVD-чейнжеры','CD, DVD-чейнжеры'),
        ('FM-трансмиттеры','FM-трансмиттеры'),
        ('Автоакустика, колонки','Автоакустика, колонки'),
        ('Автомагнитолы','Автомагнитолы'),
        ('Автомобильные рации','Автомобильные рации'),
        ('Аккустические полки, короба','Аккустические полки, короба'),
        ('Кабели, переходники','Кабели, переходники'),
        ('Усилители, сабвуферы','Усилители, сабвуферы'),
        ('Телевизоры, TV-тюнеры','Телевизоры, TV-тюнеры'),
        ('Переходные рамки','Переходные рамки'),
    )
    ANTI_THEFT=(
        ('Автосигнализация','Автосигнализация'),
        ('Иммобилайзеры','Иммобилайзеры'),
        ('Механические блокираторы','Механические блокираторы'),
        ('Спутниковые системы','Спутниковые системы'),
    )
    ROOF_TRAILERS=(
        ('Багажники, рейлинги','Багажники, рейлинги'),
        ('Боксы на крышу','Боксы на крышу'),
        ('Крепления для багажа','Крепления для багажа'),
        ('Прицепы','Прицепы'),
        ('Фаркопы','Фаркопы'),
    )
    MOTO_GEAR=(
        ('Шлемы','Шлемы'),
        ('Очки, маски','Очки, маски'),
        ('Мотозащита','Мотозащита'),
        ('Куртки','Куртки'),
        ('Обувь','Обувь'),
        ('Перчатки','Перчатки'),
        ('Штаны и джинсы','Штаны и джинсы'),
        ('Комбинезон','Комбинезон'),
        ('Аксессуары','Аксессуары'),
    )
    SIZE=(
        ('XXS','XXS'),
        ('XS','XS'),
        ('S','S'),
        ('M','M'),
        ('L','L'),
        ('XL','XL'),
        ('XXL','XXL'),
    )
    JACKET_SIZE=(
        ('XS (48)','XS (48)'),
        ('S (50)','S (50)'),
        ('M (52)','M (52)'),
        ('L (54)','L (54)'),
        ('XL (56)','XL (56)'),
        ('2XL (58)','2XL (58)'),
        ('3XL (60)','3XL (60)'),
        ('4XL (62)','4XL (62)'),
        ('5XL (64)','5XL (64)'),
        ('6XL (66)','6XL (66)'),
    )
    SHOE_SIZE=(
        ('35','35'),
        ('36','36'),
        ('37','37'),
        ('38','38'),
        ('39','39'),
        ('40','40'),
        ('41','41'),
        ('42','42'),
        ('43','43'),
        ('44','44'),
        ('45','45'),
        ('46','46'),
        ('47','47'),
        ('48','48'),
    )
    GLOVE_SIZE=(
        ('6 (XXS)','6 (XXS)'),
        ('7 (XS)','7 (XS)'),
        ('8 (S)','8 (S)'),
        ('9 (M)','9 (M)'),
        ('10 (L)','10 (L)'),
        ('11 (Xl)','11 (Xl)'),
        ('12 (2XL)','12 (2XL)'),
        ('13 (3XL)','13 (3XL)'),
    )
    PANT_SIZE=(
        ('XXS (36)','XXS (36)'),
        ('XS (38)','XS (38)'),
        ('S (40)','S (40)'),
        ('M (42)','M (42)'),
        ('L (44)','L (44)'),
        ('XL (46)','XL (46)'),
        ('2XL (48)','2XL (48)'),
        ('3XL (50)','3XL (50)'),
        ('4XL (52)','4XL (52)'),
        ('5XL (54)','5XL (54)'),
        ('6XL (56)','6XL (56)'),
    )
    JUMPSUIT_SIZE=(
        ('36','36'),
        ('38','38'),
        ('40','40'),
        ('42','42'),
        ('44','44'),
        ('46','46'),
        ('48','48'),
        ('50','50'),
        ('52','52'),
        ('54','54'),
        ('56','56'),
        ('58','58'),
        ('60','60'),
    )
    GENDER = (('Женский', 'Женский'), ('Мужской', 'Мужской'))

    spare = models.CharField(max_length=50, blank=True, choices = SPARE, verbose_name="Тип")
    type_of_headlight = models.CharField(max_length=50, blank=True, choices = TYPE_HEADLIGHT, verbose_name="Тип фары")
    mode_of_transport = models.CharField(max_length=50, blank=True, choices = MODE_TRANSPORT, verbose_name="Вид транспорта")
    brand = models.CharField(max_length=50, blank=True, choices = BRANDS, verbose_name="Марка")
    condition = models.CharField(max_length=50, blank=True, choices = CONDITION, verbose_name="Состояние")
    art = models.CharField(max_length=100, blank=True, verbose_name="Артикул")
    tires_wheels = models.CharField(max_length=50, blank=True, choices = TIRES_WHEELS, verbose_name="Тип")
    tires = models.CharField(max_length=50, blank=True, choices = TIRES, verbose_name="Диаметр")
    oils_car_chemicals = models.CharField(max_length=50, blank=True, choices = OILS_HEMICALS, verbose_name="Масла и автохимия")
    electronics_gps = models.CharField(max_length=50, blank=True, choices = ELECTRONICS_GPS, verbose_name="Автоэлектроника и gps")
    accessories_tools = models.CharField(max_length=50, blank=True, choices = ACCESSORIES_TOOLS, verbose_name="Аксессуары и инструменты")
    audio_video = models.CharField(max_length=50, blank=True, choices = AUDIO_VIDEO, verbose_name="Аудио и видео")
    anti_theft = models.CharField(max_length=50, blank=True, choices = ANTI_THEFT, verbose_name="Противоугонные системы")
    roof_trailers = models.CharField(max_length=50, blank=True, choices = ROOF_TRAILERS, verbose_name="Багажные системы и прицепы")
    moto_gear = models.CharField(max_length=50, blank=True, choices = MOTO_GEAR, verbose_name="Мотоэкипировка")
    gender = models.CharField(max_length=50, blank=True, choices = GENDER, verbose_name="Пол")
    size = models.CharField(max_length=50, blank=True, choices = SIZE, verbose_name="Размер")
    jacket_size = models.CharField(max_length=50, blank=True, choices = JACKET_SIZE, verbose_name="Размер куртки")
    shoe_size = models.CharField(max_length=50, blank=True, choices = SHOE_SIZE, verbose_name="Размер обуви")
    glove_size = models.CharField(max_length=50, blank=True, choices = GLOVE_SIZE, verbose_name="Размер перчатки")
    pant_size = models.CharField(max_length=50, blank=True, choices = PANT_SIZE, verbose_name="Размер штанов")
    jumpsuit_size = models.CharField(max_length=50, blank=True, choices = JUMPSUIT_SIZE, verbose_name="Размер комбинезона")

    class Meta:
        verbose_name = "Запчасти и автотовары"
        verbose_name_plural = "Запчасти и автотовары"
